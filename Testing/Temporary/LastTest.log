Start testing: May 06 14:23 CEST
----------------------------------------------------------
1/28 Testing: Read
1/28 Test: Read
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=READ"
Directory: /home/bkessler/Repositories/hatschet
"Read" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
<end of output>
Test time =   0.03 sec
----------------------------------------------------------
Test Passed.
"Read" end time: May 06 14:23 CEST
"Read" time elapsed: 00:00:00
----------------------------------------------------------

2/28 Testing: Moovac
2/28 Test: Moovac
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=MOOVAC"
Directory: /home/bkessler/Repositories/hatschet
"Moovac" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
starting moovac scheduling
Optimize a model with 73 rows, 37 columns and 164 nonzeros
Variable types: 0 continuous, 37 integer (12 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+04]
  RHS range        [1e+00, 2e+01]
Variable types: 0 continuous, 37 integer (12 binary)

Root relaxation: infeasible, 0 iterations, 0.00 seconds

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
Optimize a model with 73 rows, 37 columns and 164 nonzeros
Variable types: 0 continuous, 37 integer (12 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+04]
  RHS range        [1e+00, 2e+01]
Variable types: 0 continuous, 37 integer (12 binary)

Root relaxation: infeasible, 0 iterations, 0.00 seconds

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
Optimize a model with 73 rows, 37 columns and 164 nonzeros
Variable types: 0 continuous, 37 integer (12 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+04]
  RHS range        [1e+00, 2e+01]
Variable types: 0 continuous, 37 integer (12 binary)

Root relaxation: infeasible, 0 iterations, 0.00 seconds

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
Optimize a model with 73 rows, 37 columns and 164 nonzeros
Variable types: 0 continuous, 37 integer (12 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+04]
  RHS range        [1e+00, 2e+01]
Found heuristic solution: objective 17.0000000
Variable types: 0 continuous, 37 integer (12 binary)

Root relaxation: cutoff, 0 iterations, 0.00 seconds

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 17 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.700000000000e+01, best bound 1.700000000000e+01, gap 0.0000%
finished moovac scheduling
<end of output>
Test time =   0.23 sec
----------------------------------------------------------
Test Passed.
"Moovac" end time: May 06 14:23 CEST
"Moovac" time elapsed: 00:00:00
----------------------------------------------------------

3/28 Testing: ReadWriteReadSchedule
3/28 Test: ReadWriteReadSchedule
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=RWRS"
Directory: /home/bkessler/Repositories/hatschet
"ReadWriteReadSchedule" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
<end of output>
Test time =   0.09 sec
----------------------------------------------------------
Test Passed.
"ReadWriteReadSchedule" end time: May 06 14:23 CEST
"ReadWriteReadSchedule" time elapsed: 00:00:00
----------------------------------------------------------

4/28 Testing: ModuloSDC
4/28 Test: ModuloSDC
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=MODULOSDC"
Directory: /home/bkessler/Repositories/hatschet
"ModuloSDC" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
ModuloSDCScheduler: automatic set budget = 24(6 * 24)
Starting new iteration of ModuloSDC for II 4 with timeout 300(sec)
#### Begin of Iteration 1 at II 4 at time Fri May  6 14:23:22 2022
 with a
Elapsed run time is 0 (sec) with timeout 300 (sec)
Current Instruction: a
budget b : 24
use scheduled-time: 0 for a
MRT:
  load: 
    0: 
    1: 
    2: 
    3: 
MRT end
Add (no resource conflict) a == 0
#### End of Iteration


#### Begin of Iteration 2 at II 4 at time Fri May  6 14:23:22 2022
 with b
Elapsed run time is 0 (sec) with timeout 300 (sec)
Current Instruction: b
budget b : 23
use scheduled-time: 0 for b
MRT:
  load: 
    0: a, 
    1: 
    2: 
    3: 
MRT end
Add (conflict detected) b >= 1
backtrack because of b
begin backtracking(b , 0)
minTime:0
use minTime for evict 0
BACKTRACKING at evict time 0
resource conflict detected of b at 0
Resource conflict in backtracking for: a
Removing all constraints of a
a put back to sched queue
Check for dependency conflict at slot: 0
No dependency conflict
add constraint: b == 0
end backtracking
#### End of Iteration


#### Begin of Iteration 3 at II 4 at time Fri May  6 14:23:22 2022
 with a
Elapsed run time is 0 (sec) with timeout 300 (sec)
Current Instruction: a
budget b : 22
use scheduled-time: 0 for a
MRT:
  load: 
    0: b, 
    1: 
    2: 
    3: 
MRT end
Add (conflict detected) a >= 1
Put back a
#### End of Iteration


#### Begin of Iteration 4 at II 4 at time Fri May  6 14:23:22 2022
 with a
Elapsed run time is 0 (sec) with timeout 300 (sec)
Current Instruction: a
budget b : 21
use scheduled-time: 1 for a
MRT:
  load: 
    0: b, 
    1: 
    2: 
    3: 
MRT end
Add (no resource conflict) a == 1
#### End of Iteration


#### Begin of Iteration 5 at II 4 at time Fri May  6 14:23:22 2022
 with d
Elapsed run time is 0 (sec) with timeout 300 (sec)
Current Instruction: d
budget b : 20
use scheduled-time: 3 for d
MRT:
  load: 
    0: b, 
    1: a, 
    2: 
    3: 
MRT end
Add (no resource conflict) d == 3
#### End of Iteration


Result for II 4
a = 1
b = 0
c = 3
d = 3
Final MRT:
  load: 
    0: b, 
    1: a, 
    2: 
    3: d, 
MRT end
success
FOUND for II=4 after 0.003458 seconds
ModuloSDCScheduler: total times out of budget = 0
a = 1
b = 0
c = 3
d = 3
<end of output>
Test time =   0.05 sec
----------------------------------------------------------
Test Passed.
"ModuloSDC" end time: May 06 14:23 CEST
"ModuloSDC" time elapsed: 00:00:00
----------------------------------------------------------

5/28 Testing: API
5/28 Test: API
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=API"
Directory: /home/bkessler/Repositories/hatschet
"API" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
No actual API tests performed yet
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Passed.
"API" end time: May 06 14:23 CEST
"API" time elapsed: 00:00:00
----------------------------------------------------------

6/28 Testing: ASAPHC
6/28 Test: ASAPHC
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=ASAPHC"
Directory: /home/bkessler/Repositories/hatschet
"ASAPHC" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
<end of output>
Test time =   0.03 sec
----------------------------------------------------------
Test Passed.
"ASAPHC" end time: May 06 14:23 CEST
"ASAPHC" time elapsed: 00:00:00
----------------------------------------------------------

7/28 Testing: ALAPHC
7/28 Test: ALAPHC
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=ALAPHC"
Directory: /home/bkessler/Repositories/hatschet
"ALAPHC" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
<end of output>
Test time =   0.03 sec
----------------------------------------------------------
Test Passed.
"ALAPHC" end time: May 06 14:23 CEST
"ALAPHC" time elapsed: 00:00:00
----------------------------------------------------------

8/28 Testing: ULScheduler
8/28 Test: ULScheduler
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=ULScheduler"
Directory: /home/bkessler/Repositories/hatschet
"ULScheduler" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
Utility::printSchedule: Start
Scheduled Add1 at 0
Scheduled Mult1 at 3
Scheduled Add2 at 4
Scheduled Gain1 at 5
Scheduled Mult2 at 6
Scheduled Gain at 7
Scheduled Add3 at 0
Scheduled Gain2 at 1
Scheduled Gain3 at 2
Scheduled Add4 at 1
Scheduled Add5 at 0
Utility::printSchedule: Finished
<end of output>
Test time =   0.03 sec
----------------------------------------------------------
Test Passed.
"ULScheduler" end time: May 06 14:23 CEST
"ULScheduler" time elapsed: 00:00:00
----------------------------------------------------------

9/28 Testing: criticalpath
9/28 Test: criticalpath
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=CRITPATH"
Directory: /home/bkessler/Repositories/hatschet
"criticalpath" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
<end of output>
Test time =   0.05 sec
----------------------------------------------------------
Test Passed.
"criticalpath" end time: May 06 14:23 CEST
"criticalpath" time elapsed: 00:00:00
----------------------------------------------------------

10/28 Testing: KosarajuSCC
10/28 Test: KosarajuSCC
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=KOSARAJU"
Directory: /home/bkessler/Repositories/hatschet
"KosarajuSCC" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------

DFS on vertex_3 is done !!
DFS on vertex_6 is done !!
DFS on vertex_5 is done !!
DFS on vertex_4 is done !!
DFS on vertex_2 is done !!
DFS on vertex_1 is done !!
DFS on vertex_0 is done !!
DFS on vertex_8 is done !!
DFS on vertex_7 is done !!
-------------------------------------------------------------------------------------
DFS of Vertex 7 is finished
SCC_0 Has 1 Vertices
DFS of Vertex 8 is finished
SCC_1 Has 1 Vertices
DFS of Vertex 1 is finished
DFS of Vertex 2 is finished
DFS of Vertex 3 is finished
DFS of Vertex 0 is finished
SCC_2 Has 4 Vertices
DFS of Vertex 5 is finished
DFS of Vertex 6 is finished
DFS of Vertex 4 is finished
SCC_3 Has 3 Vertices

vertex_0 -- 0
vertex_1 -- 0
vertex_2 -- 0
vertex_3 -- 0
vertex_4 -- 0
vertex_5 -- 0
vertex_6 -- 0
vertex_7 -- 1
vertex_8 -- 0
0: vertex_7 

vertex_0 -- 0
vertex_1 -- 0
vertex_2 -- 0
vertex_3 -- 0
vertex_4 -- 0
vertex_5 -- 0
vertex_6 -- 0
vertex_7 -- 0
vertex_8 -- 1
0: vertex_8 

vertex_0 -- 1
vertex_1 -- 1
vertex_2 -- 1
vertex_3 -- 1
vertex_4 -- 0
vertex_5 -- 0
vertex_6 -- 0
vertex_7 -- 0
vertex_8 -- 0
0: vertex_1 1: vertex_2 2: vertex_3 3: vertex_0 

vertex_0 -- 0
vertex_1 -- 0
vertex_2 -- 0
vertex_3 -- 0
vertex_4 -- 1
vertex_5 -- 1
vertex_6 -- 1
vertex_7 -- 0
vertex_8 -- 0
0: vertex_5 1: vertex_6 2: vertex_4 
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Passed.
"KosarajuSCC" end time: May 06 14:23 CEST
"KosarajuSCC" time elapsed: 00:00:00
----------------------------------------------------------

11/28 Testing: CompareMSAlgorithms
11/28 Test: CompareMSAlgorithms
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=COMPAREMSALGORITHMS"
Directory: /home/bkessler/Repositories/hatschet
"CompareMSAlgorithms" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
Tests::compareModuloSchedulerTest: Expected II is 11
Tests::compareModuloSchedulerTest: ModuloSDC found II 11
Tests::compareModuloSchedulerTest: MoovacScheduler found II 11
Tests::compareModuloSchedulerTest: MoovacMinRegScheduler found II 11
Tests::compareModuloSchedulerTest: EichenbergerDavidson97Scheduler found II 11
<end of output>
Test time =   0.26 sec
----------------------------------------------------------
Test Passed.
"CompareMSAlgorithms" end time: May 06 14:23 CEST
"CompareMSAlgorithms" time elapsed: 00:00:00
----------------------------------------------------------

12/28 Testing: rationalIISchedulerTest
12/28 Test: rationalIISchedulerTest
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=RATIONALIISCHEDULER"
Directory: /home/bkessler/Repositories/hatschet
"rationalIISchedulerTest" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
RationalIIScheduler::resetContainer: start 
RationalIIScheduler::resetContainer: finished 
Tests::rationalIISchedulerTest: expected II is 5/3
Tests::rationalIISchedulerTest: found II 5/3
<end of output>
Test time =   0.10 sec
----------------------------------------------------------
Test Passed.
"rationalIISchedulerTest" end time: May 06 14:23 CEST
"rationalIISchedulerTest" time elapsed: 00:00:00
----------------------------------------------------------

13/28 Testing: rationalIISchedulerFimmelTest
13/28 Test: rationalIISchedulerFimmelTest
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=RATIONALIISCHEDULERFIMMEL"
Directory: /home/bkessler/Repositories/hatschet
"rationalIISchedulerFimmelTest" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
graphMLReader.parseGraph: comment or processing instruction expected
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
Tests::rationalIISchedulerFimmelTest: expected II is 5.333...
Tests::rationalIISchedulerFimmelTest: found II is 5.33333
<end of output>
Test time =   0.21 sec
----------------------------------------------------------
Test Passed.
"rationalIISchedulerFimmelTest" end time: May 06 14:23 CEST
"rationalIISchedulerFimmelTest" time elapsed: 00:00:00
----------------------------------------------------------

14/28 Testing: ratIIVerifierWrongMRTDetected
14/28 Test: ratIIVerifierWrongMRTDetected
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=ratIIVerifierWrongMRTDetected"
Directory: /home/bkessler/Repositories/hatschet
"ratIIVerifierWrongMRTDetected" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
RationalIIScheduler::resetContainer: start 
RationalIIScheduler::resetContainer: finished 
Start verify rational II schedule: < 2 1 2  >
Resource Constraint violated for adder in modulo slot 0 mod 5: used 4 of 3
<end of output>
Test time =   0.09 sec
----------------------------------------------------------
Test Passed.
"ratIIVerifierWrongMRTDetected" end time: May 06 14:23 CEST
"ratIIVerifierWrongMRTDetected" time elapsed: 00:00:00
----------------------------------------------------------

15/28 Testing: ratIIVerifierWrongCausalityDetected
15/28 Test: ratIIVerifierWrongCausalityDetected
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=ratIIVerifierWrongCausalityDetected"
Directory: /home/bkessler/Repositories/hatschet
"ratIIVerifierWrongCausalityDetected" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
RationalIIScheduler::resetContainer: start 
RationalIIScheduler::resetContainer: finished 
Start verify rational II schedule: < 1 1 3  >
Edge Id: 5. From Node A4 to A1 (Delay 0 Distance 2) depType Data violated: 6 + 1 + 0 <= 4 + 2(sample 2)
Edge Id: 5. From Node A4 to A1 (Delay 0 Distance 2) depType Data violated: 6 + 1 + 0 <= 4 + 2(sample 2)
<end of output>
Test time =   0.10 sec
----------------------------------------------------------
Test Passed.
"ratIIVerifierWrongCausalityDetected" end time: May 06 14:23 CEST
"ratIIVerifierWrongCausalityDetected" time elapsed: 00:00:00
----------------------------------------------------------

16/28 Testing: uniformRatII
16/28 Test: uniformRatII
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=UNIFORMRATIONALIISCHEDULER"
Directory: /home/bkessler/Repositories/hatschet
"uniformRatII" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 5
RationalIISchedulerLayer::schedule: samples: 3
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 1.5
RationalIISchedulerLayer::schedule: resMinII is 1.66667
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 3 / 5
RationalIISchedulerLayer::schedule: max. no. of iterations 1
  Lower II: 1
  Upper II: 2
  number of lower IIs: 1
  number of upper IIs: 2
  dominance of lower IIs: 0
    errAccumulator: 1
    errAccumulator: 2
IIs: < 0 2 3 >
set min delta (0) = 0
set min delta (2) = 3
UniformRationalIIScheduler.schedule: try to solve for s / m : 3 / 5
Finished solving: OPTIMAL
------------------------
UniformRationalIIScheduler.schedule: Found result is OPTIMAL
UniformRationalIIScheduler.schedule: this solution is s / m : 3 / 5
UniformRationalIIScheduler.schedule: II: 1.66667 (integer minII 2)
UniformRationalIIScheduler.schedule: throughput: 0.6
------------------------
----Samples: 3 mod: 5 maxLat: -1
----Found IIs: 0  2  3  
----Resulting Insertion latency: 2  1  2  
----Throughput: 0.6
Printing absolute start times
  Insertion time 0
    A1 - 1
    A2 - 0
    A3 - 2
    A4 - 3
    A5 - 4
  Insertion time 2
    A1 - 3
    A2 - 2
    A3 - 4
    A4 - 5
    A5 - 6
  Insertion time 3
    A1 - 4
    A2 - 3
    A3 - 5
    A4 - 6
    A5 - 7
-------
Printing modulo 5 start times
  Insertion time 0
    A1 - 1
    A2 - 0
    A3 - 2
    A4 - 3
    A5 - 4
  Insertion time 2
    A1 - 3
    A2 - 2
    A3 - 4
    A4 - 0
    A5 - 1
  Insertion time 3
    A1 - 4
    A2 - 3
    A3 - 0
    A4 - 1
    A5 - 2
-------
RationalIISchedulerLayer::verifySchedule: start verifier for II=5/3
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:A2_0(ID 4)
Vertex:A1_2(ID 3)
Vertex:A1_0(ID 1)
Vertex:A1_1(ID 2)
Vertex:A2_2(ID 6)
Vertex:A3_0(ID 7)
Vertex:A4_2(ID 12)
Vertex:A5_0(ID 13)
Vertex:A5_1(ID 14)
Vertex:A5_2(ID 15)
Vertex:A3_1(ID 8)
Vertex:A3_2(ID 9)
Vertex:A4_0(ID 10)
Vertex:A4_1(ID 11)
Vertex:A2_1(ID 5)
Edge Id: 8. From Node A3_1 to A4_1 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node A3_2 to A4_2 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node A4_0 to A5_0 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node A4_1 to A5_1 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node A4_2 to A5_2 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node A4_1 to A1_0 (Delay 0 Distance 1) depType Data
Edge Id: 14. From Node A4_2 to A1_1 (Delay 0 Distance 1) depType Data
Edge Id: 15. From Node A4_0 to A1_2 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node A2_0 to A3_0 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node A2_1 to A3_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node A2_2 to A3_2 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node A1_0 to A3_0 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node A1_1 to A3_1 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node A1_2 to A3_2 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node A3_0 to A4_0 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: adder with limit/vertices 3/15, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex A2_0 with adder
Registered vertex A1_2 with adder
Registered vertex A1_0 with adder
Registered vertex A1_1 with adder
Registered vertex A2_2 with adder
Registered vertex A3_0 with adder
Registered vertex A4_2 with adder
Registered vertex A5_0 with adder
Registered vertex A5_1 with adder
Registered vertex A5_2 with adder
Registered vertex A3_1 with adder
Registered vertex A3_2 with adder
Registered vertex A4_0 with adder
Registered vertex A4_1 with adder
Registered vertex A2_1 with adder
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::uniformRationalIISchedulerTest: expected II is 5/3
Tests::uniformRationalIISchedulerTest: found II 5/3
<end of output>
Test time =   0.04 sec
----------------------------------------------------------
Test Passed.
"uniformRatII" end time: May 06 14:23 CEST
"uniformRatII" time elapsed: 00:00:00
----------------------------------------------------------

17/28 Testing: uniformRatIINew
17/28 Test: uniformRatIINew
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=UNIFORMRATIONALIISCHEDULERNEW"
Directory: /home/bkessler/Repositories/hatschet
"uniformRatIINew" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 5
RationalIISchedulerLayer::schedule: samples: 3
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 1.5
RationalIISchedulerLayer::schedule: resMinII is 1.66667
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 3 / 5
RationalIISchedulerLayer::schedule: max. no. of iterations 1
  Lower II: 1
  Upper II: 2
  number of lower IIs: 1
  number of upper IIs: 2
  dominance of lower IIs: 0
    errAccumulator: 1
    errAccumulator: 2
IIs: < 0 2 3 >
set min delta (0) = 0
set min delta (2) = 3
UniformRationalIIScheduler.schedule: try to solve for s / m : 3 / 5
Finished solving: OPTIMAL
------------------------
UniformRationalIIScheduler.schedule: Found result is OPTIMAL
UniformRationalIIScheduler.schedule: this solution is s / m : 3 / 5
UniformRationalIIScheduler.schedule: II: 1.66667 (integer minII 2)
UniformRationalIIScheduler.schedule: throughput: 0.6
------------------------
----Samples: 3 mod: 5 maxLat: -1
----Found IIs: 0  2  3  
----Resulting Insertion latency: 2  1  2  
----Throughput: 0.6
Printing absolute start times
  Insertion time 0
    A1 - 1
    A2 - 0
    A3 - 2
    A4 - 3
    A5 - 4
  Insertion time 2
    A1 - 3
    A2 - 2
    A3 - 4
    A4 - 5
    A5 - 6
  Insertion time 3
    A1 - 4
    A2 - 3
    A3 - 5
    A4 - 6
    A5 - 7
-------
Printing modulo 5 start times
  Insertion time 0
    A1 - 1
    A2 - 0
    A3 - 2
    A4 - 3
    A5 - 4
  Insertion time 2
    A1 - 3
    A2 - 2
    A3 - 4
    A4 - 0
    A5 - 1
  Insertion time 3
    A1 - 4
    A2 - 3
    A3 - 0
    A4 - 1
    A5 - 2
-------
RationalIISchedulerLayer::verifySchedule: start verifier for II=5/3
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:A2_0(ID 4)
Vertex:A1_2(ID 3)
Vertex:A1_0(ID 1)
Vertex:A1_1(ID 2)
Vertex:A2_2(ID 6)
Vertex:A3_0(ID 7)
Vertex:A4_2(ID 12)
Vertex:A5_0(ID 13)
Vertex:A5_1(ID 14)
Vertex:A5_2(ID 15)
Vertex:A3_1(ID 8)
Vertex:A3_2(ID 9)
Vertex:A4_0(ID 10)
Vertex:A4_1(ID 11)
Vertex:A2_1(ID 5)
Edge Id: 8. From Node A3_1 to A4_1 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node A3_2 to A4_2 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node A4_0 to A5_0 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node A4_1 to A5_1 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node A4_2 to A5_2 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node A4_1 to A1_0 (Delay 0 Distance 1) depType Data
Edge Id: 14. From Node A4_2 to A1_1 (Delay 0 Distance 1) depType Data
Edge Id: 15. From Node A4_0 to A1_2 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node A2_0 to A3_0 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node A2_1 to A3_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node A2_2 to A3_2 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node A1_0 to A3_0 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node A1_1 to A3_1 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node A1_2 to A3_2 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node A3_0 to A4_0 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: adder with limit/vertices 3/15, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex A2_0 with adder
Registered vertex A1_2 with adder
Registered vertex A1_0 with adder
Registered vertex A1_1 with adder
Registered vertex A2_2 with adder
Registered vertex A3_0 with adder
Registered vertex A4_2 with adder
Registered vertex A5_0 with adder
Registered vertex A5_1 with adder
Registered vertex A5_2 with adder
Registered vertex A3_1 with adder
Registered vertex A3_2 with adder
Registered vertex A4_0 with adder
Registered vertex A4_1 with adder
Registered vertex A2_1 with adder
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::uniformRationalIISchedulerTest: expected II is 5/3
Tests::uniformRationalIISchedulerTest: found II 5/3
<end of output>
Test time =   0.04 sec
----------------------------------------------------------
Test Passed.
"uniformRatIINew" end time: May 06 14:23 CEST
"uniformRatIINew" time elapsed: 00:00:00
----------------------------------------------------------

18/28 Testing: nonUniformRatII
18/28 Test: nonUniformRatII
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=NONUNIFORMRATIONALIISCHEDULER"
Directory: /home/bkessler/Repositories/hatschet
"nonUniformRatII" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 5
RationalIISchedulerLayer::schedule: samples: 3
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 1.5
RationalIISchedulerLayer::schedule: resMinII is 1.66667
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 3 / 5
RationalIISchedulerLayer::schedule: max. no. of iterations 1
NonUniformRationalIIScheduler.scheduleIteration: try to solve for s / m : 3 / 5
Finished solving: OPTIMAL
ScaLP results: Objective: 7
Variables:
  A3_0     =     1
  A2_2     =     3
  A1_2_2   =     0
  A1_2_3   =     1
  A1_2_4   =     0
  A2_0_0   =     1
  A2_0_1   =     0
  A2_0_2   =     0
  A2_0_3   =     0
  A2_0_4   =     0
  A2_1_0   =     0
  A2_1_1   =     0
  A2_1_2   =     1
  A2_1_3   =     0
  A2_1_4   =     0
  A2_2_0   =     0
  A2_2_1   =     -0
  k_A1_1   =     0
  k_A1_2   =     0
  k_A2_0   =     0
  k_A2_1   =     0
  k_A2_2   =     0
  k_A3_0   =     0
  A2_1     =     2
  A4_0     =     2
  A4_1     =     4
  A4_1_1   =     0
  A4_1_2   =     0
  A4_1_3   =     0
  A4_1_4   =     1
  A4_2_0   =     1
  A4_2_1   =     0
  A4_2_2   =     0
  A4_2_3   =     0
  A4_2_4   =     0
  A5_0_0   =     0
  A5_0_1   =     -0
  A5_0_2   =     0
  A5_0_3   =     -0
  A5_0_4   =     1
  A5_1_0   =     0
  A5_1_1   =     1
  A5_1_2   =     0
  A5_1_3   =     0
  A5_1_4   =     0
  A5_2_0   =     0
  A5_2_1   =     1
  A5_2_2   =     0
  A5_2_3   =     0
  A5_2_4   =     0
  A1_0     =     0
  A1_0_0   =     1
  A1_0_1   =     0
  A1_0_2   =     0
  A1_0_3   =     0
  A1_0_4   =     0
  k_A3_1   =     0
  k_A3_2   =     0
  k_A4_0   =     0
  k_A4_1   =     0
  k_A4_2   =     1
  k_A5_0   =     -0
  k_A5_1   =     1
  k_A5_2   =     1
  A2_2_2   =     0
  A2_2_3   =     1
  A2_2_4   =     0
  A3_0_0   =     0
  A3_0_1   =     1
  A3_0_2   =     0
  A3_0_3   =     0
  A3_0_4   =     0
  A3_1_0   =     0
  A3_1_1   =     0
  A3_1_2   =     0
  A3_1_3   =     1
  A3_1_4   =     0
  A3_2_0   =     -0
  A3_2_1   =     0
  A3_2_2   =     0
  A3_2_3   =     0
  A3_2_4   =     1
  A4_0_0   =     0
  A4_0_1   =     0
  A4_0_2   =     1
  A4_0_3   =     0
  A4_0_4   =     0
  A4_1_0   =     0
  A3_2     =     4
  A4_2     =     5
  A1_2     =     3
  A1_1     =     2
  A2_0     =     -0
  A3_1     =     3
  k_A1_0   =     0
  A5_0     =     4
  A5_1     =     6
  A5_2     =     6
  supersink =     7
  A1_1_0   =     -0
  A1_1_1   =     0
  A1_1_2   =     1
  A1_1_3   =     0
  A1_1_4   =     0
  A1_2_0   =     0
  A1_2_1   =     0
Durations:
  preparation:  4e-06
  construction: 0.000403
  solving:      0.020668

------------------------
NonUniformRationalIIScheduler.scheduleIteration: Found result is OPTIMAL
NonUniformRationalIIScheduler.scheduleIteration: this solution is s / m : 3 / 5
NonUniformRationalIIScheduler.scheduleIteration: II: 1.66667 (integer minII 2)
NonUniformRationalIIScheduler.scheduleIteration: throughput: 0.6
------------------------
----Samples: 3 mod: 5 maxLat: -1
----Throughput: 0.6
Printing absolute start times
  Sample number 0
    A1 - 0
    A2 - 0
    A3 - 1
    A4 - 2
    A5 - 4
  Sample number 1
    A1 - 2
    A2 - 2
    A3 - 3
    A4 - 4
    A5 - 6
  Sample number 2
    A1 - 3
    A2 - 3
    A3 - 4
    A4 - 5
    A5 - 6
-------
Printing modulo 5 start times
  Sample number 0
    A1 - 0
    A2 - 0
    A3 - 1
    A4 - 2
    A5 - 4
  Sample number 1
    A1 - 2
    A2 - 2
    A3 - 3
    A4 - 4
    A5 - 1
  Sample number 2
    A1 - 3
    A2 - 3
    A3 - 4
    A4 - 0
    A5 - 1
-------
RationalIISchedulerLayer::verifySchedule: start verifier for II=5/3
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:A5_2(ID 15)
Vertex:A4_1(ID 11)
Vertex:A2_1(ID 5)
Vertex:A3_2(ID 9)
Vertex:A1_1(ID 2)
Vertex:A1_2(ID 3)
Vertex:A5_0(ID 13)
Vertex:A2_0(ID 4)
Vertex:A2_2(ID 6)
Vertex:A1_0(ID 1)
Vertex:A4_2(ID 12)
Vertex:A5_1(ID 14)
Vertex:A4_0(ID 10)
Vertex:A3_0(ID 7)
Vertex:A3_1(ID 8)
Edge Id: 15. From Node A4_0 to A1_2 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node A3_1 to A4_1 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node A3_2 to A4_2 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node A4_0 to A5_0 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node A4_1 to A5_1 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node A4_2 to A5_2 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node A4_1 to A1_0 (Delay 0 Distance 1) depType Data
Edge Id: 14. From Node A4_2 to A1_1 (Delay 0 Distance 1) depType Data
Edge Id: 4. From Node A1_0 to A3_0 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node A1_1 to A3_1 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node A1_2 to A3_2 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node A3_0 to A4_0 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node A2_0 to A3_0 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node A2_1 to A3_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node A2_2 to A3_2 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: adder with limit/vertices 3/15, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex A5_2 with adder
Registered vertex A4_1 with adder
Registered vertex A2_1 with adder
Registered vertex A3_2 with adder
Registered vertex A1_1 with adder
Registered vertex A1_2 with adder
Registered vertex A5_0 with adder
Registered vertex A2_0 with adder
Registered vertex A2_2 with adder
Registered vertex A1_0 with adder
Registered vertex A4_2 with adder
Registered vertex A5_1 with adder
Registered vertex A4_0 with adder
Registered vertex A3_0 with adder
Registered vertex A3_1 with adder
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::uniformRationalIISchedulerTest: expected II is 5/3
Tests::uniformRationalIISchedulerTest: found II 5/3
<end of output>
Test time =   0.06 sec
----------------------------------------------------------
Test Passed.
"nonUniformRatII" end time: May 06 14:23 CEST
"nonUniformRatII" time elapsed: 00:00:00
----------------------------------------------------------

19/28 Testing: ratIIModuloQ
19/28 Test: ratIIModuloQ
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=RATIONALIIMODULOQ"
Directory: /home/bkessler/Repositories/hatschet
"ratIIModuloQ" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 5
RationalIISchedulerLayer::schedule: samples: 2
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 2
RationalIISchedulerLayer::schedule: resMinII is 2.5
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 2 / 5
RationalIISchedulerLayer::schedule: max. no. of iterations 1
MODULO Q SCHEDULER graph: 
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:vertex_0(ID 0)
Vertex:vertex_1(ID 1)
Vertex:vertex_2(ID 2)
Vertex:vertex_3(ID 3)
Vertex:vertex_4(ID 4)
Vertex:vertex_5(ID 5)
Vertex:vertex_6(ID 6)
Vertex:vertex_7(ID 7)
Vertex:vertex_8(ID 8)
Vertex:vertex_9(ID 9)
Vertex:vertex_10(ID 10)
Vertex:vertex_11(ID 11)
Vertex:vertex_12(ID 12)
Vertex:vertex_13(ID 13)
Edge Id: 1. From Node vertex_0 to vertex_2 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node vertex_1 to vertex_2 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node vertex_2 to vertex_3 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node vertex_3 to vertex_4 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node vertex_3 to vertex_0 (Delay 0 Distance 4) depType Data
Edge Id: 6. From Node vertex_5 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node vertex_12 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node vertex_13 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node vertex_6 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node vertex_7 to vertex_8 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node vertex_8 to vertex_9 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node vertex_9 to vertex_6 (Delay 0 Distance 2) depType Data
Edge Id: 13. From Node vertex_9 to vertex_10 (Delay 0 Distance 0) depType Data
Edge Id: 14. From Node vertex_9 to vertex_11 (Delay 0 Distance 0) depType Data

MODULO Q SCHEDULER resource model: 
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: red with limit/vertices 2/5, latency 2, blockingTime 1, physicalDelay 0
Resource Model has limited resource: green with limit/vertices 4/9, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex vertex_0 with red
Registered vertex vertex_1 with red
Registered vertex vertex_2 with red
Registered vertex vertex_3 with red
Registered vertex vertex_4 with red
Registered vertex vertex_5 with green
Registered vertex vertex_6 with green
Registered vertex vertex_7 with green
Registered vertex vertex_8 with green
Registered vertex vertex_9 with green
Registered vertex vertex_10 with green
Registered vertex vertex_11 with green
Registered vertex vertex_12 with green
Registered vertex vertex_13 with green
------------------------------------------------------------------------------------

M: 5
S: 2
Creating 'optimal' initiation interval sequence
  Lower II: 2
  Upper II: 3
  number of lower IIs: 1
  number of upper IIs: 1
  dominance of lower IIs: 1
    errAccumulator: 1
IIs: < 0 3 >
Start scheduling Attempt!
Latency Sequence: 
0 3 
Initiation Intervals: 
3 2 
setting MRT for latency sequence '0 3 '
Created resource copy from 'red' -> 'red'
Created resource copy from 'green' -> 'green'
Constructing dummy MRT now
Finished constructing dummy MRT now
Found limited resource with limit modulo #samples == 0 - build trivial MRT for this resource
specified MRT column height = 1 for resource red at column 0
specified MRT column height = 1 for resource red at column 1
specified MRT column height = 1 for resource red at column 2
specified MRT column height = 1 for resource red at column 3
specified MRT column height = 1 for resource red at column 4
Finished constructing dummy MRT now
Found limited resource with limit modulo #samples == 0 - build trivial MRT for this resource
specified MRT column height = 2 for resource green at column 0
specified MRT column height = 2 for resource green at column 1
specified MRT column height = 2 for resource green at column 2
specified MRT column height = 2 for resource green at column 3
specified MRT column height = 2 for resource green at column 4
MRT
  Resource red
0000000000 0000000000 0000000000 0000000000 0000000000 
  Resource green
0000000000 0000000000 0000000000 0000000000 0000000000 
0000000000 0000000000 0000000000 0000000000 0000000000 
Edge: vertex_0 -> vertex_2, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_1 -> vertex_2, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_2 -> vertex_3, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_3 -> vertex_4, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_3 -> vertex_0, distance: 4
  omega: 10
  omega_ij_min: 1000000
  omega: 10
  omega_ij_min: 10
  resulting omega_ij_min: 10
Edge: vertex_5 -> vertex_7, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_12 -> vertex_7, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_13 -> vertex_7, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_6 -> vertex_7, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_7 -> vertex_8, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_8 -> vertex_9, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_9 -> vertex_6, distance: 2
  omega: 5
  omega_ij_min: 1000000
  omega: 5
  omega_ij_min: 5
  resulting omega_ij_min: 5
Edge: vertex_9 -> vertex_10, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_9 -> vertex_11, distance: 0
  resulting omega_ij_min: 0
SOLVER INTERNAL
MINIMIZE
  supersink
SUBJECT TO
  k_0 >= 0.000000
  time_0 >= 0.000000
  k_1 >= 0.000000
  time_1 >= 0.000000
  k_2 >= 0.000000
  time_2 >= 0.000000
  k_3 >= 0.000000
  time_3 >= 0.000000
  k_4 >= 0.000000
  time_4 >= 0.000000
  k_5 >= 0.000000
  time_5 >= 0.000000
  k_6 >= 0.000000
  time_6 >= 0.000000
  k_7 >= 0.000000
  time_7 >= 0.000000
  k_8 >= 0.000000
  time_8 >= 0.000000
  k_9 >= 0.000000
  time_9 >= 0.000000
  k_10 >= 0.000000
  time_10 >= 0.000000
  k_11 >= 0.000000
  time_11 >= 0.000000
  k_12 >= 0.000000
  time_12 >= 0.000000
  k_13 >= 0.000000
  time_13 >= 0.000000
  -a_1_0 - 2.000000 a_2_0 - 3.000000 a_3_0 - 4.000000 a_4_0 - 5.000000 k_0 + time_0 = 0.000000
  a_0_0 + a_1_0 + a_2_0 + a_3_0 + a_4_0 = 1.000000
  -a_1_1 - 2.000000 a_2_1 - 3.000000 a_3_1 - 4.000000 a_4_1 - 5.000000 k_1 + time_1 = 0.000000
  a_0_1 + a_1_1 + a_2_1 + a_3_1 + a_4_1 = 1.000000
  -a_1_2 - 2.000000 a_2_2 - 3.000000 a_3_2 - 4.000000 a_4_2 - 5.000000 k_2 + time_2 = 0.000000
  a_0_2 + a_1_2 + a_2_2 + a_3_2 + a_4_2 = 1.000000
  -a_1_3 - 2.000000 a_2_3 - 3.000000 a_3_3 - 4.000000 a_4_3 - 5.000000 k_3 + time_3 = 0.000000
  a_0_3 + a_1_3 + a_2_3 + a_3_3 + a_4_3 = 1.000000
  -a_1_4 - 2.000000 a_2_4 - 3.000000 a_3_4 - 4.000000 a_4_4 - 5.000000 k_4 + time_4 = 0.000000
  a_0_4 + a_1_4 + a_2_4 + a_3_4 + a_4_4 = 1.000000
  -a_1_5 - 2.000000 a_2_5 - 3.000000 a_3_5 - 4.000000 a_4_5 - 5.000000 k_5 + time_5 = 0.000000
  a_0_5 + a_1_5 + a_2_5 + a_3_5 + a_4_5 = 1.000000
  -a_1_6 - 2.000000 a_2_6 - 3.000000 a_3_6 - 4.000000 a_4_6 - 5.000000 k_6 + time_6 = 0.000000
  a_0_6 + a_1_6 + a_2_6 + a_3_6 + a_4_6 = 1.000000
  -a_1_7 - 2.000000 a_2_7 - 3.000000 a_3_7 - 4.000000 a_4_7 - 5.000000 k_7 + time_7 = 0.000000
  a_0_7 + a_1_7 + a_2_7 + a_3_7 + a_4_7 = 1.000000
  -a_1_8 - 2.000000 a_2_8 - 3.000000 a_3_8 - 4.000000 a_4_8 - 5.000000 k_8 + time_8 = 0.000000
  a_0_8 + a_1_8 + a_2_8 + a_3_8 + a_4_8 = 1.000000
  -a_1_9 - 2.000000 a_2_9 - 3.000000 a_3_9 - 4.000000 a_4_9 - 5.000000 k_9 + time_9 = 0.000000
  a_0_9 + a_1_9 + a_2_9 + a_3_9 + a_4_9 = 1.000000
  -a_1_10 - 2.000000 a_2_10 - 3.000000 a_3_10 - 4.000000 a_4_10 - 5.000000 k_10 + time_10 = 0.000000
  a_0_10 + a_1_10 + a_2_10 + a_3_10 + a_4_10 = 1.000000
  -a_1_11 - 2.000000 a_2_11 - 3.000000 a_3_11 - 4.000000 a_4_11 - 5.000000 k_11 + time_11 = 0.000000
  a_0_11 + a_1_11 + a_2_11 + a_3_11 + a_4_11 = 1.000000
  -a_1_12 - 2.000000 a_2_12 - 3.000000 a_3_12 - 4.000000 a_4_12 - 5.000000 k_12 + time_12 = 0.000000
  a_0_12 + a_1_12 + a_2_12 + a_3_12 + a_4_12 = 1.000000
  -a_1_13 - 2.000000 a_2_13 - 3.000000 a_3_13 - 4.000000 a_4_13 - 5.000000 k_13 + time_13 = 0.000000
  a_0_13 + a_1_13 + a_2_13 + a_3_13 + a_4_13 = 1.000000
  a_0_0 + a_0_1 + a_0_2 + a_0_3 + a_0_4 <= 1.000000
  a_1_0 + a_1_1 + a_1_2 + a_1_3 + a_1_4 <= 1.000000
  a_2_0 + a_2_1 + a_2_2 + a_2_3 + a_2_4 <= 1.000000
  a_3_0 + a_3_1 + a_3_2 + a_3_3 + a_3_4 <= 1.000000
  a_4_0 + a_4_1 + a_4_2 + a_4_3 + a_4_4 <= 1.000000
  a_0_10 + a_0_11 + a_0_12 + a_0_13 + a_0_5 + a_0_6 + a_0_7 + a_0_8 + a_0_9 <= 2.000000
  a_1_10 + a_1_11 + a_1_12 + a_1_13 + a_1_5 + a_1_6 + a_1_7 + a_1_8 + a_1_9 <= 2.000000
  a_2_10 + a_2_11 + a_2_12 + a_2_13 + a_2_5 + a_2_6 + a_2_7 + a_2_8 + a_2_9 <= 2.000000
  a_3_10 + a_3_11 + a_3_12 + a_3_13 + a_3_5 + a_3_6 + a_3_7 + a_3_8 + a_3_9 <= 2.000000
  a_4_10 + a_4_11 + a_4_12 + a_4_13 + a_4_5 + a_4_6 + a_4_7 + a_4_8 + a_4_9 <= 2.000000
  -time_0 + time_2 >= 2.000000
  -time_1 + time_2 >= 2.000000
  -time_2 + time_3 >= 2.000000
  -time_3 + time_4 >= 2.000000
  time_0 - time_3 >= -8.000000
  -time_5 + time_7 >= 1.000000
  -time_12 + time_7 >= 1.000000
  -time_13 + time_7 >= 1.000000
  -time_6 + time_7 >= 1.000000
  -time_7 + time_8 >= 1.000000
  -time_8 + time_9 >= 1.000000
  time_6 - time_9 >= -4.000000
  time_10 - time_9 >= 1.000000
  time_11 - time_9 >= 1.000000
  supersink >= 0.000000
  supersink - time_4 >= 2.000000
  supersink - time_10 >= 1.000000
  supersink - time_11 >= 1.000000
BOUNDS
  a_0_0 <= 1
  a_0_1 <= 1
  a_0_10 <= 1
  a_0_11 <= 1
  a_0_12 <= 1
  a_0_13 <= 1
  a_0_2 <= 1
  a_0_3 <= 1
  a_0_4 <= 1
  a_0_5 <= 1
  a_0_6 <= 1
  a_0_7 <= 1
  a_0_8 <= 1
  a_0_9 <= 1
  a_1_0 <= 1
  a_1_1 <= 1
  a_1_10 <= 1
  a_1_11 <= 1
  a_1_12 <= 1
  a_1_13 <= 1
  a_1_2 <= 1
  a_1_3 <= 1
  a_1_4 <= 1
  a_1_5 <= 1
  a_1_6 <= 1
  a_1_7 <= 1
  a_1_8 <= 1
  a_1_9 <= 1
  a_2_0 <= 1
  a_2_1 <= 1
  a_2_10 <= 1
  a_2_11 <= 1
  a_2_12 <= 1
  a_2_13 <= 1
  a_2_2 <= 1
  a_2_3 <= 1
  a_2_4 <= 1
  a_2_5 <= 1
  a_2_6 <= 1
  a_2_7 <= 1
  a_2_8 <= 1
  a_2_9 <= 1
  a_3_0 <= 1
  a_3_1 <= 1
  a_3_10 <= 1
  a_3_11 <= 1
  a_3_12 <= 1
  a_3_13 <= 1
  a_3_2 <= 1
  a_3_3 <= 1
  a_3_4 <= 1
  a_3_5 <= 1
  a_3_6 <= 1
  a_3_7 <= 1
  a_3_8 <= 1
  a_3_9 <= 1
  a_4_0 <= 1
  a_4_1 <= 1
  a_4_10 <= 1
  a_4_11 <= 1
  a_4_12 <= 1
  a_4_13 <= 1
  a_4_2 <= 1
  a_4_3 <= 1
  a_4_4 <= 1
  a_4_5 <= 1
  a_4_6 <= 1
  a_4_7 <= 1
  a_4_8 <= 1
  a_4_9 <= 1
  k_0 FREE
  k_1 FREE
  k_10 FREE
  k_11 FREE
  k_12 FREE
  k_13 FREE
  k_2 FREE
  k_3 FREE
  k_4 FREE
  k_5 FREE
  k_6 FREE
  k_7 FREE
  k_8 FREE
  k_9 FREE
  supersink FREE
  time_0 FREE
  time_1 FREE
  time_10 FREE
  time_11 FREE
  time_12 FREE
  time_13 FREE
  time_2 FREE
  time_3 FREE
  time_4 FREE
  time_5 FREE
  time_6 FREE
  time_7 FREE
  time_8 FREE
  time_9 FREE
BINARY
  a_0_0
  a_0_1
  a_0_10
  a_0_11
  a_0_12
  a_0_13
  a_0_2
  a_0_3
  a_0_4
  a_0_5
  a_0_6
  a_0_7
  a_0_8
  a_0_9
  a_1_0
  a_1_1
  a_1_10
  a_1_11
  a_1_12
  a_1_13
  a_1_2
  a_1_3
  a_1_4
  a_1_5
  a_1_6
  a_1_7
  a_1_8
  a_1_9
  a_2_0
  a_2_1
  a_2_10
  a_2_11
  a_2_12
  a_2_13
  a_2_2
  a_2_3
  a_2_4
  a_2_5
  a_2_6
  a_2_7
  a_2_8
  a_2_9
  a_3_0
  a_3_1
  a_3_10
  a_3_11
  a_3_12
  a_3_13
  a_3_2
  a_3_3
  a_3_4
  a_3_5
  a_3_6
  a_3_7
  a_3_8
  a_3_9
  a_4_0
  a_4_1
  a_4_10
  a_4_11
  a_4_12
  a_4_13
  a_4_2
  a_4_3
  a_4_4
  a_4_5
  a_4_6
  a_4_7
  a_4_8
  a_4_9
GENERAL
  k_0
  k_1
  k_10
  k_11
  k_12
  k_13
  k_2
  k_3
  k_4
  k_5
  k_6
  k_7
  k_8
  k_9
  supersink
  time_0
  time_1
  time_10
  time_11
  time_12
  time_13
  time_2
  time_3
  time_4
  time_5
  time_6
  time_7
  time_8
  time_9
END

Time to solve: 0.041337 sec
ScaLP status:OPTIMAL
Found feasible solution!
Rational II modulo schedule found with:
  S=2
  M=5
  IIs=3 2 
  Latency=10
RationalIISchedulerLayer::verifySchedule: start verifier for II=5/2
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:vertex_7_1(ID 16)
Vertex:vertex_8_0(ID 17)
Vertex:vertex_8_1(ID 18)
Vertex:vertex_9_0(ID 19)
Vertex:vertex_0_0(ID 1)
Vertex:vertex_1_0(ID 3)
Vertex:vertex_0_1(ID 2)
Vertex:vertex_5_1(ID 12)
Vertex:vertex_3_0(ID 7)
Vertex:vertex_9_1(ID 20)
Vertex:vertex_10_0(ID 21)
Vertex:vertex_10_1(ID 22)
Vertex:vertex_4_0(ID 9)
Vertex:vertex_7_0(ID 15)
Vertex:vertex_2_1(ID 6)
Vertex:vertex_6_1(ID 14)
Vertex:vertex_11_0(ID 23)
Vertex:vertex_11_1(ID 24)
Vertex:vertex_12_0(ID 25)
Vertex:vertex_4_1(ID 10)
Vertex:vertex_2_0(ID 5)
Vertex:vertex_3_1(ID 8)
Vertex:vertex_1_1(ID 4)
Vertex:vertex_5_0(ID 11)
Vertex:vertex_12_1(ID 26)
Vertex:vertex_13_0(ID 27)
Vertex:vertex_13_1(ID 28)
Vertex:vertex_6_0(ID 13)
Edge Id: 2. From Node vertex_0_1 to vertex_2_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node vertex_1_0 to vertex_2_0 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node vertex_1_1 to vertex_2_1 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node vertex_2_0 to vertex_3_0 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node vertex_2_1 to vertex_3_1 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node vertex_3_0 to vertex_4_0 (Delay 0 Distance 0) depType Data
Edge Id: 20. From Node vertex_7_1 to vertex_8_1 (Delay 0 Distance 0) depType Data
Edge Id: 21. From Node vertex_8_0 to vertex_9_0 (Delay 0 Distance 0) depType Data
Edge Id: 22. From Node vertex_8_1 to vertex_9_1 (Delay 0 Distance 0) depType Data
Edge Id: 23. From Node vertex_9_0 to vertex_6_0 (Delay 0 Distance 1) depType Data
Edge Id: 24. From Node vertex_9_1 to vertex_6_1 (Delay 0 Distance 1) depType Data
Edge Id: 25. From Node vertex_9_0 to vertex_10_0 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node vertex_3_1 to vertex_4_1 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node vertex_3_0 to vertex_0_0 (Delay 0 Distance 2) depType Data
Edge Id: 10. From Node vertex_3_1 to vertex_0_1 (Delay 0 Distance 2) depType Data
Edge Id: 11. From Node vertex_5_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node vertex_5_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node vertex_12_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node vertex_0_0 to vertex_2_0 (Delay 0 Distance 0) depType Data
Edge Id: 14. From Node vertex_12_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 15. From Node vertex_13_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 16. From Node vertex_13_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 17. From Node vertex_6_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 18. From Node vertex_6_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 19. From Node vertex_7_0 to vertex_8_0 (Delay 0 Distance 0) depType Data
Edge Id: 26. From Node vertex_9_1 to vertex_10_1 (Delay 0 Distance 0) depType Data
Edge Id: 27. From Node vertex_9_0 to vertex_11_0 (Delay 0 Distance 0) depType Data
Edge Id: 28. From Node vertex_9_1 to vertex_11_1 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: red with limit/vertices 2/10, latency 2, blockingTime 1, physicalDelay 0
Resource Model has limited resource: green with limit/vertices 4/18, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex vertex_7_1 with green
Registered vertex vertex_8_0 with green
Registered vertex vertex_8_1 with green
Registered vertex vertex_9_0 with green
Registered vertex vertex_0_0 with red
Registered vertex vertex_1_0 with red
Registered vertex vertex_0_1 with red
Registered vertex vertex_5_1 with green
Registered vertex vertex_3_0 with red
Registered vertex vertex_9_1 with green
Registered vertex vertex_10_0 with green
Registered vertex vertex_10_1 with green
Registered vertex vertex_4_0 with red
Registered vertex vertex_7_0 with green
Registered vertex vertex_2_1 with red
Registered vertex vertex_6_1 with green
Registered vertex vertex_11_0 with green
Registered vertex vertex_11_1 with green
Registered vertex vertex_12_0 with green
Registered vertex vertex_4_1 with red
Registered vertex vertex_2_0 with red
Registered vertex vertex_3_1 with red
Registered vertex vertex_1_1 with red
Registered vertex vertex_5_0 with green
Registered vertex vertex_12_1 with green
Registered vertex vertex_13_0 with green
Registered vertex vertex_13_1 with green
Registered vertex vertex_6_0 with green
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::moduloQTest: finished scheduling - resulting control steps:
Tests::moduloQTest: start times for insertion time=0
  vertex_0 - 2
  vertex_1 - 0
  vertex_2 - 4
  vertex_3 - 6
  vertex_4 - 8
  vertex_5 - 1
  vertex_6 - 1
  vertex_7 - 3
  vertex_8 - 4
  vertex_9 - 5
  vertex_10 - 8
  vertex_11 - 7
  vertex_12 - 0
  vertex_13 - 2
Tests::moduloQTest: start times for insertion time=3
  vertex_0 - 5
  vertex_1 - 3
  vertex_2 - 7
  vertex_3 - 9
  vertex_4 - 11
  vertex_5 - 4
  vertex_6 - 4
  vertex_7 - 6
  vertex_8 - 7
  vertex_9 - 8
  vertex_10 - 11
  vertex_11 - 10
  vertex_12 - 3
  vertex_13 - 5
<end of output>
Test time =   0.07 sec
----------------------------------------------------------
Test Passed.
"ratIIModuloQ" end time: May 06 14:23 CEST
"ratIIModuloQ" time elapsed: 00:00:00
----------------------------------------------------------

20/28 Testing: ratIISCCQ
20/28 Test: ratIISCCQ
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=RATIONALIISCCQ"
Directory: /home/bkessler/Repositories/hatschet
"ratIISCCQ" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 22
RationalIISchedulerLayer::schedule: samples: 5
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 1.33333
RationalIISchedulerLayer::schedule: resMinII is 4.4
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 5 / 22
RationalIISchedulerLayer::schedule: max. no. of iterations 1
SCC Q SCHEDULER graph: 
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:vertex_0(ID 0)
Vertex:vertex_1(ID 1)
Vertex:vertex_2(ID 2)
Vertex:vertex_3(ID 3)
Vertex:vertex_4(ID 4)
Vertex:vertex_5(ID 5)
Vertex:vertex_6(ID 6)
Vertex:vertex_7(ID 7)
Vertex:vertex_8(ID 8)
Vertex:vertex_9(ID 9)
Vertex:vertex_10(ID 10)
Vertex:vertex_11(ID 11)
Vertex:vertex_12(ID 12)
Vertex:vertex_13(ID 13)
Vertex:vertex_14(ID 14)
Vertex:vertex_15(ID 15)
Vertex:vertex_16(ID 16)
Vertex:vertex_17(ID 17)
Vertex:vertex_18(ID 18)
Vertex:vertex_19(ID 19)
Vertex:vertex_20(ID 20)
Vertex:vertex_21(ID 21)
Vertex:vertex_22(ID 22)
Vertex:vertex_23(ID 23)
Vertex:vertex_24(ID 24)
Vertex:vertex_25(ID 25)
Vertex:vertex_26(ID 26)
Edge Id: 1. From Node vertex_0 to vertex_2 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node vertex_1 to vertex_2 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node vertex_2 to vertex_3 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node vertex_3 to vertex_4 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node vertex_3 to vertex_0 (Delay 0 Distance 5) depType Data
Edge Id: 6. From Node vertex_5 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node vertex_12 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node vertex_13 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node vertex_14 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node vertex_6 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node vertex_7 to vertex_8 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node vertex_8 to vertex_9 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node vertex_9 to vertex_6 (Delay 0 Distance 3) depType Data
Edge Id: 14. From Node vertex_9 to vertex_10 (Delay 0 Distance 0) depType Data
Edge Id: 15. From Node vertex_9 to vertex_11 (Delay 0 Distance 0) depType Data

SCC Q SCHEDULER resource model: 
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: red with limit/vertices 3/5, latency 2, blockingTime 1, physicalDelay 0
Resource Model has limited resource: green with limit/vertices 5/22, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex vertex_0 with red
Registered vertex vertex_1 with red
Registered vertex vertex_2 with red
Registered vertex vertex_3 with red
Registered vertex vertex_4 with red
Registered vertex vertex_5 with green
Registered vertex vertex_6 with green
Registered vertex vertex_7 with green
Registered vertex vertex_8 with green
Registered vertex vertex_9 with green
Registered vertex vertex_10 with green
Registered vertex vertex_11 with green
Registered vertex vertex_12 with green
Registered vertex vertex_13 with green
Registered vertex vertex_14 with green
Registered vertex vertex_15 with green
Registered vertex vertex_16 with green
Registered vertex vertex_17 with green
Registered vertex vertex_18 with green
Registered vertex vertex_19 with green
Registered vertex vertex_20 with green
Registered vertex vertex_21 with green
Registered vertex vertex_22 with green
Registered vertex vertex_23 with green
Registered vertex vertex_24 with green
Registered vertex vertex_25 with green
Registered vertex vertex_26 with green
------------------------------------------------------------------------------------

M: 22
S: 5

DFS on vertex_4 is done !!
DFS on vertex_3 is done !!
DFS on vertex_2 is done !!
DFS on vertex_0 is done !!
DFS on vertex_1 is done !!
DFS on vertex_6 is done !!
DFS on vertex_10 is done !!
DFS on vertex_11 is done !!
DFS on vertex_9 is done !!
DFS on vertex_8 is done !!
DFS on vertex_7 is done !!
DFS on vertex_5 is done !!
DFS on vertex_12 is done !!
DFS on vertex_13 is done !!
DFS on vertex_14 is done !!
DFS on vertex_15 is done !!
DFS on vertex_16 is done !!
DFS on vertex_17 is done !!
DFS on vertex_18 is done !!
DFS on vertex_19 is done !!
DFS on vertex_20 is done !!
DFS on vertex_21 is done !!
DFS on vertex_22 is done !!
DFS on vertex_23 is done !!
DFS on vertex_24 is done !!
DFS on vertex_25 is done !!
DFS on vertex_26 is done !!
-------------------------------------------------------------------------------------
DFS of Vertex 26 is finished
SCC_0 Has 1 Vertices
DFS of Vertex 25 is finished
SCC_1 Has 1 Vertices
DFS of Vertex 24 is finished
SCC_2 Has 1 Vertices
DFS of Vertex 23 is finished
SCC_3 Has 1 Vertices
DFS of Vertex 22 is finished
SCC_4 Has 1 Vertices
DFS of Vertex 21 is finished
SCC_5 Has 1 Vertices
DFS of Vertex 20 is finished
SCC_6 Has 1 Vertices
DFS of Vertex 19 is finished
SCC_7 Has 1 Vertices
DFS of Vertex 18 is finished
SCC_8 Has 1 Vertices
DFS of Vertex 17 is finished
SCC_9 Has 1 Vertices
DFS of Vertex 16 is finished
SCC_10 Has 1 Vertices
DFS of Vertex 15 is finished
SCC_11 Has 1 Vertices
DFS of Vertex 14 is finished
SCC_12 Has 1 Vertices
DFS of Vertex 13 is finished
SCC_13 Has 1 Vertices
DFS of Vertex 12 is finished
SCC_14 Has 1 Vertices
DFS of Vertex 5 is finished
SCC_15 Has 1 Vertices
DFS of Vertex 8 is finished
DFS of Vertex 9 is finished
DFS of Vertex 6 is finished
DFS of Vertex 7 is finished
SCC_16 Has 4 Vertices
DFS of Vertex 11 is finished
SCC_17 Has 1 Vertices
DFS of Vertex 10 is finished
SCC_18 Has 1 Vertices
DFS of Vertex 1 is finished
SCC_19 Has 1 Vertices
DFS of Vertex 2 is finished
DFS of Vertex 3 is finished
DFS of Vertex 0 is finished
SCC_20 Has 3 Vertices
DFS of Vertex 4 is finished
SCC_21 Has 1 Vertices
START MODULO Q SCHEDULER
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 22
RationalIISchedulerLayer::schedule: samples: 5
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 1.33333
RationalIISchedulerLayer::schedule: resMinII is 1
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 5 / 22
RationalIISchedulerLayer::schedule: max. no. of iterations 1
MODULO Q SCHEDULER graph: 
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:vertex_8(ID 8)
Vertex:vertex_9(ID 9)
Vertex:vertex_6(ID 6)
Vertex:vertex_7(ID 7)
Vertex:vertex_2(ID 2)
Vertex:vertex_3(ID 3)
Vertex:vertex_0(ID 0)
Edge Id: 1. From Node vertex_6 to vertex_7 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node vertex_7 to vertex_8 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node vertex_8 to vertex_9 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node vertex_9 to vertex_6 (Delay 0 Distance 3) depType Data
Edge Id: 5. From Node vertex_0 to vertex_2 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node vertex_2 to vertex_3 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node vertex_3 to vertex_0 (Delay 0 Distance 5) depType Data

MODULO Q SCHEDULER resource model: 
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: red with limit/vertices 3/3, latency 2, blockingTime 1, physicalDelay 0
Resource Model has limited resource: green with limit/vertices 5/4, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex vertex_8 with green
Registered vertex vertex_9 with green
Registered vertex vertex_6 with green
Registered vertex vertex_7 with green
Registered vertex vertex_2 with red
Registered vertex vertex_3 with red
Registered vertex vertex_0 with red
------------------------------------------------------------------------------------

M: 22
S: 5
Creating 'optimal' initiation interval sequence
  Lower II: 4
  Upper II: 5
  number of lower IIs: 3
  number of upper IIs: 2
  dominance of lower IIs: 1
    errAccumulator: 2
    errAccumulator: 4
    errAccumulator: 3
IIs: < 0 4 9 13 18 >
Start scheduling Attempt!
Latency Sequence: 
0 4 9 13 18 
Initiation Intervals: 
4 5 4 5 4 
setting MRT for latency sequence '0 4 9 13 18 '
Created resource copy from 'red' -> 'red'
Created resource copy from 'green' -> 'green'
Constructing dummy MRT now
Finished constructing dummy MRT now
i=0, limit = 3
specified dummy MRT column height = 3 for resource red at column 0
i=1, limit = 3
specified dummy MRT column height = 3 for resource red at column 1
i=2, limit = 3
specified dummy MRT column height = 3 for resource red at column 2
i=3, limit = 3
specified dummy MRT column height = 3 for resource red at column 3
i=4, limit = 3
specified dummy MRT column height = 3 for resource red at column 4
i=5, limit = 3
specified dummy MRT column height = 3 for resource red at column 5
i=6, limit = 3
specified dummy MRT column height = 3 for resource red at column 6
i=7, limit = 3
specified dummy MRT column height = 3 for resource red at column 7
i=8, limit = 3
specified dummy MRT column height = 3 for resource red at column 8
i=9, limit = 3
specified dummy MRT column height = 3 for resource red at column 9
i=10, limit = 3
specified dummy MRT column height = 3 for resource red at column 10
i=11, limit = 3
specified dummy MRT column height = 3 for resource red at column 11
i=12, limit = 3
specified dummy MRT column height = 3 for resource red at column 12
i=13, limit = 3
specified dummy MRT column height = 3 for resource red at column 13
i=14, limit = 3
specified dummy MRT column height = 3 for resource red at column 14
i=15, limit = 3
specified dummy MRT column height = 3 for resource red at column 15
i=16, limit = 3
specified dummy MRT column height = 3 for resource red at column 16
i=17, limit = 3
specified dummy MRT column height = 3 for resource red at column 17
i=18, limit = 3
specified dummy MRT column height = 3 for resource red at column 18
i=19, limit = 3
specified dummy MRT column height = 3 for resource red at column 19
i=20, limit = 3
specified dummy MRT column height = 3 for resource red at column 20
i=21, limit = 3
specified dummy MRT column height = 3 for resource red at column 21
created dummy MRT
created dummy vertices
  counter=0
  vertexCounter=0
    latency = 0
    moduloSlot = 0
    inserted vertex 0 to modulo slot 0
    latency = 4
    moduloSlot = 4
    inserted vertex 0 to modulo slot 4
    latency = 9
    moduloSlot = 9
    inserted vertex 0 to modulo slot 9
    latency = 13
    moduloSlot = 13
    inserted vertex 0 to modulo slot 13
    latency = 18
    moduloSlot = 18
    inserted vertex 0 to modulo slot 18
    found MRT slot for vertex
    MRT height: 1
  counter=1
  vertexCounter=1
    latency = 0
    moduloSlot = 0
    inserted vertex 1 to modulo slot 1
    latency = 4
    moduloSlot = 4
    inserted vertex 1 to modulo slot 5
    latency = 9
    moduloSlot = 9
    inserted vertex 1 to modulo slot 10
    latency = 13
    moduloSlot = 13
    inserted vertex 1 to modulo slot 14
    latency = 18
    moduloSlot = 18
    inserted vertex 1 to modulo slot 19
    found MRT slot for vertex
    MRT height: 1
  counter=2
  vertexCounter=2
    latency = 0
    moduloSlot = 0
    inserted vertex 2 to modulo slot 2
    latency = 4
    moduloSlot = 4
    inserted vertex 2 to modulo slot 6
    latency = 9
    moduloSlot = 9
    inserted vertex 2 to modulo slot 11
    latency = 13
    moduloSlot = 13
    inserted vertex 2 to modulo slot 15
    latency = 18
    moduloSlot = 18
    inserted vertex 2 to modulo slot 20
    found MRT slot for vertex
    MRT height: 1
  counter=3
  vertexCounter=3
    latency = 0
    moduloSlot = 0
    inserted vertex 3 to modulo slot 3
    latency = 4
    moduloSlot = 4
    inserted vertex 3 to modulo slot 7
    latency = 9
    moduloSlot = 9
    inserted vertex 3 to modulo slot 12
    latency = 13
    moduloSlot = 13
    inserted vertex 3 to modulo slot 16
    latency = 18
    moduloSlot = 18
    inserted vertex 3 to modulo slot 21
    found MRT slot for vertex
    MRT height: 1
  counter=4
  vertexCounter=4
    latency = 0
    moduloSlot = 0
    inserted vertex 4 to modulo slot 4
    latency = 4
    moduloSlot = 4
    inserted vertex 4 to modulo slot 8
    latency = 9
    moduloSlot = 9
    inserted vertex 4 to modulo slot 13
    latency = 13
    moduloSlot = 13
    inserted vertex 4 to modulo slot 17
    latency = 18
    moduloSlot = 18
    inserted vertex 4 to modulo slot 0
    found MRT slot for vertex
    MRT height: 1
  counter=5
  vertexCounter=5
    latency = 0
    moduloSlot = 0
    inserted vertex 5 to modulo slot 5
    latency = 4
    moduloSlot = 4
    inserted vertex 5 to modulo slot 9
    latency = 9
    moduloSlot = 9
    inserted vertex 5 to modulo slot 14
    latency = 13
    moduloSlot = 13
    inserted vertex 5 to modulo slot 18
    latency = 18
    moduloSlot = 18
    inserted vertex 5 to modulo slot 1
    found MRT slot for vertex
    MRT height: 1
  counter=6
  vertexCounter=6
    latency = 0
    moduloSlot = 0
    inserted vertex 6 to modulo slot 6
    latency = 4
    moduloSlot = 4
    inserted vertex 6 to modulo slot 10
    latency = 9
    moduloSlot = 9
    inserted vertex 6 to modulo slot 15
    latency = 13
    moduloSlot = 13
    inserted vertex 6 to modulo slot 19
    latency = 18
    moduloSlot = 18
    inserted vertex 6 to modulo slot 2
    found MRT slot for vertex
    MRT height: 1
  counter=7
  vertexCounter=7
    latency = 0
    moduloSlot = 0
    inserted vertex 7 to modulo slot 7
    latency = 4
    moduloSlot = 4
    inserted vertex 7 to modulo slot 11
    latency = 9
    moduloSlot = 9
    inserted vertex 7 to modulo slot 16
    latency = 13
    moduloSlot = 13
    inserted vertex 7 to modulo slot 20
    latency = 18
    moduloSlot = 18
    inserted vertex 7 to modulo slot 3
    found MRT slot for vertex
    MRT height: 1
  counter=8
  vertexCounter=8
    latency = 0
    moduloSlot = 0
    inserted vertex 8 to modulo slot 8
    latency = 4
    moduloSlot = 4
    inserted vertex 8 to modulo slot 12
    latency = 9
    moduloSlot = 9
    inserted vertex 8 to modulo slot 17
    latency = 13
    moduloSlot = 13
    inserted vertex 8 to modulo slot 21
    latency = 18
    moduloSlot = 18
    inserted vertex 8 to modulo slot 4
    found MRT slot for vertex
    MRT height: 1
  counter=9
  vertexCounter=9
    latency = 0
    moduloSlot = 0
    inserted vertex 9 to modulo slot 9
    latency = 4
    moduloSlot = 4
    inserted vertex 9 to modulo slot 13
    latency = 9
    moduloSlot = 9
    inserted vertex 9 to modulo slot 18
    latency = 13
    moduloSlot = 13
    inserted vertex 9 to modulo slot 0
    latency = 18
    moduloSlot = 18
    inserted vertex 9 to modulo slot 5
    found MRT slot for vertex
    MRT height: 1
  counter=10
  vertexCounter=10
    latency = 0
    moduloSlot = 0
    inserted vertex 10 to modulo slot 10
    latency = 4
    moduloSlot = 4
    inserted vertex 10 to modulo slot 14
    latency = 9
    moduloSlot = 9
    inserted vertex 10 to modulo slot 19
    latency = 13
    moduloSlot = 13
    inserted vertex 10 to modulo slot 1
    latency = 18
    moduloSlot = 18
    inserted vertex 10 to modulo slot 6
    found MRT slot for vertex
    MRT height: 1
  counter=11
  vertexCounter=11
    latency = 0
    moduloSlot = 0
    inserted vertex 11 to modulo slot 11
    latency = 4
    moduloSlot = 4
    inserted vertex 11 to modulo slot 15
    latency = 9
    moduloSlot = 9
    inserted vertex 11 to modulo slot 20
    latency = 13
    moduloSlot = 13
    inserted vertex 11 to modulo slot 2
    latency = 18
    moduloSlot = 18
    inserted vertex 11 to modulo slot 7
    found MRT slot for vertex
    MRT height: 1
  counter=12
  vertexCounter=12
    latency = 0
    moduloSlot = 0
    inserted vertex 12 to modulo slot 12
    latency = 4
    moduloSlot = 4
    inserted vertex 12 to modulo slot 16
    latency = 9
    moduloSlot = 9
    inserted vertex 12 to modulo slot 21
    latency = 13
    moduloSlot = 13
    inserted vertex 12 to modulo slot 3
    latency = 18
    moduloSlot = 18
    inserted vertex 12 to modulo slot 8
    found MRT slot for vertex
    MRT height: 1
  counter=13
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 13 is already full
    removing vertex from MRT
  counter=14
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 14 is already full
    removing vertex from MRT
  counter=15
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 15 is already full
    removing vertex from MRT
  counter=16
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 16 is already full
    removing vertex from MRT
  counter=17
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    inserted vertex 13 to modulo slot 17
    latency = 4
    moduloSlot = 4
    MRT at column 21 is already full
    removing vertex from MRT
  counter=18
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 18 is already full
    removing vertex from MRT
  counter=19
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 19 is already full
    removing vertex from MRT
  counter=20
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 20 is already full
    removing vertex from MRT
  counter=21
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 21 is already full
    removing vertex from MRT
  counter=22
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 0 is already full
    removing vertex from MRT
  counter=23
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 1 is already full
    removing vertex from MRT
  counter=24
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 2 is already full
    removing vertex from MRT
  counter=25
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 3 is already full
    removing vertex from MRT
  counter=26
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 4 is already full
    removing vertex from MRT
  counter=27
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 5 is already full
    removing vertex from MRT
  counter=28
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 6 is already full
    removing vertex from MRT
  counter=29
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 7 is already full
    removing vertex from MRT
  counter=30
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 8 is already full
    removing vertex from MRT
  counter=31
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 9 is already full
    removing vertex from MRT
  counter=32
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 10 is already full
    removing vertex from MRT
  counter=33
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 11 is already full
    removing vertex from MRT
  counter=34
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 12 is already full
    removing vertex from MRT
specified MRT column height = 1 for resource red at column 0
specified MRT column height = 1 for resource red at column 1
specified MRT column height = 1 for resource red at column 2
specified MRT column height = 1 for resource red at column 3
specified MRT column height = 1 for resource red at column 4
specified MRT column height = 1 for resource red at column 5
specified MRT column height = 1 for resource red at column 6
specified MRT column height = 1 for resource red at column 7
specified MRT column height = 1 for resource red at column 8
specified MRT column height = 1 for resource red at column 9
specified MRT column height = 1 for resource red at column 10
specified MRT column height = 1 for resource red at column 11
specified MRT column height = 1 for resource red at column 12
specified MRT column height = 0 for resource red at column 13
specified MRT column height = 0 for resource red at column 14
specified MRT column height = 0 for resource red at column 15
specified MRT column height = 0 for resource red at column 16
specified MRT column height = 0 for resource red at column 17
specified MRT column height = 0 for resource red at column 18
specified MRT column height = 0 for resource red at column 19
specified MRT column height = 0 for resource red at column 20
specified MRT column height = 0 for resource red at column 21
Finished constructing dummy MRT now
Found limited resource with limit modulo #samples == 0 - build trivial MRT for this resource
specified MRT column height = 1 for resource green at column 0
specified MRT column height = 1 for resource green at column 1
specified MRT column height = 1 for resource green at column 2
specified MRT column height = 1 for resource green at column 3
specified MRT column height = 1 for resource green at column 4
specified MRT column height = 1 for resource green at column 5
specified MRT column height = 1 for resource green at column 6
specified MRT column height = 1 for resource green at column 7
specified MRT column height = 1 for resource green at column 8
specified MRT column height = 1 for resource green at column 9
specified MRT column height = 1 for resource green at column 10
specified MRT column height = 1 for resource green at column 11
specified MRT column height = 1 for resource green at column 12
specified MRT column height = 1 for resource green at column 13
specified MRT column height = 1 for resource green at column 14
specified MRT column height = 1 for resource green at column 15
specified MRT column height = 1 for resource green at column 16
specified MRT column height = 1 for resource green at column 17
specified MRT column height = 1 for resource green at column 18
specified MRT column height = 1 for resource green at column 19
specified MRT column height = 1 for resource green at column 20
specified MRT column height = 1 for resource green at column 21
MRT
  Resource red
0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
Edge: vertex_6 -> vertex_7, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_7 -> vertex_8, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_8 -> vertex_9, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_9 -> vertex_6, distance: 3
  omega: 13
  omega_ij_min: 1000000
  omega: 14
  omega_ij_min: 13
  omega: 13
  omega_ij_min: 13
  omega: 13
  omega_ij_min: 13
  omega: 13
  omega_ij_min: 13
  resulting omega_ij_min: 13
Edge: vertex_0 -> vertex_2, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_2 -> vertex_3, distance: 0
  resulting omega_ij_min: 0
Edge: vertex_3 -> vertex_0, distance: 5
  omega: 22
  omega_ij_min: 1000000
  omega: 22
  omega_ij_min: 22
  omega: 22
  omega_ij_min: 22
  omega: 22
  omega_ij_min: 22
  omega: 22
  omega_ij_min: 22
  resulting omega_ij_min: 22
SOLVER INTERNAL
MINIMIZE
  supersink
SUBJECT TO
  k_8 >= 0.000000
  time_8 >= 0.000000
  k_9 >= 0.000000
  time_9 >= 0.000000
  k_6 >= 0.000000
  time_6 >= 0.000000
  k_7 >= 0.000000
  time_7 >= 0.000000
  k_2 >= 0.000000
  time_2 >= 0.000000
  k_3 >= 0.000000
  time_3 >= 0.000000
  k_0 >= 0.000000
  time_0 >= 0.000000
  -10.000000 a_10_8 - 11.000000 a_11_8 - 12.000000 a_12_8 - 13.000000 a_13_8 - 14.000000 a_14_8 - 15.000000 a_15_8 - 16.000000 a_16_8 - 17.000000 a_17_8 - 18.000000 a_18_8 - 19.000000 a_19_8 - a_1_8 - 20.000000 a_20_8 - 21.000000 a_21_8 - 2.000000 a_2_8 - 3.000000 a_3_8 - 4.000000 a_4_8 - 5.000000 a_5_8 - 6.000000 a_6_8 - 7.000000 a_7_8 - 8.000000 a_8_8 - 9.000000 a_9_8 - 22.000000 k_8 + time_8 = 0.000000
  a_0_8 + a_10_8 + a_11_8 + a_12_8 + a_13_8 + a_14_8 + a_15_8 + a_16_8 + a_17_8 + a_18_8 + a_19_8 + a_1_8 + a_20_8 + a_21_8 + a_2_8 + a_3_8 + a_4_8 + a_5_8 + a_6_8 + a_7_8 + a_8_8 + a_9_8 = 1.000000
  -10.000000 a_10_9 - 11.000000 a_11_9 - 12.000000 a_12_9 - 13.000000 a_13_9 - 14.000000 a_14_9 - 15.000000 a_15_9 - 16.000000 a_16_9 - 17.000000 a_17_9 - 18.000000 a_18_9 - 19.000000 a_19_9 - a_1_9 - 20.000000 a_20_9 - 21.000000 a_21_9 - 2.000000 a_2_9 - 3.000000 a_3_9 - 4.000000 a_4_9 - 5.000000 a_5_9 - 6.000000 a_6_9 - 7.000000 a_7_9 - 8.000000 a_8_9 - 9.000000 a_9_9 - 22.000000 k_9 + time_9 = 0.000000
  a_0_9 + a_10_9 + a_11_9 + a_12_9 + a_13_9 + a_14_9 + a_15_9 + a_16_9 + a_17_9 + a_18_9 + a_19_9 + a_1_9 + a_20_9 + a_21_9 + a_2_9 + a_3_9 + a_4_9 + a_5_9 + a_6_9 + a_7_9 + a_8_9 + a_9_9 = 1.000000
  -10.000000 a_10_6 - 11.000000 a_11_6 - 12.000000 a_12_6 - 13.000000 a_13_6 - 14.000000 a_14_6 - 15.000000 a_15_6 - 16.000000 a_16_6 - 17.000000 a_17_6 - 18.000000 a_18_6 - 19.000000 a_19_6 - a_1_6 - 20.000000 a_20_6 - 21.000000 a_21_6 - 2.000000 a_2_6 - 3.000000 a_3_6 - 4.000000 a_4_6 - 5.000000 a_5_6 - 6.000000 a_6_6 - 7.000000 a_7_6 - 8.000000 a_8_6 - 9.000000 a_9_6 - 22.000000 k_6 + time_6 = 0.000000
  a_0_6 + a_10_6 + a_11_6 + a_12_6 + a_13_6 + a_14_6 + a_15_6 + a_16_6 + a_17_6 + a_18_6 + a_19_6 + a_1_6 + a_20_6 + a_21_6 + a_2_6 + a_3_6 + a_4_6 + a_5_6 + a_6_6 + a_7_6 + a_8_6 + a_9_6 = 1.000000
  -10.000000 a_10_7 - 11.000000 a_11_7 - 12.000000 a_12_7 - 13.000000 a_13_7 - 14.000000 a_14_7 - 15.000000 a_15_7 - 16.000000 a_16_7 - 17.000000 a_17_7 - 18.000000 a_18_7 - 19.000000 a_19_7 - a_1_7 - 20.000000 a_20_7 - 21.000000 a_21_7 - 2.000000 a_2_7 - 3.000000 a_3_7 - 4.000000 a_4_7 - 5.000000 a_5_7 - 6.000000 a_6_7 - 7.000000 a_7_7 - 8.000000 a_8_7 - 9.000000 a_9_7 - 22.000000 k_7 + time_7 = 0.000000
  a_0_7 + a_10_7 + a_11_7 + a_12_7 + a_13_7 + a_14_7 + a_15_7 + a_16_7 + a_17_7 + a_18_7 + a_19_7 + a_1_7 + a_20_7 + a_21_7 + a_2_7 + a_3_7 + a_4_7 + a_5_7 + a_6_7 + a_7_7 + a_8_7 + a_9_7 = 1.000000
  -10.000000 a_10_2 - 11.000000 a_11_2 - 12.000000 a_12_2 - 13.000000 a_13_2 - 14.000000 a_14_2 - 15.000000 a_15_2 - 16.000000 a_16_2 - 17.000000 a_17_2 - 18.000000 a_18_2 - 19.000000 a_19_2 - a_1_2 - 20.000000 a_20_2 - 21.000000 a_21_2 - 2.000000 a_2_2 - 3.000000 a_3_2 - 4.000000 a_4_2 - 5.000000 a_5_2 - 6.000000 a_6_2 - 7.000000 a_7_2 - 8.000000 a_8_2 - 9.000000 a_9_2 - 22.000000 k_2 + time_2 = 0.000000
  a_0_2 + a_10_2 + a_11_2 + a_12_2 + a_13_2 + a_14_2 + a_15_2 + a_16_2 + a_17_2 + a_18_2 + a_19_2 + a_1_2 + a_20_2 + a_21_2 + a_2_2 + a_3_2 + a_4_2 + a_5_2 + a_6_2 + a_7_2 + a_8_2 + a_9_2 = 1.000000
  -10.000000 a_10_3 - 11.000000 a_11_3 - 12.000000 a_12_3 - 13.000000 a_13_3 - 14.000000 a_14_3 - 15.000000 a_15_3 - 16.000000 a_16_3 - 17.000000 a_17_3 - 18.000000 a_18_3 - 19.000000 a_19_3 - a_1_3 - 20.000000 a_20_3 - 21.000000 a_21_3 - 2.000000 a_2_3 - 3.000000 a_3_3 - 4.000000 a_4_3 - 5.000000 a_5_3 - 6.000000 a_6_3 - 7.000000 a_7_3 - 8.000000 a_8_3 - 9.000000 a_9_3 - 22.000000 k_3 + time_3 = 0.000000
  a_0_3 + a_10_3 + a_11_3 + a_12_3 + a_13_3 + a_14_3 + a_15_3 + a_16_3 + a_17_3 + a_18_3 + a_19_3 + a_1_3 + a_20_3 + a_21_3 + a_2_3 + a_3_3 + a_4_3 + a_5_3 + a_6_3 + a_7_3 + a_8_3 + a_9_3 = 1.000000
  -10.000000 a_10_0 - 11.000000 a_11_0 - 12.000000 a_12_0 - 13.000000 a_13_0 - 14.000000 a_14_0 - 15.000000 a_15_0 - 16.000000 a_16_0 - 17.000000 a_17_0 - 18.000000 a_18_0 - 19.000000 a_19_0 - a_1_0 - 20.000000 a_20_0 - 21.000000 a_21_0 - 2.000000 a_2_0 - 3.000000 a_3_0 - 4.000000 a_4_0 - 5.000000 a_5_0 - 6.000000 a_6_0 - 7.000000 a_7_0 - 8.000000 a_8_0 - 9.000000 a_9_0 - 22.000000 k_0 + time_0 = 0.000000
  a_0_0 + a_10_0 + a_11_0 + a_12_0 + a_13_0 + a_14_0 + a_15_0 + a_16_0 + a_17_0 + a_18_0 + a_19_0 + a_1_0 + a_20_0 + a_21_0 + a_2_0 + a_3_0 + a_4_0 + a_5_0 + a_6_0 + a_7_0 + a_8_0 + a_9_0 = 1.000000
  a_0_0 + a_0_2 + a_0_3 <= 1.000000
  a_1_0 + a_1_2 + a_1_3 <= 1.000000
  a_2_0 + a_2_2 + a_2_3 <= 1.000000
  a_3_0 + a_3_2 + a_3_3 <= 1.000000
  a_4_0 + a_4_2 + a_4_3 <= 1.000000
  a_5_0 + a_5_2 + a_5_3 <= 1.000000
  a_6_0 + a_6_2 + a_6_3 <= 1.000000
  a_7_0 + a_7_2 + a_7_3 <= 1.000000
  a_8_0 + a_8_2 + a_8_3 <= 1.000000
  a_9_0 + a_9_2 + a_9_3 <= 1.000000
  a_10_0 + a_10_2 + a_10_3 <= 1.000000
  a_11_0 + a_11_2 + a_11_3 <= 1.000000
  a_12_0 + a_12_2 + a_12_3 <= 1.000000
  a_13_0 + a_13_2 + a_13_3 <= 0.000000
  a_14_0 + a_14_2 + a_14_3 <= 0.000000
  a_15_0 + a_15_2 + a_15_3 <= 0.000000
  a_16_0 + a_16_2 + a_16_3 <= 0.000000
  a_17_0 + a_17_2 + a_17_3 <= 0.000000
  a_18_0 + a_18_2 + a_18_3 <= 0.000000
  a_19_0 + a_19_2 + a_19_3 <= 0.000000
  a_20_0 + a_20_2 + a_20_3 <= 0.000000
  a_21_0 + a_21_2 + a_21_3 <= 0.000000
  a_0_6 + a_0_7 + a_0_8 + a_0_9 <= 1.000000
  a_1_6 + a_1_7 + a_1_8 + a_1_9 <= 1.000000
  a_2_6 + a_2_7 + a_2_8 + a_2_9 <= 1.000000
  a_3_6 + a_3_7 + a_3_8 + a_3_9 <= 1.000000
  a_4_6 + a_4_7 + a_4_8 + a_4_9 <= 1.000000
  a_5_6 + a_5_7 + a_5_8 + a_5_9 <= 1.000000
  a_6_6 + a_6_7 + a_6_8 + a_6_9 <= 1.000000
  a_7_6 + a_7_7 + a_7_8 + a_7_9 <= 1.000000
  a_8_6 + a_8_7 + a_8_8 + a_8_9 <= 1.000000
  a_9_6 + a_9_7 + a_9_8 + a_9_9 <= 1.000000
  a_10_6 + a_10_7 + a_10_8 + a_10_9 <= 1.000000
  a_11_6 + a_11_7 + a_11_8 + a_11_9 <= 1.000000
  a_12_6 + a_12_7 + a_12_8 + a_12_9 <= 1.000000
  a_13_6 + a_13_7 + a_13_8 + a_13_9 <= 1.000000
  a_14_6 + a_14_7 + a_14_8 + a_14_9 <= 1.000000
  a_15_6 + a_15_7 + a_15_8 + a_15_9 <= 1.000000
  a_16_6 + a_16_7 + a_16_8 + a_16_9 <= 1.000000
  a_17_6 + a_17_7 + a_17_8 + a_17_9 <= 1.000000
  a_18_6 + a_18_7 + a_18_8 + a_18_9 <= 1.000000
  a_19_6 + a_19_7 + a_19_8 + a_19_9 <= 1.000000
  a_20_6 + a_20_7 + a_20_8 + a_20_9 <= 1.000000
  a_21_6 + a_21_7 + a_21_8 + a_21_9 <= 1.000000
  -time_6 + time_7 >= 1.000000
  -time_7 + time_8 >= 1.000000
  -time_8 + time_9 >= 1.000000
  time_6 - time_9 >= -12.000000
  -time_0 + time_2 >= 2.000000
  -time_2 + time_3 >= 2.000000
  time_0 - time_3 >= -20.000000
  supersink >= 0.000000
BOUNDS
  a_0_0 <= 1
  a_0_2 <= 1
  a_0_3 <= 1
  a_0_6 <= 1
  a_0_7 <= 1
  a_0_8 <= 1
  a_0_9 <= 1
  a_10_0 <= 1
  a_10_2 <= 1
  a_10_3 <= 1
  a_10_6 <= 1
  a_10_7 <= 1
  a_10_8 <= 1
  a_10_9 <= 1
  a_11_0 <= 1
  a_11_2 <= 1
  a_11_3 <= 1
  a_11_6 <= 1
  a_11_7 <= 1
  a_11_8 <= 1
  a_11_9 <= 1
  a_12_0 <= 1
  a_12_2 <= 1
  a_12_3 <= 1
  a_12_6 <= 1
  a_12_7 <= 1
  a_12_8 <= 1
  a_12_9 <= 1
  a_13_0 <= 1
  a_13_2 <= 1
  a_13_3 <= 1
  a_13_6 <= 1
  a_13_7 <= 1
  a_13_8 <= 1
  a_13_9 <= 1
  a_14_0 <= 1
  a_14_2 <= 1
  a_14_3 <= 1
  a_14_6 <= 1
  a_14_7 <= 1
  a_14_8 <= 1
  a_14_9 <= 1
  a_15_0 <= 1
  a_15_2 <= 1
  a_15_3 <= 1
  a_15_6 <= 1
  a_15_7 <= 1
  a_15_8 <= 1
  a_15_9 <= 1
  a_16_0 <= 1
  a_16_2 <= 1
  a_16_3 <= 1
  a_16_6 <= 1
  a_16_7 <= 1
  a_16_8 <= 1
  a_16_9 <= 1
  a_17_0 <= 1
  a_17_2 <= 1
  a_17_3 <= 1
  a_17_6 <= 1
  a_17_7 <= 1
  a_17_8 <= 1
  a_17_9 <= 1
  a_18_0 <= 1
  a_18_2 <= 1
  a_18_3 <= 1
  a_18_6 <= 1
  a_18_7 <= 1
  a_18_8 <= 1
  a_18_9 <= 1
  a_19_0 <= 1
  a_19_2 <= 1
  a_19_3 <= 1
  a_19_6 <= 1
  a_19_7 <= 1
  a_19_8 <= 1
  a_19_9 <= 1
  a_1_0 <= 1
  a_1_2 <= 1
  a_1_3 <= 1
  a_1_6 <= 1
  a_1_7 <= 1
  a_1_8 <= 1
  a_1_9 <= 1
  a_20_0 <= 1
  a_20_2 <= 1
  a_20_3 <= 1
  a_20_6 <= 1
  a_20_7 <= 1
  a_20_8 <= 1
  a_20_9 <= 1
  a_21_0 <= 1
  a_21_2 <= 1
  a_21_3 <= 1
  a_21_6 <= 1
  a_21_7 <= 1
  a_21_8 <= 1
  a_21_9 <= 1
  a_2_0 <= 1
  a_2_2 <= 1
  a_2_3 <= 1
  a_2_6 <= 1
  a_2_7 <= 1
  a_2_8 <= 1
  a_2_9 <= 1
  a_3_0 <= 1
  a_3_2 <= 1
  a_3_3 <= 1
  a_3_6 <= 1
  a_3_7 <= 1
  a_3_8 <= 1
  a_3_9 <= 1
  a_4_0 <= 1
  a_4_2 <= 1
  a_4_3 <= 1
  a_4_6 <= 1
  a_4_7 <= 1
  a_4_8 <= 1
  a_4_9 <= 1
  a_5_0 <= 1
  a_5_2 <= 1
  a_5_3 <= 1
  a_5_6 <= 1
  a_5_7 <= 1
  a_5_8 <= 1
  a_5_9 <= 1
  a_6_0 <= 1
  a_6_2 <= 1
  a_6_3 <= 1
  a_6_6 <= 1
  a_6_7 <= 1
  a_6_8 <= 1
  a_6_9 <= 1
  a_7_0 <= 1
  a_7_2 <= 1
  a_7_3 <= 1
  a_7_6 <= 1
  a_7_7 <= 1
  a_7_8 <= 1
  a_7_9 <= 1
  a_8_0 <= 1
  a_8_2 <= 1
  a_8_3 <= 1
  a_8_6 <= 1
  a_8_7 <= 1
  a_8_8 <= 1
  a_8_9 <= 1
  a_9_0 <= 1
  a_9_2 <= 1
  a_9_3 <= 1
  a_9_6 <= 1
  a_9_7 <= 1
  a_9_8 <= 1
  a_9_9 <= 1
  k_0 FREE
  k_2 FREE
  k_3 FREE
  k_6 FREE
  k_7 FREE
  k_8 FREE
  k_9 FREE
  supersink FREE
  time_0 FREE
  time_2 FREE
  time_3 FREE
  time_6 FREE
  time_7 FREE
  time_8 FREE
  time_9 FREE
BINARY
  a_0_0
  a_0_2
  a_0_3
  a_0_6
  a_0_7
  a_0_8
  a_0_9
  a_10_0
  a_10_2
  a_10_3
  a_10_6
  a_10_7
  a_10_8
  a_10_9
  a_11_0
  a_11_2
  a_11_3
  a_11_6
  a_11_7
  a_11_8
  a_11_9
  a_12_0
  a_12_2
  a_12_3
  a_12_6
  a_12_7
  a_12_8
  a_12_9
  a_13_0
  a_13_2
  a_13_3
  a_13_6
  a_13_7
  a_13_8
  a_13_9
  a_14_0
  a_14_2
  a_14_3
  a_14_6
  a_14_7
  a_14_8
  a_14_9
  a_15_0
  a_15_2
  a_15_3
  a_15_6
  a_15_7
  a_15_8
  a_15_9
  a_16_0
  a_16_2
  a_16_3
  a_16_6
  a_16_7
  a_16_8
  a_16_9
  a_17_0
  a_17_2
  a_17_3
  a_17_6
  a_17_7
  a_17_8
  a_17_9
  a_18_0
  a_18_2
  a_18_3
  a_18_6
  a_18_7
  a_18_8
  a_18_9
  a_19_0
  a_19_2
  a_19_3
  a_19_6
  a_19_7
  a_19_8
  a_19_9
  a_1_0
  a_1_2
  a_1_3
  a_1_6
  a_1_7
  a_1_8
  a_1_9
  a_20_0
  a_20_2
  a_20_3
  a_20_6
  a_20_7
  a_20_8
  a_20_9
  a_21_0
  a_21_2
  a_21_3
  a_21_6
  a_21_7
  a_21_8
  a_21_9
  a_2_0
  a_2_2
  a_2_3
  a_2_6
  a_2_7
  a_2_8
  a_2_9
  a_3_0
  a_3_2
  a_3_3
  a_3_6
  a_3_7
  a_3_8
  a_3_9
  a_4_0
  a_4_2
  a_4_3
  a_4_6
  a_4_7
  a_4_8
  a_4_9
  a_5_0
  a_5_2
  a_5_3
  a_5_6
  a_5_7
  a_5_8
  a_5_9
  a_6_0
  a_6_2
  a_6_3
  a_6_6
  a_6_7
  a_6_8
  a_6_9
  a_7_0
  a_7_2
  a_7_3
  a_7_6
  a_7_7
  a_7_8
  a_7_9
  a_8_0
  a_8_2
  a_8_3
  a_8_6
  a_8_7
  a_8_8
  a_8_9
  a_9_0
  a_9_2
  a_9_3
  a_9_6
  a_9_7
  a_9_8
  a_9_9
GENERAL
  k_0
  k_2
  k_3
  k_6
  k_7
  k_8
  k_9
  supersink
  time_0
  time_2
  time_3
  time_6
  time_7
  time_8
  time_9
END

Time to solve: 0.006609 sec
ScaLP status:OPTIMAL
Found feasible solution!
Rational II modulo schedule found with:
  S=5
  M=22
  IIs=4 5 4 5 4 
  Latency=7
RationalIISchedulerLayer::verifySchedule: start verifier for II=22/5
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:vertex_6_2(ID 13)
Vertex:vertex_9_1(ID 7)
Vertex:vertex_9_2(ID 8)
Vertex:vertex_8_3(ID 4)
Vertex:vertex_9_0(ID 6)
Vertex:vertex_6_0(ID 11)
Vertex:vertex_8_0(ID 1)
Vertex:vertex_9_3(ID 9)
Vertex:vertex_8_4(ID 5)
Vertex:vertex_7_0(ID 16)
Vertex:vertex_8_1(ID 2)
Vertex:vertex_7_1(ID 17)
Vertex:vertex_7_2(ID 18)
Vertex:vertex_7_3(ID 19)
Vertex:vertex_7_4(ID 20)
Vertex:vertex_2_0(ID 21)
Vertex:vertex_2_1(ID 22)
Vertex:vertex_2_2(ID 23)
Vertex:vertex_2_3(ID 24)
Vertex:vertex_2_4(ID 25)
Vertex:vertex_3_0(ID 26)
Vertex:vertex_3_1(ID 27)
Vertex:vertex_3_2(ID 28)
Vertex:vertex_3_3(ID 29)
Vertex:vertex_3_4(ID 30)
Vertex:vertex_0_0(ID 31)
Vertex:vertex_0_1(ID 32)
Vertex:vertex_0_2(ID 33)
Vertex:vertex_0_3(ID 34)
Vertex:vertex_0_4(ID 35)
Vertex:vertex_6_3(ID 14)
Vertex:vertex_6_1(ID 12)
Vertex:vertex_9_4(ID 10)
Vertex:vertex_6_4(ID 15)
Vertex:vertex_8_2(ID 3)
Edge Id: 10. From Node vertex_7_4 to vertex_8_4 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node vertex_8_0 to vertex_9_0 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node vertex_8_1 to vertex_9_1 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node vertex_8_2 to vertex_9_2 (Delay 0 Distance 0) depType Data
Edge Id: 14. From Node vertex_8_3 to vertex_9_3 (Delay 0 Distance 0) depType Data
Edge Id: 15. From Node vertex_8_4 to vertex_9_4 (Delay 0 Distance 0) depType Data
Edge Id: 16. From Node vertex_9_2 to vertex_6_0 (Delay 0 Distance 1) depType Data
Edge Id: 17. From Node vertex_9_3 to vertex_6_1 (Delay 0 Distance 1) depType Data
Edge Id: 18. From Node vertex_9_4 to vertex_6_2 (Delay 0 Distance 1) depType Data
Edge Id: 19. From Node vertex_9_0 to vertex_6_3 (Delay 0 Distance 0) depType Data
Edge Id: 20. From Node vertex_9_1 to vertex_6_4 (Delay 0 Distance 0) depType Data
Edge Id: 21. From Node vertex_0_0 to vertex_2_0 (Delay 0 Distance 0) depType Data
Edge Id: 22. From Node vertex_0_1 to vertex_2_1 (Delay 0 Distance 0) depType Data
Edge Id: 23. From Node vertex_0_2 to vertex_2_2 (Delay 0 Distance 0) depType Data
Edge Id: 24. From Node vertex_0_3 to vertex_2_3 (Delay 0 Distance 0) depType Data
Edge Id: 25. From Node vertex_0_4 to vertex_2_4 (Delay 0 Distance 0) depType Data
Edge Id: 26. From Node vertex_2_0 to vertex_3_0 (Delay 0 Distance 0) depType Data
Edge Id: 27. From Node vertex_2_1 to vertex_3_1 (Delay 0 Distance 0) depType Data
Edge Id: 28. From Node vertex_2_2 to vertex_3_2 (Delay 0 Distance 0) depType Data
Edge Id: 29. From Node vertex_2_3 to vertex_3_3 (Delay 0 Distance 0) depType Data
Edge Id: 30. From Node vertex_2_4 to vertex_3_4 (Delay 0 Distance 0) depType Data
Edge Id: 31. From Node vertex_3_0 to vertex_0_0 (Delay 0 Distance 1) depType Data
Edge Id: 32. From Node vertex_3_1 to vertex_0_1 (Delay 0 Distance 1) depType Data
Edge Id: 33. From Node vertex_3_2 to vertex_0_2 (Delay 0 Distance 1) depType Data
Edge Id: 34. From Node vertex_3_3 to vertex_0_3 (Delay 0 Distance 1) depType Data
Edge Id: 1. From Node vertex_6_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node vertex_6_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node vertex_6_2 to vertex_7_2 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node vertex_6_3 to vertex_7_3 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node vertex_6_4 to vertex_7_4 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node vertex_7_0 to vertex_8_0 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node vertex_7_1 to vertex_8_1 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node vertex_7_2 to vertex_8_2 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node vertex_7_3 to vertex_8_3 (Delay 0 Distance 0) depType Data
Edge Id: 35. From Node vertex_3_4 to vertex_0_4 (Delay 0 Distance 1) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: red with limit/vertices 3/15, latency 2, blockingTime 1, physicalDelay 0
Resource Model has limited resource: green with limit/vertices 5/20, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex vertex_6_2 with green
Registered vertex vertex_9_1 with green
Registered vertex vertex_9_2 with green
Registered vertex vertex_8_3 with green
Registered vertex vertex_9_0 with green
Registered vertex vertex_6_0 with green
Registered vertex vertex_8_0 with green
Registered vertex vertex_9_3 with green
Registered vertex vertex_8_4 with green
Registered vertex vertex_7_0 with green
Registered vertex vertex_8_1 with green
Registered vertex vertex_7_1 with green
Registered vertex vertex_7_2 with green
Registered vertex vertex_7_3 with green
Registered vertex vertex_7_4 with green
Registered vertex vertex_2_0 with red
Registered vertex vertex_2_1 with red
Registered vertex vertex_2_2 with red
Registered vertex vertex_2_3 with red
Registered vertex vertex_2_4 with red
Registered vertex vertex_3_0 with red
Registered vertex vertex_3_1 with red
Registered vertex vertex_3_2 with red
Registered vertex vertex_3_3 with red
Registered vertex vertex_3_4 with red
Registered vertex vertex_0_0 with red
Registered vertex vertex_0_1 with red
Registered vertex vertex_0_2 with red
Registered vertex vertex_0_3 with red
Registered vertex vertex_0_4 with red
Registered vertex vertex_6_3 with green
Registered vertex vertex_6_1 with green
Registered vertex vertex_9_4 with green
Registered vertex vertex_6_4 with green
Registered vertex vertex_8_2 with green
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Start verify rational II schedule: < 4 5 4 5 4  >
setting MRT for latency sequence '0 4 9 13 18 '
Created resource copy from 'red' -> 'red'
Created resource copy from 'green' -> 'green'
Constructing dummy MRT now
Finished constructing dummy MRT now
i=0, limit = 3
specified dummy MRT column height = 3 for resource red at column 0
i=1, limit = 3
specified dummy MRT column height = 3 for resource red at column 1
i=2, limit = 3
specified dummy MRT column height = 3 for resource red at column 2
i=3, limit = 3
specified dummy MRT column height = 3 for resource red at column 3
i=4, limit = 3
specified dummy MRT column height = 3 for resource red at column 4
i=5, limit = 3
specified dummy MRT column height = 3 for resource red at column 5
i=6, limit = 3
specified dummy MRT column height = 3 for resource red at column 6
i=7, limit = 3
specified dummy MRT column height = 3 for resource red at column 7
i=8, limit = 3
specified dummy MRT column height = 3 for resource red at column 8
i=9, limit = 3
specified dummy MRT column height = 3 for resource red at column 9
i=10, limit = 3
specified dummy MRT column height = 3 for resource red at column 10
i=11, limit = 3
specified dummy MRT column height = 3 for resource red at column 11
i=12, limit = 3
specified dummy MRT column height = 3 for resource red at column 12
i=13, limit = 3
specified dummy MRT column height = 3 for resource red at column 13
i=14, limit = 3
specified dummy MRT column height = 3 for resource red at column 14
i=15, limit = 3
specified dummy MRT column height = 3 for resource red at column 15
i=16, limit = 3
specified dummy MRT column height = 3 for resource red at column 16
i=17, limit = 3
specified dummy MRT column height = 3 for resource red at column 17
i=18, limit = 3
specified dummy MRT column height = 3 for resource red at column 18
i=19, limit = 3
specified dummy MRT column height = 3 for resource red at column 19
i=20, limit = 3
specified dummy MRT column height = 3 for resource red at column 20
i=21, limit = 3
specified dummy MRT column height = 3 for resource red at column 21
created dummy MRT
created dummy vertices
  counter=0
  vertexCounter=0
    latency = 0
    moduloSlot = 0
    inserted vertex 0 to modulo slot 0
    latency = 4
    moduloSlot = 4
    inserted vertex 0 to modulo slot 4
    latency = 9
    moduloSlot = 9
    inserted vertex 0 to modulo slot 9
    latency = 13
    moduloSlot = 13
    inserted vertex 0 to modulo slot 13
    latency = 18
    moduloSlot = 18
    inserted vertex 0 to modulo slot 18
    found MRT slot for vertex
    MRT height: 1
  counter=1
  vertexCounter=1
    latency = 0
    moduloSlot = 0
    inserted vertex 1 to modulo slot 1
    latency = 4
    moduloSlot = 4
    inserted vertex 1 to modulo slot 5
    latency = 9
    moduloSlot = 9
    inserted vertex 1 to modulo slot 10
    latency = 13
    moduloSlot = 13
    inserted vertex 1 to modulo slot 14
    latency = 18
    moduloSlot = 18
    inserted vertex 1 to modulo slot 19
    found MRT slot for vertex
    MRT height: 1
  counter=2
  vertexCounter=2
    latency = 0
    moduloSlot = 0
    inserted vertex 2 to modulo slot 2
    latency = 4
    moduloSlot = 4
    inserted vertex 2 to modulo slot 6
    latency = 9
    moduloSlot = 9
    inserted vertex 2 to modulo slot 11
    latency = 13
    moduloSlot = 13
    inserted vertex 2 to modulo slot 15
    latency = 18
    moduloSlot = 18
    inserted vertex 2 to modulo slot 20
    found MRT slot for vertex
    MRT height: 1
  counter=3
  vertexCounter=3
    latency = 0
    moduloSlot = 0
    inserted vertex 3 to modulo slot 3
    latency = 4
    moduloSlot = 4
    inserted vertex 3 to modulo slot 7
    latency = 9
    moduloSlot = 9
    inserted vertex 3 to modulo slot 12
    latency = 13
    moduloSlot = 13
    inserted vertex 3 to modulo slot 16
    latency = 18
    moduloSlot = 18
    inserted vertex 3 to modulo slot 21
    found MRT slot for vertex
    MRT height: 1
  counter=4
  vertexCounter=4
    latency = 0
    moduloSlot = 0
    inserted vertex 4 to modulo slot 4
    latency = 4
    moduloSlot = 4
    inserted vertex 4 to modulo slot 8
    latency = 9
    moduloSlot = 9
    inserted vertex 4 to modulo slot 13
    latency = 13
    moduloSlot = 13
    inserted vertex 4 to modulo slot 17
    latency = 18
    moduloSlot = 18
    inserted vertex 4 to modulo slot 0
    found MRT slot for vertex
    MRT height: 1
  counter=5
  vertexCounter=5
    latency = 0
    moduloSlot = 0
    inserted vertex 5 to modulo slot 5
    latency = 4
    moduloSlot = 4
    inserted vertex 5 to modulo slot 9
    latency = 9
    moduloSlot = 9
    inserted vertex 5 to modulo slot 14
    latency = 13
    moduloSlot = 13
    inserted vertex 5 to modulo slot 18
    latency = 18
    moduloSlot = 18
    inserted vertex 5 to modulo slot 1
    found MRT slot for vertex
    MRT height: 1
  counter=6
  vertexCounter=6
    latency = 0
    moduloSlot = 0
    inserted vertex 6 to modulo slot 6
    latency = 4
    moduloSlot = 4
    inserted vertex 6 to modulo slot 10
    latency = 9
    moduloSlot = 9
    inserted vertex 6 to modulo slot 15
    latency = 13
    moduloSlot = 13
    inserted vertex 6 to modulo slot 19
    latency = 18
    moduloSlot = 18
    inserted vertex 6 to modulo slot 2
    found MRT slot for vertex
    MRT height: 1
  counter=7
  vertexCounter=7
    latency = 0
    moduloSlot = 0
    inserted vertex 7 to modulo slot 7
    latency = 4
    moduloSlot = 4
    inserted vertex 7 to modulo slot 11
    latency = 9
    moduloSlot = 9
    inserted vertex 7 to modulo slot 16
    latency = 13
    moduloSlot = 13
    inserted vertex 7 to modulo slot 20
    latency = 18
    moduloSlot = 18
    inserted vertex 7 to modulo slot 3
    found MRT slot for vertex
    MRT height: 1
  counter=8
  vertexCounter=8
    latency = 0
    moduloSlot = 0
    inserted vertex 8 to modulo slot 8
    latency = 4
    moduloSlot = 4
    inserted vertex 8 to modulo slot 12
    latency = 9
    moduloSlot = 9
    inserted vertex 8 to modulo slot 17
    latency = 13
    moduloSlot = 13
    inserted vertex 8 to modulo slot 21
    latency = 18
    moduloSlot = 18
    inserted vertex 8 to modulo slot 4
    found MRT slot for vertex
    MRT height: 1
  counter=9
  vertexCounter=9
    latency = 0
    moduloSlot = 0
    inserted vertex 9 to modulo slot 9
    latency = 4
    moduloSlot = 4
    inserted vertex 9 to modulo slot 13
    latency = 9
    moduloSlot = 9
    inserted vertex 9 to modulo slot 18
    latency = 13
    moduloSlot = 13
    inserted vertex 9 to modulo slot 0
    latency = 18
    moduloSlot = 18
    inserted vertex 9 to modulo slot 5
    found MRT slot for vertex
    MRT height: 1
  counter=10
  vertexCounter=10
    latency = 0
    moduloSlot = 0
    inserted vertex 10 to modulo slot 10
    latency = 4
    moduloSlot = 4
    inserted vertex 10 to modulo slot 14
    latency = 9
    moduloSlot = 9
    inserted vertex 10 to modulo slot 19
    latency = 13
    moduloSlot = 13
    inserted vertex 10 to modulo slot 1
    latency = 18
    moduloSlot = 18
    inserted vertex 10 to modulo slot 6
    found MRT slot for vertex
    MRT height: 1
  counter=11
  vertexCounter=11
    latency = 0
    moduloSlot = 0
    inserted vertex 11 to modulo slot 11
    latency = 4
    moduloSlot = 4
    inserted vertex 11 to modulo slot 15
    latency = 9
    moduloSlot = 9
    inserted vertex 11 to modulo slot 20
    latency = 13
    moduloSlot = 13
    inserted vertex 11 to modulo slot 2
    latency = 18
    moduloSlot = 18
    inserted vertex 11 to modulo slot 7
    found MRT slot for vertex
    MRT height: 1
  counter=12
  vertexCounter=12
    latency = 0
    moduloSlot = 0
    inserted vertex 12 to modulo slot 12
    latency = 4
    moduloSlot = 4
    inserted vertex 12 to modulo slot 16
    latency = 9
    moduloSlot = 9
    inserted vertex 12 to modulo slot 21
    latency = 13
    moduloSlot = 13
    inserted vertex 12 to modulo slot 3
    latency = 18
    moduloSlot = 18
    inserted vertex 12 to modulo slot 8
    found MRT slot for vertex
    MRT height: 1
  counter=13
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 13 is already full
    removing vertex from MRT
  counter=14
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 14 is already full
    removing vertex from MRT
  counter=15
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 15 is already full
    removing vertex from MRT
  counter=16
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 16 is already full
    removing vertex from MRT
  counter=17
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    inserted vertex 13 to modulo slot 17
    latency = 4
    moduloSlot = 4
    MRT at column 21 is already full
    removing vertex from MRT
  counter=18
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 18 is already full
    removing vertex from MRT
  counter=19
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 19 is already full
    removing vertex from MRT
  counter=20
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 20 is already full
    removing vertex from MRT
  counter=21
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 21 is already full
    removing vertex from MRT
  counter=22
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 0 is already full
    removing vertex from MRT
  counter=23
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 1 is already full
    removing vertex from MRT
  counter=24
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 2 is already full
    removing vertex from MRT
  counter=25
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 3 is already full
    removing vertex from MRT
  counter=26
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 4 is already full
    removing vertex from MRT
  counter=27
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 5 is already full
    removing vertex from MRT
  counter=28
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 6 is already full
    removing vertex from MRT
  counter=29
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 7 is already full
    removing vertex from MRT
  counter=30
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 8 is already full
    removing vertex from MRT
  counter=31
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 9 is already full
    removing vertex from MRT
  counter=32
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 10 is already full
    removing vertex from MRT
  counter=33
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 11 is already full
    removing vertex from MRT
  counter=34
  vertexCounter=13
    latency = 0
    moduloSlot = 0
    MRT at column 12 is already full
    removing vertex from MRT
specified MRT column height = 1 for resource red at column 0
specified MRT column height = 1 for resource red at column 1
specified MRT column height = 1 for resource red at column 2
specified MRT column height = 1 for resource red at column 3
specified MRT column height = 1 for resource red at column 4
specified MRT column height = 1 for resource red at column 5
specified MRT column height = 1 for resource red at column 6
specified MRT column height = 1 for resource red at column 7
specified MRT column height = 1 for resource red at column 8
specified MRT column height = 1 for resource red at column 9
specified MRT column height = 1 for resource red at column 10
specified MRT column height = 1 for resource red at column 11
specified MRT column height = 1 for resource red at column 12
specified MRT column height = 0 for resource red at column 13
specified MRT column height = 0 for resource red at column 14
specified MRT column height = 0 for resource red at column 15
specified MRT column height = 0 for resource red at column 16
specified MRT column height = 0 for resource red at column 17
specified MRT column height = 0 for resource red at column 18
specified MRT column height = 0 for resource red at column 19
specified MRT column height = 0 for resource red at column 20
specified MRT column height = 0 for resource red at column 21
Finished constructing dummy MRT now
Found limited resource with limit modulo #samples == 0 - build trivial MRT for this resource
specified MRT column height = 1 for resource green at column 0
specified MRT column height = 1 for resource green at column 1
specified MRT column height = 1 for resource green at column 2
specified MRT column height = 1 for resource green at column 3
specified MRT column height = 1 for resource green at column 4
specified MRT column height = 1 for resource green at column 5
specified MRT column height = 1 for resource green at column 6
specified MRT column height = 1 for resource green at column 7
specified MRT column height = 1 for resource green at column 8
specified MRT column height = 1 for resource green at column 9
specified MRT column height = 1 for resource green at column 10
specified MRT column height = 1 for resource green at column 11
specified MRT column height = 1 for resource green at column 12
specified MRT column height = 1 for resource green at column 13
specified MRT column height = 1 for resource green at column 14
specified MRT column height = 1 for resource green at column 15
specified MRT column height = 1 for resource green at column 16
specified MRT column height = 1 for resource green at column 17
specified MRT column height = 1 for resource green at column 18
specified MRT column height = 1 for resource green at column 19
specified MRT column height = 1 for resource green at column 20
specified MRT column height = 1 for resource green at column 21
MRT
  Resource red
0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scc schedule:
    vertex_0: 0, 20
    vertex_2: 2, 20
    vertex_3: 5, 20
    vertex_6: 0, 16
    vertex_7: 2, 16
    vertex_8: 3, 16
    vertex_9: 4, 16
MRT
  Resource red
vertex_0   0000000000 vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   0000000000 vertex_7   vertex_8   vertex_9   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
SCC solver needed 0 sec - determining start times now
created edge vertex_19 -> vertex_20)
created edge vertex_20 -> vertex_21)
created edge vertex_15 -> vertex_16)
created edge vertex_14 -> vertex_16)
created edge vertex_13 -> vertex_16)
created edge vertex_12 -> vertex_16)
created edge vertex_16 -> vertex_18)
created edge vertex_16 -> vertex_17)
registered vertex vertex_0
registered vertex vertex_1
registered vertex vertex_2
registered vertex vertex_3
registered vertex vertex_4
registered vertex vertex_5
registered vertex vertex_6
registered vertex vertex_7
registered vertex vertex_8
registered vertex vertex_9
registered vertex vertex_10
registered vertex vertex_11
registered vertex vertex_12
registered vertex vertex_13
registered vertex vertex_14
registered vertex vertex_15
registered vertex vertex_16
registered vertex vertex_17
registered vertex vertex_18
registered vertex vertex_19
registered vertex vertex_20
registered vertex vertex_21
Determined queue for scheduling SCCs:
  SCC ID 7
    vertex_19
  SCC ID 19
    vertex_1
  SCC ID 6
    vertex_20
  SCC ID 4
    vertex_22
  SCC ID 14
    vertex_12
  SCC ID 11
    vertex_15
  SCC ID 15
    vertex_5
  SCC ID 12
    vertex_14
  SCC ID 5
    vertex_21
  SCC ID 13
    vertex_13
  SCC ID 10
    vertex_16
  SCC ID 8
    vertex_18
  SCC ID 9
    vertex_17
  SCC ID 1
    vertex_25
  SCC ID 2
    vertex_24
  SCC ID 3
    vertex_23
  SCC ID 0
    vertex_26
  SCC ID 16
    vertex_8
    vertex_9
    vertex_6
    vertex_7
  SCC ID 18
    vertex_10
  SCC ID 17
    vertex_11
  SCC ID 20
    vertex_2
    vertex_3
    vertex_0
  SCC ID 21
    vertex_4
scheduling SCC with ID '7' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 7 has 0 inputs with following start times:
  SCC 7 consists of the following vertices
    vertex_19
Try scheduling vertex 'vertex_19' at time slot 0
Try scheduling vertex 'vertex_19' at time slot 1
SCHEDULED VERTEX 'vertex_19' FROM TRIVIAL SCC IN TIME SLOT '1' (NO INPUTS)
MRT after scheduling SCC7:
MRT
  Resource red
vertex_0   0000000000 vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '19' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 19 has 0 inputs with following start times:
  SCC 19 consists of the following vertices
    vertex_1
Try scheduling vertex 'vertex_1' at time slot 0
Try scheduling vertex 'vertex_1' at time slot 1
SCHEDULED VERTEX 'vertex_1' FROM TRIVIAL SCC IN TIME SLOT '1' (NO INPUTS)
MRT after scheduling SCC19:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '6' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 6 has 0 inputs with following start times:
  SCC 6 consists of the following vertices
    vertex_20
Try scheduling vertex 'vertex_20' at time slot 0
Try scheduling vertex 'vertex_20' at time slot 1
Try scheduling vertex 'vertex_20' at time slot 2
Try scheduling vertex 'vertex_20' at time slot 3
Try scheduling vertex 'vertex_20' at time slot 4
Try scheduling vertex 'vertex_20' at time slot 5
SCHEDULED VERTEX 'vertex_20' FROM TRIVIAL SCC IN TIME SLOT '5' (NO INPUTS)
MRT after scheduling SCC6:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '4' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 4 has 0 inputs with following start times:
  SCC 4 consists of the following vertices
    vertex_22
Try scheduling vertex 'vertex_22' at time slot 0
Try scheduling vertex 'vertex_22' at time slot 1
Try scheduling vertex 'vertex_22' at time slot 2
Try scheduling vertex 'vertex_22' at time slot 3
Try scheduling vertex 'vertex_22' at time slot 4
Try scheduling vertex 'vertex_22' at time slot 5
Try scheduling vertex 'vertex_22' at time slot 6
SCHEDULED VERTEX 'vertex_22' FROM TRIVIAL SCC IN TIME SLOT '6' (NO INPUTS)
MRT after scheduling SCC4:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '14' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 14 has 0 inputs with following start times:
  SCC 14 consists of the following vertices
    vertex_12
Try scheduling vertex 'vertex_12' at time slot 0
Try scheduling vertex 'vertex_12' at time slot 1
Try scheduling vertex 'vertex_12' at time slot 2
Try scheduling vertex 'vertex_12' at time slot 3
Try scheduling vertex 'vertex_12' at time slot 4
Try scheduling vertex 'vertex_12' at time slot 5
Try scheduling vertex 'vertex_12' at time slot 6
Try scheduling vertex 'vertex_12' at time slot 7
SCHEDULED VERTEX 'vertex_12' FROM TRIVIAL SCC IN TIME SLOT '7' (NO INPUTS)
MRT after scheduling SCC14:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '11' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 11 has 0 inputs with following start times:
  SCC 11 consists of the following vertices
    vertex_15
Try scheduling vertex 'vertex_15' at time slot 0
Try scheduling vertex 'vertex_15' at time slot 1
Try scheduling vertex 'vertex_15' at time slot 2
Try scheduling vertex 'vertex_15' at time slot 3
Try scheduling vertex 'vertex_15' at time slot 4
Try scheduling vertex 'vertex_15' at time slot 5
Try scheduling vertex 'vertex_15' at time slot 6
Try scheduling vertex 'vertex_15' at time slot 7
Try scheduling vertex 'vertex_15' at time slot 8
SCHEDULED VERTEX 'vertex_15' FROM TRIVIAL SCC IN TIME SLOT '8' (NO INPUTS)
MRT after scheduling SCC11:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '15' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 15 has 0 inputs with following start times:
  SCC 15 consists of the following vertices
    vertex_5
Try scheduling vertex 'vertex_5' at time slot 0
Try scheduling vertex 'vertex_5' at time slot 1
Try scheduling vertex 'vertex_5' at time slot 2
Try scheduling vertex 'vertex_5' at time slot 3
Try scheduling vertex 'vertex_5' at time slot 4
Try scheduling vertex 'vertex_5' at time slot 5
Try scheduling vertex 'vertex_5' at time slot 6
Try scheduling vertex 'vertex_5' at time slot 7
Try scheduling vertex 'vertex_5' at time slot 8
Try scheduling vertex 'vertex_5' at time slot 9
SCHEDULED VERTEX 'vertex_5' FROM TRIVIAL SCC IN TIME SLOT '9' (NO INPUTS)
MRT after scheduling SCC15:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '12' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 12 has 0 inputs with following start times:
  SCC 12 consists of the following vertices
    vertex_14
Try scheduling vertex 'vertex_14' at time slot 0
Try scheduling vertex 'vertex_14' at time slot 1
Try scheduling vertex 'vertex_14' at time slot 2
Try scheduling vertex 'vertex_14' at time slot 3
Try scheduling vertex 'vertex_14' at time slot 4
Try scheduling vertex 'vertex_14' at time slot 5
Try scheduling vertex 'vertex_14' at time slot 6
Try scheduling vertex 'vertex_14' at time slot 7
Try scheduling vertex 'vertex_14' at time slot 8
Try scheduling vertex 'vertex_14' at time slot 9
Try scheduling vertex 'vertex_14' at time slot 10
SCHEDULED VERTEX 'vertex_14' FROM TRIVIAL SCC IN TIME SLOT '10' (NO INPUTS)
MRT after scheduling SCC12:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '5' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 5 has 0 inputs with following start times:
  SCC 5 consists of the following vertices
    vertex_21
Try scheduling vertex 'vertex_21' at time slot 0
Try scheduling vertex 'vertex_21' at time slot 1
Try scheduling vertex 'vertex_21' at time slot 2
Try scheduling vertex 'vertex_21' at time slot 3
Try scheduling vertex 'vertex_21' at time slot 4
Try scheduling vertex 'vertex_21' at time slot 5
Try scheduling vertex 'vertex_21' at time slot 6
Try scheduling vertex 'vertex_21' at time slot 7
Try scheduling vertex 'vertex_21' at time slot 8
Try scheduling vertex 'vertex_21' at time slot 9
Try scheduling vertex 'vertex_21' at time slot 10
Try scheduling vertex 'vertex_21' at time slot 11
SCHEDULED VERTEX 'vertex_21' FROM TRIVIAL SCC IN TIME SLOT '11' (NO INPUTS)
MRT after scheduling SCC5:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '13' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 13 has 0 inputs with following start times:
  SCC 13 consists of the following vertices
    vertex_13
Try scheduling vertex 'vertex_13' at time slot 0
Try scheduling vertex 'vertex_13' at time slot 1
Try scheduling vertex 'vertex_13' at time slot 2
Try scheduling vertex 'vertex_13' at time slot 3
Try scheduling vertex 'vertex_13' at time slot 4
Try scheduling vertex 'vertex_13' at time slot 5
Try scheduling vertex 'vertex_13' at time slot 6
Try scheduling vertex 'vertex_13' at time slot 7
Try scheduling vertex 'vertex_13' at time slot 8
Try scheduling vertex 'vertex_13' at time slot 9
Try scheduling vertex 'vertex_13' at time slot 10
Try scheduling vertex 'vertex_13' at time slot 11
Try scheduling vertex 'vertex_13' at time slot 12
SCHEDULED VERTEX 'vertex_13' FROM TRIVIAL SCC IN TIME SLOT '12' (NO INPUTS)
MRT after scheduling SCC13:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '10' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 10 has 0 inputs with following start times:
  SCC 10 consists of the following vertices
    vertex_16
Try scheduling vertex 'vertex_16' at time slot 0
Try scheduling vertex 'vertex_16' at time slot 1
Try scheduling vertex 'vertex_16' at time slot 2
Try scheduling vertex 'vertex_16' at time slot 3
Try scheduling vertex 'vertex_16' at time slot 4
Try scheduling vertex 'vertex_16' at time slot 5
Try scheduling vertex 'vertex_16' at time slot 6
Try scheduling vertex 'vertex_16' at time slot 7
Try scheduling vertex 'vertex_16' at time slot 8
Try scheduling vertex 'vertex_16' at time slot 9
Try scheduling vertex 'vertex_16' at time slot 10
Try scheduling vertex 'vertex_16' at time slot 11
Try scheduling vertex 'vertex_16' at time slot 12
Try scheduling vertex 'vertex_16' at time slot 13
SCHEDULED VERTEX 'vertex_16' FROM TRIVIAL SCC IN TIME SLOT '13' (NO INPUTS)
MRT after scheduling SCC10:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '8' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 8 has 0 inputs with following start times:
  SCC 8 consists of the following vertices
    vertex_18
Try scheduling vertex 'vertex_18' at time slot 0
Try scheduling vertex 'vertex_18' at time slot 1
Try scheduling vertex 'vertex_18' at time slot 2
Try scheduling vertex 'vertex_18' at time slot 3
Try scheduling vertex 'vertex_18' at time slot 4
Try scheduling vertex 'vertex_18' at time slot 5
Try scheduling vertex 'vertex_18' at time slot 6
Try scheduling vertex 'vertex_18' at time slot 7
Try scheduling vertex 'vertex_18' at time slot 8
Try scheduling vertex 'vertex_18' at time slot 9
Try scheduling vertex 'vertex_18' at time slot 10
Try scheduling vertex 'vertex_18' at time slot 11
Try scheduling vertex 'vertex_18' at time slot 12
Try scheduling vertex 'vertex_18' at time slot 13
Try scheduling vertex 'vertex_18' at time slot 14
SCHEDULED VERTEX 'vertex_18' FROM TRIVIAL SCC IN TIME SLOT '14' (NO INPUTS)
MRT after scheduling SCC8:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '9' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 9 has 0 inputs with following start times:
  SCC 9 consists of the following vertices
    vertex_17
Try scheduling vertex 'vertex_17' at time slot 0
Try scheduling vertex 'vertex_17' at time slot 1
Try scheduling vertex 'vertex_17' at time slot 2
Try scheduling vertex 'vertex_17' at time slot 3
Try scheduling vertex 'vertex_17' at time slot 4
Try scheduling vertex 'vertex_17' at time slot 5
Try scheduling vertex 'vertex_17' at time slot 6
Try scheduling vertex 'vertex_17' at time slot 7
Try scheduling vertex 'vertex_17' at time slot 8
Try scheduling vertex 'vertex_17' at time slot 9
Try scheduling vertex 'vertex_17' at time slot 10
Try scheduling vertex 'vertex_17' at time slot 11
Try scheduling vertex 'vertex_17' at time slot 12
Try scheduling vertex 'vertex_17' at time slot 13
Try scheduling vertex 'vertex_17' at time slot 14
Try scheduling vertex 'vertex_17' at time slot 15
SCHEDULED VERTEX 'vertex_17' FROM TRIVIAL SCC IN TIME SLOT '15' (NO INPUTS)
MRT after scheduling SCC9:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '1' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 1 has 0 inputs with following start times:
  SCC 1 consists of the following vertices
    vertex_25
Try scheduling vertex 'vertex_25' at time slot 0
Try scheduling vertex 'vertex_25' at time slot 1
Try scheduling vertex 'vertex_25' at time slot 2
Try scheduling vertex 'vertex_25' at time slot 3
Try scheduling vertex 'vertex_25' at time slot 4
Try scheduling vertex 'vertex_25' at time slot 5
Try scheduling vertex 'vertex_25' at time slot 6
Try scheduling vertex 'vertex_25' at time slot 7
Try scheduling vertex 'vertex_25' at time slot 8
Try scheduling vertex 'vertex_25' at time slot 9
Try scheduling vertex 'vertex_25' at time slot 10
Try scheduling vertex 'vertex_25' at time slot 11
Try scheduling vertex 'vertex_25' at time slot 12
Try scheduling vertex 'vertex_25' at time slot 13
Try scheduling vertex 'vertex_25' at time slot 14
Try scheduling vertex 'vertex_25' at time slot 15
Try scheduling vertex 'vertex_25' at time slot 16
SCHEDULED VERTEX 'vertex_25' FROM TRIVIAL SCC IN TIME SLOT '16' (NO INPUTS)
MRT after scheduling SCC1:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  0000000000 0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '2' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 2 has 0 inputs with following start times:
  SCC 2 consists of the following vertices
    vertex_24
Try scheduling vertex 'vertex_24' at time slot 0
Try scheduling vertex 'vertex_24' at time slot 1
Try scheduling vertex 'vertex_24' at time slot 2
Try scheduling vertex 'vertex_24' at time slot 3
Try scheduling vertex 'vertex_24' at time slot 4
Try scheduling vertex 'vertex_24' at time slot 5
Try scheduling vertex 'vertex_24' at time slot 6
Try scheduling vertex 'vertex_24' at time slot 7
Try scheduling vertex 'vertex_24' at time slot 8
Try scheduling vertex 'vertex_24' at time slot 9
Try scheduling vertex 'vertex_24' at time slot 10
Try scheduling vertex 'vertex_24' at time slot 11
Try scheduling vertex 'vertex_24' at time slot 12
Try scheduling vertex 'vertex_24' at time slot 13
Try scheduling vertex 'vertex_24' at time slot 14
Try scheduling vertex 'vertex_24' at time slot 15
Try scheduling vertex 'vertex_24' at time slot 16
Try scheduling vertex 'vertex_24' at time slot 17
SCHEDULED VERTEX 'vertex_24' FROM TRIVIAL SCC IN TIME SLOT '17' (NO INPUTS)
MRT after scheduling SCC2:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  0000000000 0000000000 0000000000 0000000000 
scheduling SCC with ID '3' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 3 has 0 inputs with following start times:
  SCC 3 consists of the following vertices
    vertex_23
Try scheduling vertex 'vertex_23' at time slot 0
Try scheduling vertex 'vertex_23' at time slot 1
Try scheduling vertex 'vertex_23' at time slot 2
Try scheduling vertex 'vertex_23' at time slot 3
Try scheduling vertex 'vertex_23' at time slot 4
Try scheduling vertex 'vertex_23' at time slot 5
Try scheduling vertex 'vertex_23' at time slot 6
Try scheduling vertex 'vertex_23' at time slot 7
Try scheduling vertex 'vertex_23' at time slot 8
Try scheduling vertex 'vertex_23' at time slot 9
Try scheduling vertex 'vertex_23' at time slot 10
Try scheduling vertex 'vertex_23' at time slot 11
Try scheduling vertex 'vertex_23' at time slot 12
Try scheduling vertex 'vertex_23' at time slot 13
Try scheduling vertex 'vertex_23' at time slot 14
Try scheduling vertex 'vertex_23' at time slot 15
Try scheduling vertex 'vertex_23' at time slot 16
Try scheduling vertex 'vertex_23' at time slot 17
Try scheduling vertex 'vertex_23' at time slot 18
SCHEDULED VERTEX 'vertex_23' FROM TRIVIAL SCC IN TIME SLOT '18' (NO INPUTS)
MRT after scheduling SCC3:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  0000000000 0000000000 0000000000 
scheduling SCC with ID '0' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 0 has 0 inputs with following start times:
  SCC 0 consists of the following vertices
    vertex_26
Try scheduling vertex 'vertex_26' at time slot 0
Try scheduling vertex 'vertex_26' at time slot 1
Try scheduling vertex 'vertex_26' at time slot 2
Try scheduling vertex 'vertex_26' at time slot 3
Try scheduling vertex 'vertex_26' at time slot 4
Try scheduling vertex 'vertex_26' at time slot 5
Try scheduling vertex 'vertex_26' at time slot 6
Try scheduling vertex 'vertex_26' at time slot 7
Try scheduling vertex 'vertex_26' at time slot 8
Try scheduling vertex 'vertex_26' at time slot 9
Try scheduling vertex 'vertex_26' at time slot 10
Try scheduling vertex 'vertex_26' at time slot 11
Try scheduling vertex 'vertex_26' at time slot 12
Try scheduling vertex 'vertex_26' at time slot 13
Try scheduling vertex 'vertex_26' at time slot 14
Try scheduling vertex 'vertex_26' at time slot 15
Try scheduling vertex 'vertex_26' at time slot 16
Try scheduling vertex 'vertex_26' at time slot 17
Try scheduling vertex 'vertex_26' at time slot 18
Try scheduling vertex 'vertex_26' at time slot 19
SCHEDULED VERTEX 'vertex_26' FROM TRIVIAL SCC IN TIME SLOT '19' (NO INPUTS)
MRT after scheduling SCC0:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  0000000000 0000000000 
scheduling SCC with ID '16' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
    Dst ID == SCC ID (16 == 16)
  Edge from 'vertex_13' to 'vertex_16'
    Dst ID == SCC ID (16 == 16)
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
    Dst ID == SCC ID (16 == 16)
  Edge from 'vertex_14' to 'vertex_16'
    Dst ID == SCC ID (16 == 16)
  Edge from 'vertex_16' to 'vertex_18'
  SCC 16 has 4 inputs with following start times:
    10
    12
    9
    7
  SCC 16 consists of the following vertices
    vertex_8
    vertex_9
    vertex_6
    vertex_7
  start checking earliest start time according to edges
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    check schedule time of vertex 'vertex_5'
    schedule time of vertex 'vertex_5': 9
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    minimum offset: 22
    check schedule time of vertex 'vertex_12'
    schedule time of vertex 'vertex_12': 7
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    minimum offset: 22
    check schedule time of vertex 'vertex_13'
    schedule time of vertex 'vertex_13': 12
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    minimum offset: 22
    check schedule time of vertex 'vertex_14'
    schedule time of vertex 'vertex_14': 10
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
Scheduling SCC 16 with offset 22
SCHEDULED VERTEX 'vertex_8' IN TIME SLOT '25'
SCHEDULED VERTEX 'vertex_9' IN TIME SLOT '26'
SCHEDULED VERTEX 'vertex_6' IN TIME SLOT '22'
SCHEDULED VERTEX 'vertex_7' IN TIME SLOT '24'
MRT after scheduling SCC16:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  0000000000 0000000000 
scheduling SCC with ID '18' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
    Dst ID == SCC ID (18 == 18)
  SCC 18 has 4 inputs with following start times:
    25
    26
    22
    24
  SCC 18 consists of the following vertices
    vertex_10
  start checking earliest start time according to edges
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    check schedule time of vertex 'vertex_9'
    schedule time of vertex 'vertex_9': 26
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    try inserting vertex 'vertex_10' from trivial SCC into MRT
    removing vertex 'vertex_10' from MRT again
    try inserting vertex 'vertex_10' into MRT at time slot 0
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  0000000000 0000000000 
    try inserting vertex 'vertex_10' into MRT at time slot 1
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 2
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 3
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 4
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 5
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 6
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 7
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 8
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 9
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 10
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 11
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 12
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 13
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 14
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 15
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 16
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 17
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 18
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 19
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 20
    slot is free
    removing vertex 'vertex_10' from MRT again
    try inserting vertex 'vertex_10' into MRT at time slot 21
    slot is free
    removing vertex 'vertex_10' from MRT again
    try inserting vertex 'vertex_10' into MRT at time slot 0
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  0000000000 0000000000 
    try inserting vertex 'vertex_10' into MRT at time slot 1
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 2
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 3
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 4
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 5
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 6
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 7
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 8
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 9
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 10
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 11
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 12
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 13
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 14
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 15
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 16
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 17
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 18
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 19
    slot is not free
    try inserting vertex 'vertex_10' into MRT at time slot 20
    slot is free
    minimum offset: 42
Scheduling SCC 18 with offset 42
SCHEDULED VERTEX 'vertex_10' IN TIME SLOT '42'
MRT after scheduling SCC18:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  0000000000 
scheduling SCC with ID '17' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
    Dst ID == SCC ID (17 == 17)
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 17 has 4 inputs with following start times:
    25
    26
    22
    24
  SCC 17 consists of the following vertices
    vertex_11
  start checking earliest start time according to edges
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    check schedule time of vertex 'vertex_9'
    schedule time of vertex 'vertex_9': 26
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    try inserting vertex 'vertex_11' from trivial SCC into MRT
    removing vertex 'vertex_11' from MRT again
    try inserting vertex 'vertex_11' into MRT at time slot 0
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  0000000000 
    try inserting vertex 'vertex_11' into MRT at time slot 1
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 2
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 3
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 4
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 5
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 6
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 7
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 8
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 9
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 10
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 11
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 12
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 13
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 14
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 15
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 16
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 17
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 18
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 19
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 20
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 21
    slot is free
    removing vertex 'vertex_11' from MRT again
    try inserting vertex 'vertex_11' into MRT at time slot 0
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  0000000000 
    try inserting vertex 'vertex_11' into MRT at time slot 1
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 2
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 3
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 4
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 5
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 6
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 7
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 8
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 9
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 10
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 11
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 12
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 13
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 14
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 15
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 16
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 17
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 18
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 19
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 20
    slot is not free
    try inserting vertex 'vertex_11' into MRT at time slot 21
    slot is free
Scheduling SCC 17 with offset 43
SCHEDULED VERTEX 'vertex_11' IN TIME SLOT '43'
MRT after scheduling SCC17:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  vertex_11  
scheduling SCC with ID '20' now
  Edge from 'vertex_20' to 'vertex_21'
  Edge from 'vertex_19' to 'vertex_20'
    Dst ID == SCC ID (20 == 20)
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 20 has 1 inputs with following start times:
    1
  SCC 20 consists of the following vertices
    vertex_2
    vertex_3
    vertex_0
  start checking earliest start time according to edges
    minimum offset: 0
    minimum offset: 0
    check schedule time of vertex 'vertex_1'
    schedule time of vertex 'vertex_1': 1
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
    minimum offset: 22
Scheduling SCC 20 with offset 22
SCHEDULED VERTEX 'vertex_2' IN TIME SLOT '24'
SCHEDULED VERTEX 'vertex_3' IN TIME SLOT '27'
SCHEDULED VERTEX 'vertex_0' IN TIME SLOT '22'
MRT after scheduling SCC20:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  vertex_11  
scheduling SCC with ID '21' now
  Edge from 'vertex_20' to 'vertex_21'
    Dst ID == SCC ID (21 == 21)
  Edge from 'vertex_19' to 'vertex_20'
  Edge from 'vertex_12' to 'vertex_16'
  Edge from 'vertex_13' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_17'
  Edge from 'vertex_15' to 'vertex_16'
  Edge from 'vertex_14' to 'vertex_16'
  Edge from 'vertex_16' to 'vertex_18'
  SCC 21 has 3 inputs with following start times:
    24
    27
    22
  SCC 21 consists of the following vertices
    vertex_4
  start checking earliest start time according to edges
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    minimum offset: 0
    check schedule time of vertex 'vertex_3'
    schedule time of vertex 'vertex_3': 27
    determined minimum delta according to latency sequence: 0
    determining minimum offset while respecting MRT
    try inserting vertex 'vertex_4' from trivial SCC into MRT
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 0
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  vertex_11  
    try inserting vertex 'vertex_4' into MRT at time slot 1
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 2
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 3
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 4
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 5
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  vertex_11  
    try inserting vertex 'vertex_4' into MRT at time slot 6
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 7
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 8
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 9
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 10
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 11
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 12
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 13
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  vertex_11  
    try inserting vertex 'vertex_4' into MRT at time slot 14
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 15
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 16
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 17
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 18
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 19
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 20
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 21
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 0
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 1
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 2
    slot is not free
    try inserting vertex 'vertex_4' into MRT at time slot 3
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 4
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 5
    slot is not free
    MRT
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  vertex_11  
    try inserting vertex 'vertex_4' into MRT at time slot 6
    slot is free
    removing vertex 'vertex_4' from MRT again
    try inserting vertex 'vertex_4' into MRT at time slot 7
    slot is free
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
    minimum offset: 29
Scheduling SCC 21 with offset 29
SCHEDULED VERTEX 'vertex_4' IN TIME SLOT '29'
MRT after scheduling SCC21:
MRT
  Resource red
vertex_0   vertex_1   vertex_2   0000000000 0000000000 vertex_3   0000000000 vertex_4   0000000000 0000000000 0000000000 0000000000 0000000000 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 
  Resource green
vertex_6   vertex_19  vertex_7   vertex_8   vertex_9   vertex_20  vertex_22  vertex_12  vertex_15  vertex_5   vertex_14  vertex_21  vertex_13  vertex_16  vertex_18  vertex_17  vertex_25  vertex_24  vertex_23  vertex_26  vertex_10  vertex_11  
minimum control step so far: 2147483647
minimum control step so far: 22
minimum control step: 1
shifting back all control steps by 1
Rat II Start times:
  Start time vector 0:
    vertex_0 - 21
    vertex_1 - 0
    vertex_2 - 23
    vertex_3 - 26
    vertex_4 - 28
    vertex_5 - 8
    vertex_6 - 21
    vertex_7 - 23
    vertex_8 - 24
    vertex_9 - 25
    vertex_10 - 41
    vertex_11 - 42
    vertex_12 - 6
    vertex_13 - 11
    vertex_14 - 9
    vertex_15 - 7
    vertex_16 - 12
    vertex_17 - 14
    vertex_18 - 13
    vertex_19 - 0
    vertex_20 - 4
    vertex_21 - 10
    vertex_22 - 5
    vertex_23 - 17
    vertex_24 - 16
    vertex_25 - 15
    vertex_26 - 18
  Start time vector 1:
    vertex_0 - 25
    vertex_1 - 4
    vertex_2 - 27
    vertex_3 - 30
    vertex_4 - 32
    vertex_5 - 12
    vertex_6 - 25
    vertex_7 - 27
    vertex_8 - 28
    vertex_9 - 29
    vertex_10 - 45
    vertex_11 - 46
    vertex_12 - 10
    vertex_13 - 15
    vertex_14 - 13
    vertex_15 - 11
    vertex_16 - 16
    vertex_17 - 18
    vertex_18 - 17
    vertex_19 - 4
    vertex_20 - 8
    vertex_21 - 14
    vertex_22 - 9
    vertex_23 - 21
    vertex_24 - 20
    vertex_25 - 19
    vertex_26 - 22
  Start time vector 2:
    vertex_0 - 30
    vertex_1 - 9
    vertex_2 - 32
    vertex_3 - 35
    vertex_4 - 37
    vertex_5 - 17
    vertex_6 - 30
    vertex_7 - 32
    vertex_8 - 33
    vertex_9 - 34
    vertex_10 - 50
    vertex_11 - 51
    vertex_12 - 15
    vertex_13 - 20
    vertex_14 - 18
    vertex_15 - 16
    vertex_16 - 21
    vertex_17 - 23
    vertex_18 - 22
    vertex_19 - 9
    vertex_20 - 13
    vertex_21 - 19
    vertex_22 - 14
    vertex_23 - 26
    vertex_24 - 25
    vertex_25 - 24
    vertex_26 - 27
  Start time vector 3:
    vertex_0 - 34
    vertex_1 - 13
    vertex_2 - 36
    vertex_3 - 39
    vertex_4 - 41
    vertex_5 - 21
    vertex_6 - 34
    vertex_7 - 36
    vertex_8 - 37
    vertex_9 - 38
    vertex_10 - 54
    vertex_11 - 55
    vertex_12 - 19
    vertex_13 - 24
    vertex_14 - 22
    vertex_15 - 20
    vertex_16 - 25
    vertex_17 - 27
    vertex_18 - 26
    vertex_19 - 13
    vertex_20 - 17
    vertex_21 - 23
    vertex_22 - 18
    vertex_23 - 30
    vertex_24 - 29
    vertex_25 - 28
    vertex_26 - 31
  Start time vector 4:
    vertex_0 - 39
    vertex_1 - 18
    vertex_2 - 41
    vertex_3 - 44
    vertex_4 - 46
    vertex_5 - 26
    vertex_6 - 39
    vertex_7 - 41
    vertex_8 - 42
    vertex_9 - 43
    vertex_10 - 59
    vertex_11 - 60
    vertex_12 - 24
    vertex_13 - 29
    vertex_14 - 27
    vertex_15 - 25
    vertex_16 - 30
    vertex_17 - 32
    vertex_18 - 31
    vertex_19 - 18
    vertex_20 - 22
    vertex_21 - 28
    vertex_22 - 23
    vertex_23 - 35
    vertex_24 - 34
    vertex_25 - 33
    vertex_26 - 36
RationalIISchedulerLayer::verifySchedule: start verifier for II=22/5
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:vertex_1_4(ID 10)
Vertex:vertex_4_3(ID 24)
Vertex:vertex_0_4(ID 5)
Vertex:vertex_4_1(ID 22)
Vertex:vertex_1_2(ID 8)
Vertex:vertex_3_4(ID 20)
Vertex:vertex_4_0(ID 21)
Vertex:vertex_1_0(ID 6)
Vertex:vertex_0_3(ID 4)
Vertex:vertex_3_1(ID 17)
Vertex:vertex_1_1(ID 7)
Vertex:vertex_2_4(ID 15)
Vertex:vertex_1_3(ID 9)
Vertex:vertex_3_2(ID 18)
Vertex:vertex_18_4(ID 95)
Vertex:vertex_17_1(ID 87)
Vertex:vertex_25_2(ID 128)
Vertex:vertex_19_2(ID 98)
Vertex:vertex_19_3(ID 99)
Vertex:vertex_16_0(ID 81)
Vertex:vertex_22_4(ID 115)
Vertex:vertex_24_4(ID 125)
Vertex:vertex_16_3(ID 84)
Vertex:vertex_25_0(ID 126)
Vertex:vertex_22_0(ID 111)
Vertex:vertex_26_4(ID 135)
Vertex:vertex_18_2(ID 93)
Vertex:vertex_25_4(ID 130)
Vertex:vertex_26_0(ID 131)
Vertex:vertex_24_2(ID 123)
Vertex:vertex_17_3(ID 89)
Vertex:vertex_22_2(ID 113)
Vertex:vertex_15_1(ID 77)
Vertex:vertex_23_4(ID 120)
Vertex:vertex_20_3(ID 104)
Vertex:vertex_25_3(ID 129)
Vertex:vertex_18_1(ID 92)
Vertex:vertex_16_2(ID 83)
Vertex:vertex_20_1(ID 102)
Vertex:vertex_20_4(ID 105)
Vertex:vertex_15_3(ID 79)
Vertex:vertex_26_3(ID 134)
Vertex:vertex_19_0(ID 96)
Vertex:vertex_25_1(ID 127)
Vertex:vertex_24_0(ID 121)
Vertex:vertex_22_3(ID 114)
Vertex:vertex_19_4(ID 100)
Vertex:vertex_21_3(ID 109)
Vertex:vertex_18_3(ID 94)
Vertex:vertex_21_1(ID 107)
Vertex:vertex_21_0(ID 106)
Vertex:vertex_26_2(ID 133)
Vertex:vertex_22_1(ID 112)
Vertex:vertex_20_0(ID 101)
Vertex:vertex_26_1(ID 132)
Vertex:vertex_14_2(ID 73)
Vertex:vertex_14_4(ID 75)
Vertex:vertex_17_4(ID 90)
Vertex:vertex_19_1(ID 97)
Vertex:vertex_24_3(ID 124)
Vertex:vertex_15_0(ID 76)
Vertex:vertex_17_2(ID 88)
Vertex:vertex_16_4(ID 85)
Vertex:vertex_23_1(ID 117)
Vertex:vertex_23_3(ID 119)
Vertex:vertex_23_2(ID 118)
Vertex:vertex_17_0(ID 86)
Vertex:vertex_16_1(ID 82)
Vertex:vertex_21_2(ID 108)
Vertex:vertex_18_0(ID 91)
Vertex:vertex_14_3(ID 74)
Vertex:vertex_20_2(ID 103)
Vertex:vertex_21_4(ID 110)
Vertex:vertex_15_2(ID 78)
Vertex:vertex_24_1(ID 122)
Vertex:vertex_23_0(ID 116)
Vertex:vertex_15_4(ID 80)
Vertex:vertex_6_4(ID 35)
Vertex:vertex_13_2(ID 68)
Vertex:vertex_2_2(ID 13)
Vertex:vertex_13_4(ID 70)
Vertex:vertex_8_3(ID 44)
Vertex:vertex_8_1(ID 42)
Vertex:vertex_11_4(ID 60)
Vertex:vertex_9_2(ID 48)
Vertex:vertex_13_0(ID 66)
Vertex:vertex_11_3(ID 59)
Vertex:vertex_5_4(ID 30)
Vertex:vertex_9_3(ID 49)
Vertex:vertex_12_3(ID 64)
Vertex:vertex_10_2(ID 53)
Vertex:vertex_8_0(ID 41)
Vertex:vertex_12_2(ID 63)
Vertex:vertex_5_2(ID 28)
Vertex:vertex_3_0(ID 16)
Vertex:vertex_12_0(ID 61)
Vertex:vertex_0_0(ID 1)
Vertex:vertex_9_4(ID 50)
Vertex:vertex_11_1(ID 57)
Vertex:vertex_6_1(ID 32)
Vertex:vertex_12_4(ID 65)
Vertex:vertex_7_4(ID 40)
Vertex:vertex_8_2(ID 43)
Vertex:vertex_11_2(ID 58)
Vertex:vertex_6_0(ID 31)
Vertex:vertex_13_3(ID 69)
Vertex:vertex_12_1(ID 62)
Vertex:vertex_9_1(ID 47)
Vertex:vertex_4_2(ID 23)
Vertex:vertex_11_0(ID 56)
Vertex:vertex_7_0(ID 36)
Vertex:vertex_8_4(ID 45)
Vertex:vertex_7_3(ID 39)
Vertex:vertex_5_0(ID 26)
Vertex:vertex_13_1(ID 67)
Vertex:vertex_10_0(ID 51)
Vertex:vertex_9_0(ID 46)
Vertex:vertex_2_3(ID 14)
Vertex:vertex_2_1(ID 12)
Vertex:vertex_14_1(ID 72)
Vertex:vertex_7_2(ID 38)
Vertex:vertex_2_0(ID 11)
Vertex:vertex_10_1(ID 52)
Vertex:vertex_0_1(ID 2)
Vertex:vertex_14_0(ID 71)
Vertex:vertex_7_1(ID 37)
Vertex:vertex_6_3(ID 34)
Vertex:vertex_6_2(ID 33)
Vertex:vertex_10_3(ID 54)
Vertex:vertex_4_4(ID 25)
Vertex:vertex_5_3(ID 29)
Vertex:vertex_10_4(ID 55)
Vertex:vertex_5_1(ID 27)
Vertex:vertex_0_2(ID 3)
Vertex:vertex_3_3(ID 19)
Edge Id: 64. From Node vertex_9_0 to vertex_6_3 (Delay 0 Distance 0) depType Data
Edge Id: 45. From Node vertex_14_4 to vertex_7_4 (Delay 0 Distance 0) depType Data
Edge Id: 17. From Node vertex_3_1 to vertex_4_1 (Delay 0 Distance 0) depType Data
Edge Id: 47. From Node vertex_6_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node vertex_1_3 to vertex_2_3 (Delay 0 Distance 0) depType Data
Edge Id: 75. From Node vertex_9_4 to vertex_11_4 (Delay 0 Distance 0) depType Data
Edge Id: 25. From Node vertex_3_4 to vertex_0_4 (Delay 0 Distance 1) depType Data
Edge Id: 15. From Node vertex_2_4 to vertex_3_4 (Delay 0 Distance 0) depType Data
Edge Id: 44. From Node vertex_14_3 to vertex_7_3 (Delay 0 Distance 0) depType Data
Edge Id: 39. From Node vertex_13_3 to vertex_7_3 (Delay 0 Distance 0) depType Data
Edge Id: 43. From Node vertex_14_2 to vertex_7_2 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node vertex_1_4 to vertex_2_4 (Delay 0 Distance 0) depType Data
Edge Id: 19. From Node vertex_3_3 to vertex_4_3 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node vertex_2_1 to vertex_3_1 (Delay 0 Distance 0) depType Data
Edge Id: 48. From Node vertex_6_2 to vertex_7_2 (Delay 0 Distance 0) depType Data
Edge Id: 34. From Node vertex_12_3 to vertex_7_3 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node vertex_0_1 to vertex_2_1 (Delay 0 Distance 0) depType Data
Edge Id: 26. From Node vertex_5_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 20. From Node vertex_3_4 to vertex_4_4 (Delay 0 Distance 0) depType Data
Edge Id: 21. From Node vertex_3_0 to vertex_0_0 (Delay 0 Distance 1) depType Data
Edge Id: 55. From Node vertex_7_4 to vertex_8_4 (Delay 0 Distance 0) depType Data
Edge Id: 59. From Node vertex_8_3 to vertex_9_3 (Delay 0 Distance 0) depType Data
Edge Id: 28. From Node vertex_5_2 to vertex_7_2 (Delay 0 Distance 0) depType Data
Edge Id: 60. From Node vertex_8_4 to vertex_9_4 (Delay 0 Distance 0) depType Data
Edge Id: 30. From Node vertex_5_4 to vertex_7_4 (Delay 0 Distance 0) depType Data
Edge Id: 46. From Node vertex_6_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 22. From Node vertex_3_1 to vertex_0_1 (Delay 0 Distance 1) depType Data
Edge Id: 32. From Node vertex_12_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 27. From Node vertex_5_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 56. From Node vertex_8_0 to vertex_9_0 (Delay 0 Distance 0) depType Data
Edge Id: 36. From Node vertex_13_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 63. From Node vertex_9_4 to vertex_6_2 (Delay 0 Distance 1) depType Data
Edge Id: 62. From Node vertex_9_3 to vertex_6_1 (Delay 0 Distance 1) depType Data
Edge Id: 73. From Node vertex_9_2 to vertex_11_2 (Delay 0 Distance 0) depType Data
Edge Id: 16. From Node vertex_3_0 to vertex_4_0 (Delay 0 Distance 0) depType Data
Edge Id: 41. From Node vertex_14_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node vertex_2_2 to vertex_3_2 (Delay 0 Distance 0) depType Data
Edge Id: 65. From Node vertex_9_1 to vertex_6_4 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node vertex_1_2 to vertex_2_2 (Delay 0 Distance 0) depType Data
Edge Id: 58. From Node vertex_8_2 to vertex_9_2 (Delay 0 Distance 0) depType Data
Edge Id: 57. From Node vertex_8_1 to vertex_9_1 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node vertex_0_0 to vertex_2_0 (Delay 0 Distance 0) depType Data
Edge Id: 37. From Node vertex_13_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 24. From Node vertex_3_3 to vertex_0_3 (Delay 0 Distance 1) depType Data
Edge Id: 49. From Node vertex_6_3 to vertex_7_3 (Delay 0 Distance 0) depType Data
Edge Id: 71. From Node vertex_9_0 to vertex_11_0 (Delay 0 Distance 0) depType Data
Edge Id: 14. From Node vertex_2_3 to vertex_3_3 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node vertex_0_2 to vertex_2_2 (Delay 0 Distance 0) depType Data
Edge Id: 70. From Node vertex_9_4 to vertex_10_4 (Delay 0 Distance 0) depType Data
Edge Id: 53. From Node vertex_7_2 to vertex_8_2 (Delay 0 Distance 0) depType Data
Edge Id: 67. From Node vertex_9_1 to vertex_10_1 (Delay 0 Distance 0) depType Data
Edge Id: 42. From Node vertex_14_1 to vertex_7_1 (Delay 0 Distance 0) depType Data
Edge Id: 61. From Node vertex_9_2 to vertex_6_0 (Delay 0 Distance 1) depType Data
Edge Id: 40. From Node vertex_13_4 to vertex_7_4 (Delay 0 Distance 0) depType Data
Edge Id: 38. From Node vertex_13_2 to vertex_7_2 (Delay 0 Distance 0) depType Data
Edge Id: 51. From Node vertex_7_0 to vertex_8_0 (Delay 0 Distance 0) depType Data
Edge Id: 31. From Node vertex_12_0 to vertex_7_0 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node vertex_1_1 to vertex_2_1 (Delay 0 Distance 0) depType Data
Edge Id: 33. From Node vertex_12_2 to vertex_7_2 (Delay 0 Distance 0) depType Data
Edge Id: 54. From Node vertex_7_3 to vertex_8_3 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node vertex_2_0 to vertex_3_0 (Delay 0 Distance 0) depType Data
Edge Id: 66. From Node vertex_9_0 to vertex_10_0 (Delay 0 Distance 0) depType Data
Edge Id: 69. From Node vertex_9_3 to vertex_10_3 (Delay 0 Distance 0) depType Data
Edge Id: 72. From Node vertex_9_1 to vertex_11_1 (Delay 0 Distance 0) depType Data
Edge Id: 74. From Node vertex_9_3 to vertex_11_3 (Delay 0 Distance 0) depType Data
Edge Id: 18. From Node vertex_3_2 to vertex_4_2 (Delay 0 Distance 0) depType Data
Edge Id: 50. From Node vertex_6_4 to vertex_7_4 (Delay 0 Distance 0) depType Data
Edge Id: 23. From Node vertex_3_2 to vertex_0_2 (Delay 0 Distance 1) depType Data
Edge Id: 5. From Node vertex_0_4 to vertex_2_4 (Delay 0 Distance 0) depType Data
Edge Id: 52. From Node vertex_7_1 to vertex_8_1 (Delay 0 Distance 0) depType Data
Edge Id: 68. From Node vertex_9_2 to vertex_10_2 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node vertex_0_3 to vertex_2_3 (Delay 0 Distance 0) depType Data
Edge Id: 29. From Node vertex_5_3 to vertex_7_3 (Delay 0 Distance 0) depType Data
Edge Id: 35. From Node vertex_12_4 to vertex_7_4 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node vertex_1_0 to vertex_2_0 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: red with limit/vertices 3/25, latency 2, blockingTime 1, physicalDelay 0
Resource Model has limited resource: green with limit/vertices 5/110, latency 1, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex vertex_1_4 with red
Registered vertex vertex_4_3 with red
Registered vertex vertex_0_4 with red
Registered vertex vertex_4_1 with red
Registered vertex vertex_1_2 with red
Registered vertex vertex_3_4 with red
Registered vertex vertex_4_0 with red
Registered vertex vertex_1_0 with red
Registered vertex vertex_0_3 with red
Registered vertex vertex_3_1 with red
Registered vertex vertex_1_1 with red
Registered vertex vertex_2_4 with red
Registered vertex vertex_1_3 with red
Registered vertex vertex_3_2 with red
Registered vertex vertex_18_4 with green
Registered vertex vertex_17_1 with green
Registered vertex vertex_25_2 with green
Registered vertex vertex_19_2 with green
Registered vertex vertex_19_3 with green
Registered vertex vertex_16_0 with green
Registered vertex vertex_22_4 with green
Registered vertex vertex_24_4 with green
Registered vertex vertex_16_3 with green
Registered vertex vertex_25_0 with green
Registered vertex vertex_22_0 with green
Registered vertex vertex_26_4 with green
Registered vertex vertex_18_2 with green
Registered vertex vertex_25_4 with green
Registered vertex vertex_26_0 with green
Registered vertex vertex_24_2 with green
Registered vertex vertex_17_3 with green
Registered vertex vertex_22_2 with green
Registered vertex vertex_15_1 with green
Registered vertex vertex_23_4 with green
Registered vertex vertex_20_3 with green
Registered vertex vertex_25_3 with green
Registered vertex vertex_18_1 with green
Registered vertex vertex_16_2 with green
Registered vertex vertex_20_1 with green
Registered vertex vertex_20_4 with green
Registered vertex vertex_15_3 with green
Registered vertex vertex_26_3 with green
Registered vertex vertex_19_0 with green
Registered vertex vertex_25_1 with green
Registered vertex vertex_24_0 with green
Registered vertex vertex_22_3 with green
Registered vertex vertex_19_4 with green
Registered vertex vertex_21_3 with green
Registered vertex vertex_18_3 with green
Registered vertex vertex_21_1 with green
Registered vertex vertex_21_0 with green
Registered vertex vertex_26_2 with green
Registered vertex vertex_22_1 with green
Registered vertex vertex_20_0 with green
Registered vertex vertex_26_1 with green
Registered vertex vertex_14_2 with green
Registered vertex vertex_14_4 with green
Registered vertex vertex_17_4 with green
Registered vertex vertex_19_1 with green
Registered vertex vertex_24_3 with green
Registered vertex vertex_15_0 with green
Registered vertex vertex_17_2 with green
Registered vertex vertex_16_4 with green
Registered vertex vertex_23_1 with green
Registered vertex vertex_23_3 with green
Registered vertex vertex_23_2 with green
Registered vertex vertex_17_0 with green
Registered vertex vertex_16_1 with green
Registered vertex vertex_21_2 with green
Registered vertex vertex_18_0 with green
Registered vertex vertex_14_3 with green
Registered vertex vertex_20_2 with green
Registered vertex vertex_21_4 with green
Registered vertex vertex_15_2 with green
Registered vertex vertex_24_1 with green
Registered vertex vertex_23_0 with green
Registered vertex vertex_15_4 with green
Registered vertex vertex_6_4 with green
Registered vertex vertex_13_2 with green
Registered vertex vertex_2_2 with red
Registered vertex vertex_13_4 with green
Registered vertex vertex_8_3 with green
Registered vertex vertex_8_1 with green
Registered vertex vertex_11_4 with green
Registered vertex vertex_9_2 with green
Registered vertex vertex_13_0 with green
Registered vertex vertex_11_3 with green
Registered vertex vertex_5_4 with green
Registered vertex vertex_9_3 with green
Registered vertex vertex_12_3 with green
Registered vertex vertex_10_2 with green
Registered vertex vertex_8_0 with green
Registered vertex vertex_12_2 with green
Registered vertex vertex_5_2 with green
Registered vertex vertex_3_0 with red
Registered vertex vertex_12_0 with green
Registered vertex vertex_0_0 with red
Registered vertex vertex_9_4 with green
Registered vertex vertex_11_1 with green
Registered vertex vertex_6_1 with green
Registered vertex vertex_12_4 with green
Registered vertex vertex_7_4 with green
Registered vertex vertex_8_2 with green
Registered vertex vertex_11_2 with green
Registered vertex vertex_6_0 with green
Registered vertex vertex_13_3 with green
Registered vertex vertex_12_1 with green
Registered vertex vertex_9_1 with green
Registered vertex vertex_4_2 with red
Registered vertex vertex_11_0 with green
Registered vertex vertex_7_0 with green
Registered vertex vertex_8_4 with green
Registered vertex vertex_7_3 with green
Registered vertex vertex_5_0 with green
Registered vertex vertex_13_1 with green
Registered vertex vertex_10_0 with green
Registered vertex vertex_9_0 with green
Registered vertex vertex_2_3 with red
Registered vertex vertex_2_1 with red
Registered vertex vertex_14_1 with green
Registered vertex vertex_7_2 with green
Registered vertex vertex_2_0 with red
Registered vertex vertex_10_1 with green
Registered vertex vertex_0_1 with red
Registered vertex vertex_14_0 with green
Registered vertex vertex_7_1 with green
Registered vertex vertex_6_3 with green
Registered vertex vertex_6_2 with green
Registered vertex vertex_10_3 with green
Registered vertex vertex_4_4 with red
Registered vertex vertex_5_3 with green
Registered vertex vertex_10_4 with green
Registered vertex vertex_5_1 with green
Registered vertex vertex_0_2 with red
Registered vertex vertex_3_3 with red
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::sccqtest: finished scheduling - resulting control steps:
Tests::sccqtest: start times for insertion time=0
  vertex_0 - 21
  vertex_1 - 0
  vertex_2 - 23
  vertex_3 - 26
  vertex_4 - 28
  vertex_5 - 8
  vertex_6 - 21
  vertex_7 - 23
  vertex_8 - 24
  vertex_9 - 25
  vertex_10 - 41
  vertex_11 - 42
  vertex_12 - 6
  vertex_13 - 11
  vertex_14 - 9
  vertex_15 - 7
  vertex_16 - 12
  vertex_17 - 14
  vertex_18 - 13
  vertex_19 - 0
  vertex_20 - 4
  vertex_21 - 10
  vertex_22 - 5
  vertex_23 - 17
  vertex_24 - 16
  vertex_25 - 15
  vertex_26 - 18
Tests::sccqtest: start times for insertion time=4
  vertex_0 - 25
  vertex_1 - 4
  vertex_2 - 27
  vertex_3 - 30
  vertex_4 - 32
  vertex_5 - 12
  vertex_6 - 25
  vertex_7 - 27
  vertex_8 - 28
  vertex_9 - 29
  vertex_10 - 45
  vertex_11 - 46
  vertex_12 - 10
  vertex_13 - 15
  vertex_14 - 13
  vertex_15 - 11
  vertex_16 - 16
  vertex_17 - 18
  vertex_18 - 17
  vertex_19 - 4
  vertex_20 - 8
  vertex_21 - 14
  vertex_22 - 9
  vertex_23 - 21
  vertex_24 - 20
  vertex_25 - 19
  vertex_26 - 22
Tests::sccqtest: start times for insertion time=9
  vertex_0 - 30
  vertex_1 - 9
  vertex_2 - 32
  vertex_3 - 35
  vertex_4 - 37
  vertex_5 - 17
  vertex_6 - 30
  vertex_7 - 32
  vertex_8 - 33
  vertex_9 - 34
  vertex_10 - 50
  vertex_11 - 51
  vertex_12 - 15
  vertex_13 - 20
  vertex_14 - 18
  vertex_15 - 16
  vertex_16 - 21
  vertex_17 - 23
  vertex_18 - 22
  vertex_19 - 9
  vertex_20 - 13
  vertex_21 - 19
  vertex_22 - 14
  vertex_23 - 26
  vertex_24 - 25
  vertex_25 - 24
  vertex_26 - 27
Tests::sccqtest: start times for insertion time=13
  vertex_0 - 34
  vertex_1 - 13
  vertex_2 - 36
  vertex_3 - 39
  vertex_4 - 41
  vertex_5 - 21
  vertex_6 - 34
  vertex_7 - 36
  vertex_8 - 37
  vertex_9 - 38
  vertex_10 - 54
  vertex_11 - 55
  vertex_12 - 19
  vertex_13 - 24
  vertex_14 - 22
  vertex_15 - 20
  vertex_16 - 25
  vertex_17 - 27
  vertex_18 - 26
  vertex_19 - 13
  vertex_20 - 17
  vertex_21 - 23
  vertex_22 - 18
  vertex_23 - 30
  vertex_24 - 29
  vertex_25 - 28
  vertex_26 - 31
Tests::sccqtest: start times for insertion time=18
  vertex_0 - 39
  vertex_1 - 18
  vertex_2 - 41
  vertex_3 - 44
  vertex_4 - 46
  vertex_5 - 26
  vertex_6 - 39
  vertex_7 - 41
  vertex_8 - 42
  vertex_9 - 43
  vertex_10 - 59
  vertex_11 - 60
  vertex_12 - 24
  vertex_13 - 29
  vertex_14 - 27
  vertex_15 - 25
  vertex_16 - 30
  vertex_17 - 32
  vertex_18 - 31
  vertex_19 - 18
  vertex_20 - 22
  vertex_21 - 28
  vertex_22 - 23
  vertex_23 - 35
  vertex_24 - 34
  vertex_25 - 33
  vertex_26 - 36
<end of output>
Test time =   0.08 sec
----------------------------------------------------------
Test Passed.
"ratIISCCQ" end time: May 06 14:23 CEST
"ratIISCCQ" time elapsed: 00:00:00
----------------------------------------------------------

21/28 Testing: ratIIUnroll
21/28 Test: ratIIUnroll
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=UNROLLSCHEDULER"
Directory: /home/bkessler/Repositories/hatschet
"ratIIUnroll" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
Tests::uniformRationalIISchedulerTest: intII scheduler: ED97
graphMLReader.parseGraph: comment or processing instruction expected
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 16
RationalIISchedulerLayer::schedule: samples: 3
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 5.33333
RationalIISchedulerLayer::schedule: resMinII is 5
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 3 / 16
RationalIISchedulerLayer::schedule: max. no. of iterations 1
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
SH11: min/maxII = 16 22
SH11: attempt II=16
SH11: found optimal solution with II=16
RationalIISchedulerLayer::verifySchedule: start verifier for II=16/3
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:S4_2(ID 12)
Vertex:S4_1(ID 11)
Vertex:S9_2(ID 27)
Vertex:S8_2(ID 24)
Vertex:S5_2(ID 15)
Vertex:S8_1(ID 23)
Vertex:S2_2(ID 6)
Vertex:S3_1(ID 8)
Vertex:S3_0(ID 7)
Vertex:S1_1(ID 2)
Vertex:S9_1(ID 26)
Vertex:S5_1(ID 14)
Vertex:S7_2(ID 21)
Vertex:S7_0(ID 19)
Vertex:S6_0(ID 16)
Vertex:S8_0(ID 22)
Vertex:S2_1(ID 5)
Vertex:S6_1(ID 17)
Vertex:S2_0(ID 4)
Vertex:S4_0(ID 10)
Vertex:S6_2(ID 18)
Vertex:S9_0(ID 25)
Vertex:S7_1(ID 20)
Vertex:S10_1(ID 29)
Vertex:S10_2(ID 30)
Vertex:S5_0(ID 13)
Vertex:S3_2(ID 9)
Vertex:S10_0(ID 28)
Vertex:S1_0(ID 1)
Vertex:S1_2(ID 3)
Edge Id: 21. From Node S4_1 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 38. From Node S8_0 to S1_1 (Delay 0 Distance 0) depType Data
Edge Id: 22. From Node S4_1 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 23. From Node S4_2 to S5_1 (Delay 0 Distance 1) depType Data
Edge Id: 16. From Node S3_2 to S4_0 (Delay 0 Distance 1) depType Data
Edge Id: 48. From Node S10_1 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 17. From Node S3_0 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 18. From Node S3_1 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 42. From Node S4_2 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 39. From Node S8_1 to S1_2 (Delay 0 Distance 0) depType Data
Edge Id: 19. From Node S4_2 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 12. From Node S2_1 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 36. From Node S7_2 to S8_2 (Delay 0 Distance 0) depType Data
Edge Id: 46. From Node S10_2 to S9_0 (Delay 0 Distance 1) depType Data
Edge Id: 13. From Node S3_0 to S4_0 (Delay 0 Distance 0) depType Data
Edge Id: 41. From Node S4_1 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 32. From Node S6_1 to S7_1 (Delay 0 Distance 0) depType Data
Edge Id: 14. From Node S3_1 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 33. From Node S6_2 to S7_2 (Delay 0 Distance 0) depType Data
Edge Id: 15. From Node S3_2 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node S2_1 to S3_1 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node S2_2 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 34. From Node S7_0 to S8_0 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node S2_2 to S3_0 (Delay 0 Distance 1) depType Data
Edge Id: 11. From Node S2_0 to S3_1 (Delay 0 Distance 0) depType Data
Edge Id: 35. From Node S7_1 to S8_1 (Delay 0 Distance 0) depType Data
Edge Id: 28. From Node S5_2 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 4. From Node S1_2 to S2_0 (Delay 0 Distance 1) depType Data
Edge Id: 29. From Node S5_0 to S6_1 (Delay 0 Distance 0) depType Data
Edge Id: 45. From Node S9_2 to S10_2 (Delay 0 Distance 0) depType Data
Edge Id: 40. From Node S4_0 to S9_0 (Delay 0 Distance 0) depType Data
Edge Id: 30. From Node S5_1 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 31. From Node S6_0 to S7_0 (Delay 0 Distance 0) depType Data
Edge Id: 37. From Node S8_2 to S1_0 (Delay 0 Distance 1) depType Data
Edge Id: 47. From Node S10_0 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 43. From Node S9_0 to S10_0 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node S1_0 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 24. From Node S4_0 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 25. From Node S5_1 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 6. From Node S1_1 to S2_2 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node S2_0 to S3_0 (Delay 0 Distance 0) depType Data
Edge Id: 26. From Node S5_2 to S6_1 (Delay 0 Distance 1) depType Data
Edge Id: 44. From Node S9_1 to S10_1 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node S1_0 to S2_0 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node S1_1 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node S1_2 to S2_2 (Delay 0 Distance 0) depType Data
Edge Id: 27. From Node S5_0 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 20. From Node S4_0 to S5_1 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: Adder with limit/vertices 2/30, latency 2, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex S4_2 with Adder
Registered vertex S4_1 with Adder
Registered vertex S9_2 with Adder
Registered vertex S8_2 with Adder
Registered vertex S5_2 with Adder
Registered vertex S8_1 with Adder
Registered vertex S2_2 with Adder
Registered vertex S3_1 with Adder
Registered vertex S3_0 with Adder
Registered vertex S1_1 with Adder
Registered vertex S9_1 with Adder
Registered vertex S5_1 with Adder
Registered vertex S7_2 with Adder
Registered vertex S7_0 with Adder
Registered vertex S6_0 with Adder
Registered vertex S8_0 with Adder
Registered vertex S2_1 with Adder
Registered vertex S6_1 with Adder
Registered vertex S2_0 with Adder
Registered vertex S4_0 with Adder
Registered vertex S6_2 with Adder
Registered vertex S9_0 with Adder
Registered vertex S7_1 with Adder
Registered vertex S10_1 with Adder
Registered vertex S10_2 with Adder
Registered vertex S5_0 with Adder
Registered vertex S3_2 with Adder
Registered vertex S10_0 with Adder
Registered vertex S1_0 with Adder
Registered vertex S1_2 with Adder
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::uniformRationalIISchedulerTest: intII scheduler: MODULOSDC
graphMLReader.parseGraph: comment or processing instruction expected
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 16
RationalIISchedulerLayer::schedule: samples: 3
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 5.33333
RationalIISchedulerLayer::schedule: resMinII is 5
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 3 / 16
RationalIISchedulerLayer::schedule: max. no. of iterations 1
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
SH11: min/maxII = 16 22
SH11: attempt II=16
SH11: found optimal solution with II=16
RationalIISchedulerLayer::verifySchedule: start verifier for II=16/3
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:S5_2(ID 15)
Vertex:S9_0(ID 25)
Vertex:S2_1(ID 5)
Vertex:S5_1(ID 14)
Vertex:S7_0(ID 19)
Vertex:S2_0(ID 4)
Vertex:S6_1(ID 17)
Vertex:S9_2(ID 27)
Vertex:S3_1(ID 8)
Vertex:S2_2(ID 6)
Vertex:S4_2(ID 12)
Vertex:S10_1(ID 29)
Vertex:S8_2(ID 24)
Vertex:S3_2(ID 9)
Vertex:S9_1(ID 26)
Vertex:S8_1(ID 23)
Vertex:S7_1(ID 20)
Vertex:S5_0(ID 13)
Vertex:S3_0(ID 7)
Vertex:S8_0(ID 22)
Vertex:S1_1(ID 2)
Vertex:S1_0(ID 1)
Vertex:S1_2(ID 3)
Vertex:S6_0(ID 16)
Vertex:S6_2(ID 18)
Vertex:S4_0(ID 10)
Vertex:S10_2(ID 30)
Vertex:S7_2(ID 21)
Vertex:S4_1(ID 11)
Vertex:S10_0(ID 28)
Edge Id: 21. From Node S8_1 to S1_2 (Delay 0 Distance 0) depType Data
Edge Id: 22. From Node S4_0 to S9_0 (Delay 0 Distance 0) depType Data
Edge Id: 38. From Node S2_1 to S3_1 (Delay 0 Distance 0) depType Data
Edge Id: 47. From Node S3_0 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 23. From Node S4_1 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 45. From Node S3_2 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 39. From Node S2_2 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 16. From Node S7_0 to S8_0 (Delay 0 Distance 0) depType Data
Edge Id: 17. From Node S7_1 to S8_1 (Delay 0 Distance 0) depType Data
Edge Id: 18. From Node S7_2 to S8_2 (Delay 0 Distance 0) depType Data
Edge Id: 32. From Node S1_1 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 19. From Node S8_2 to S1_0 (Delay 0 Distance 1) depType Data
Edge Id: 36. From Node S1_1 to S2_2 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node S5_1 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 33. From Node S1_2 to S2_2 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node S6_0 to S7_0 (Delay 0 Distance 0) depType Data
Edge Id: 14. From Node S6_1 to S7_1 (Delay 0 Distance 0) depType Data
Edge Id: 34. From Node S1_2 to S2_0 (Delay 0 Distance 1) depType Data
Edge Id: 40. From Node S2_2 to S3_0 (Delay 0 Distance 1) depType Data
Edge Id: 35. From Node S1_0 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 28. From Node S10_2 to S9_0 (Delay 0 Distance 1) depType Data
Edge Id: 48. From Node S3_1 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 15. From Node S6_2 to S7_2 (Delay 0 Distance 0) depType Data
Edge Id: 29. From Node S10_0 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node S5_2 to S6_1 (Delay 0 Distance 1) depType Data
Edge Id: 9. From Node S5_0 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node S5_2 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 11. From Node S5_0 to S6_1 (Delay 0 Distance 0) depType Data
Edge Id: 41. From Node S2_0 to S3_1 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node S4_1 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 30. From Node S10_1 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node S4_2 to S5_1 (Delay 0 Distance 1) depType Data
Edge Id: 6. From Node S4_0 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 46. From Node S3_2 to S4_0 (Delay 0 Distance 1) depType Data
Edge Id: 31. From Node S1_0 to S2_0 (Delay 0 Distance 0) depType Data
Edge Id: 42. From Node S2_1 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 24. From Node S4_2 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 44. From Node S3_1 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node S5_1 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 43. From Node S3_0 to S4_0 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node S4_2 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 25. From Node S9_0 to S10_0 (Delay 0 Distance 0) depType Data
Edge Id: 2. From Node S4_0 to S5_1 (Delay 0 Distance 0) depType Data
Edge Id: 26. From Node S9_1 to S10_1 (Delay 0 Distance 0) depType Data
Edge Id: 27. From Node S9_2 to S10_2 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node S4_1 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 20. From Node S8_0 to S1_1 (Delay 0 Distance 0) depType Data
Edge Id: 37. From Node S2_0 to S3_0 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: Adder with limit/vertices 2/30, latency 2, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex S5_2 with Adder
Registered vertex S9_0 with Adder
Registered vertex S2_1 with Adder
Registered vertex S5_1 with Adder
Registered vertex S7_0 with Adder
Registered vertex S2_0 with Adder
Registered vertex S6_1 with Adder
Registered vertex S9_2 with Adder
Registered vertex S3_1 with Adder
Registered vertex S2_2 with Adder
Registered vertex S4_2 with Adder
Registered vertex S10_1 with Adder
Registered vertex S8_2 with Adder
Registered vertex S3_2 with Adder
Registered vertex S9_1 with Adder
Registered vertex S8_1 with Adder
Registered vertex S7_1 with Adder
Registered vertex S5_0 with Adder
Registered vertex S3_0 with Adder
Registered vertex S8_0 with Adder
Registered vertex S1_1 with Adder
Registered vertex S1_0 with Adder
Registered vertex S1_2 with Adder
Registered vertex S6_0 with Adder
Registered vertex S6_2 with Adder
Registered vertex S4_0 with Adder
Registered vertex S10_2 with Adder
Registered vertex S7_2 with Adder
Registered vertex S4_1 with Adder
Registered vertex S10_0 with Adder
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::uniformRationalIISchedulerTest: intII scheduler: MOOVAC
graphMLReader.parseGraph: comment or processing instruction expected
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 16
RationalIISchedulerLayer::schedule: samples: 3
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 5.33333
RationalIISchedulerLayer::schedule: resMinII is 5
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 3 / 16
RationalIISchedulerLayer::schedule: max. no. of iterations 1
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
SH11: min/maxII = 16 22
SH11: attempt II=16
SH11: found optimal solution with II=16
RationalIISchedulerLayer::verifySchedule: start verifier for II=16/3
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:S6_1(ID 5)
Vertex:S1_2(ID 21)
Vertex:S3_1(ID 26)
Vertex:S4_1(ID 29)
Vertex:S7_0(ID 7)
Vertex:S10_1(ID 17)
Vertex:S3_2(ID 27)
Vertex:S9_2(ID 15)
Vertex:S2_0(ID 22)
Vertex:S3_0(ID 25)
Vertex:S8_1(ID 11)
Vertex:S9_0(ID 13)
Vertex:S10_0(ID 16)
Vertex:S7_1(ID 8)
Vertex:S5_0(ID 1)
Vertex:S8_0(ID 10)
Vertex:S1_0(ID 19)
Vertex:S9_1(ID 14)
Vertex:S10_2(ID 18)
Vertex:S1_1(ID 20)
Vertex:S8_2(ID 12)
Vertex:S2_2(ID 24)
Vertex:S7_2(ID 9)
Vertex:S2_1(ID 23)
Vertex:S5_2(ID 3)
Vertex:S6_0(ID 4)
Vertex:S5_1(ID 2)
Vertex:S6_2(ID 6)
Vertex:S4_2(ID 30)
Vertex:S4_0(ID 28)
Edge Id: 45. From Node S9_2 to S10_2 (Delay 0 Distance 0) depType Data
Edge Id: 38. From Node S8_0 to S1_1 (Delay 0 Distance 0) depType Data
Edge Id: 21. From Node S4_1 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 39. From Node S8_1 to S1_2 (Delay 0 Distance 0) depType Data
Edge Id: 22. From Node S4_1 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 23. From Node S4_2 to S5_1 (Delay 0 Distance 1) depType Data
Edge Id: 16. From Node S3_2 to S4_0 (Delay 0 Distance 1) depType Data
Edge Id: 48. From Node S10_1 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 17. From Node S3_0 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 32. From Node S6_1 to S7_1 (Delay 0 Distance 0) depType Data
Edge Id: 43. From Node S9_0 to S10_0 (Delay 0 Distance 0) depType Data
Edge Id: 18. From Node S3_1 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 19. From Node S4_2 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 12. From Node S2_1 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node S3_0 to S4_0 (Delay 0 Distance 0) depType Data
Edge Id: 14. From Node S3_1 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 33. From Node S6_2 to S7_2 (Delay 0 Distance 0) depType Data
Edge Id: 15. From Node S3_2 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node S2_1 to S3_1 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node S2_2 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 37. From Node S8_2 to S1_0 (Delay 0 Distance 1) depType Data
Edge Id: 34. From Node S7_0 to S8_0 (Delay 0 Distance 0) depType Data
Edge Id: 10. From Node S2_2 to S3_0 (Delay 0 Distance 1) depType Data
Edge Id: 35. From Node S7_1 to S8_1 (Delay 0 Distance 0) depType Data
Edge Id: 28. From Node S5_2 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 42. From Node S4_2 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 29. From Node S5_0 to S6_1 (Delay 0 Distance 0) depType Data
Edge Id: 30. From Node S5_1 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 11. From Node S2_0 to S3_1 (Delay 0 Distance 0) depType Data
Edge Id: 47. From Node S10_0 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 36. From Node S7_2 to S8_2 (Delay 0 Distance 0) depType Data
Edge Id: 31. From Node S6_0 to S7_0 (Delay 0 Distance 0) depType Data
Edge Id: 24. From Node S4_0 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node S1_2 to S2_0 (Delay 0 Distance 1) depType Data
Edge Id: 40. From Node S4_0 to S9_0 (Delay 0 Distance 0) depType Data
Edge Id: 44. From Node S9_1 to S10_1 (Delay 0 Distance 0) depType Data
Edge Id: 5. From Node S1_0 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 25. From Node S5_1 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 6. From Node S1_1 to S2_2 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node S2_0 to S3_0 (Delay 0 Distance 0) depType Data
Edge Id: 26. From Node S5_2 to S6_1 (Delay 0 Distance 1) depType Data
Edge Id: 27. From Node S5_0 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node S1_0 to S2_0 (Delay 0 Distance 0) depType Data
Edge Id: 41. From Node S4_1 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 20. From Node S4_0 to S5_1 (Delay 0 Distance 0) depType Data
Edge Id: 46. From Node S10_2 to S9_0 (Delay 0 Distance 1) depType Data
Edge Id: 2. From Node S1_1 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node S1_2 to S2_2 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: Adder with limit/vertices 2/30, latency 2, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex S6_1 with Adder
Registered vertex S1_2 with Adder
Registered vertex S3_1 with Adder
Registered vertex S4_1 with Adder
Registered vertex S7_0 with Adder
Registered vertex S10_1 with Adder
Registered vertex S3_2 with Adder
Registered vertex S9_2 with Adder
Registered vertex S2_0 with Adder
Registered vertex S3_0 with Adder
Registered vertex S8_1 with Adder
Registered vertex S9_0 with Adder
Registered vertex S10_0 with Adder
Registered vertex S7_1 with Adder
Registered vertex S5_0 with Adder
Registered vertex S8_0 with Adder
Registered vertex S1_0 with Adder
Registered vertex S9_1 with Adder
Registered vertex S10_2 with Adder
Registered vertex S1_1 with Adder
Registered vertex S8_2 with Adder
Registered vertex S2_2 with Adder
Registered vertex S7_2 with Adder
Registered vertex S2_1 with Adder
Registered vertex S5_2 with Adder
Registered vertex S6_0 with Adder
Registered vertex S5_1 with Adder
Registered vertex S6_2 with Adder
Registered vertex S4_2 with Adder
Registered vertex S4_0 with Adder
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::uniformRationalIISchedulerTest: intII scheduler: SUCHAHANZALEK
graphMLReader.parseGraph: comment or processing instruction expected
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
RationalIISchedulerLayer::schedule: start scheduling
RationalIISchedulerLayer::schedule: maxLatencyConstraint: -1
RationalIISchedulerLayer::schedule: modulo: 16
RationalIISchedulerLayer::schedule: samples: 3
------------------------
RationalIISchedulerLayer:schedule: start for 
RationalIISchedulerLayer:schedule: maxLatency -1
RationalIISchedulerLayer::schedule: recMinII is 5.33333
RationalIISchedulerLayer::schedule: resMinII is 5
------------------------
RationalIISchedulerLayer::schedule: Found 1 valid rat II iteration values using SMax=-1
RationalIISchedulerLayer::schedule: building ilp problem for s / m : 3 / 16
RationalIISchedulerLayer::schedule: max. no. of iterations 1
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
SH11: min/maxII = 16 22
SH11: attempt II=16
SH11: found optimal solution with II=16
RationalIISchedulerLayer::verifySchedule: start verifier for II=16/3
RationalIISchedulerLayer::verifySchedule: UNROLLED GRAPH:
------------------------------------------------------------------------------------
---------------------------------- Graph Model -------------------------------------
------------------------------------------------------------------------------------
Vertex:S4_1(ID 14)
Vertex:S7_0(ID 22)
Vertex:S10_2(ID 12)
Vertex:S2_0(ID 4)
Vertex:S3_0(ID 7)
Vertex:S9_1(ID 29)
Vertex:S8_1(ID 26)
Vertex:S2_2(ID 6)
Vertex:S3_1(ID 8)
Vertex:S6_1(ID 20)
Vertex:S10_0(ID 10)
Vertex:S1_1(ID 2)
Vertex:S7_2(ID 24)
Vertex:S5_1(ID 17)
Vertex:S3_2(ID 9)
Vertex:S6_0(ID 19)
Vertex:S5_0(ID 16)
Vertex:S2_1(ID 5)
Vertex:S10_1(ID 11)
Vertex:S4_2(ID 15)
Vertex:S1_0(ID 1)
Vertex:S8_0(ID 25)
Vertex:S7_1(ID 23)
Vertex:S6_2(ID 21)
Vertex:S8_2(ID 27)
Vertex:S1_2(ID 3)
Vertex:S9_2(ID 30)
Vertex:S4_0(ID 13)
Vertex:S9_0(ID 28)
Vertex:S5_2(ID 18)
Edge Id: 38. From Node S1_0 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 39. From Node S1_1 to S2_2 (Delay 0 Distance 0) depType Data
Edge Id: 21. From Node S7_2 to S8_2 (Delay 0 Distance 0) depType Data
Edge Id: 47. From Node S3_1 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 22. From Node S8_2 to S1_0 (Delay 0 Distance 1) depType Data
Edge Id: 32. From Node S10_0 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 33. From Node S10_1 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 23. From Node S8_0 to S1_1 (Delay 0 Distance 0) depType Data
Edge Id: 16. From Node S6_0 to S7_0 (Delay 0 Distance 0) depType Data
Edge Id: 17. From Node S6_1 to S7_1 (Delay 0 Distance 0) depType Data
Edge Id: 34. From Node S1_0 to S2_0 (Delay 0 Distance 0) depType Data
Edge Id: 35. From Node S1_1 to S2_1 (Delay 0 Distance 0) depType Data
Edge Id: 18. From Node S6_2 to S7_2 (Delay 0 Distance 0) depType Data
Edge Id: 19. From Node S7_0 to S8_0 (Delay 0 Distance 0) depType Data
Edge Id: 42. From Node S2_2 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 12. From Node S5_0 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 44. From Node S2_0 to S3_1 (Delay 0 Distance 0) depType Data
Edge Id: 13. From Node S5_2 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 14. From Node S5_0 to S6_1 (Delay 0 Distance 0) depType Data
Edge Id: 15. From Node S5_1 to S6_2 (Delay 0 Distance 0) depType Data
Edge Id: 28. From Node S9_0 to S10_0 (Delay 0 Distance 0) depType Data
Edge Id: 8. From Node S4_2 to S5_1 (Delay 0 Distance 1) depType Data
Edge Id: 29. From Node S9_1 to S10_1 (Delay 0 Distance 0) depType Data
Edge Id: 45. From Node S2_1 to S3_2 (Delay 0 Distance 0) depType Data
Edge Id: 30. From Node S9_2 to S10_2 (Delay 0 Distance 0) depType Data
Edge Id: 9. From Node S4_0 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 48. From Node S3_2 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 31. From Node S10_2 to S9_0 (Delay 0 Distance 1) depType Data
Edge Id: 46. From Node S3_0 to S4_0 (Delay 0 Distance 0) depType Data
Edge Id: 24. From Node S8_1 to S1_2 (Delay 0 Distance 0) depType Data
Edge Id: 40. From Node S2_0 to S3_0 (Delay 0 Distance 0) depType Data
Edge Id: 43. From Node S2_2 to S3_0 (Delay 0 Distance 1) depType Data
Edge Id: 10. From Node S5_1 to S6_0 (Delay 0 Distance 1) depType Data
Edge Id: 11. From Node S5_2 to S6_1 (Delay 0 Distance 1) depType Data
Edge Id: 25. From Node S4_0 to S9_0 (Delay 0 Distance 0) depType Data
Edge Id: 4. From Node S4_2 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 36. From Node S1_2 to S2_2 (Delay 0 Distance 0) depType Data
Edge Id: 37. From Node S1_2 to S2_0 (Delay 0 Distance 1) depType Data
Edge Id: 5. From Node S4_0 to S5_1 (Delay 0 Distance 0) depType Data
Edge Id: 26. From Node S4_1 to S9_1 (Delay 0 Distance 0) depType Data
Edge Id: 6. From Node S4_1 to S5_2 (Delay 0 Distance 0) depType Data
Edge Id: 7. From Node S4_1 to S5_0 (Delay 0 Distance 1) depType Data
Edge Id: 27. From Node S4_2 to S9_2 (Delay 0 Distance 0) depType Data
Edge Id: 1. From Node S3_2 to S4_0 (Delay 0 Distance 1) depType Data
Edge Id: 2. From Node S3_0 to S4_1 (Delay 0 Distance 0) depType Data
Edge Id: 20. From Node S7_1 to S8_1 (Delay 0 Distance 0) depType Data
Edge Id: 3. From Node S3_1 to S4_2 (Delay 0 Distance 0) depType Data
Edge Id: 41. From Node S2_1 to S3_1 (Delay 0 Distance 0) depType Data

RationalIISchedulerLayer::verifySchedule: UNROLLED RESOURCE MODEL:
------------------------------------------------------------------------------------
------------------------------- Resource Model -------------------------------------
------------------------------------------------------------------------------------
Resource Model has limited resource: Adder with limit/vertices 2/30, latency 2, blockingTime 1, physicalDelay 0
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Registered vertex S4_1 with Adder
Registered vertex S7_0 with Adder
Registered vertex S10_2 with Adder
Registered vertex S2_0 with Adder
Registered vertex S3_0 with Adder
Registered vertex S9_1 with Adder
Registered vertex S8_1 with Adder
Registered vertex S2_2 with Adder
Registered vertex S3_1 with Adder
Registered vertex S6_1 with Adder
Registered vertex S10_0 with Adder
Registered vertex S1_1 with Adder
Registered vertex S7_2 with Adder
Registered vertex S5_1 with Adder
Registered vertex S3_2 with Adder
Registered vertex S6_0 with Adder
Registered vertex S5_0 with Adder
Registered vertex S2_1 with Adder
Registered vertex S10_1 with Adder
Registered vertex S4_2 with Adder
Registered vertex S1_0 with Adder
Registered vertex S8_0 with Adder
Registered vertex S7_1 with Adder
Registered vertex S6_2 with Adder
Registered vertex S8_2 with Adder
Registered vertex S1_2 with Adder
Registered vertex S9_2 with Adder
Registered vertex S4_0 with Adder
Registered vertex S9_0 with Adder
Registered vertex S5_2 with Adder
------------------------------------------------------------------------------------

Integer II schedule for unrolled graph is verified
Rational II schedule for original graph is verified
Tests::uniformRationalIISchedulerTest: TEST PASSED! All schedulers found expected II of 16/3
<end of output>
Test time =   7.79 sec
----------------------------------------------------------
Test Passed.
"ratIIUnroll" end time: May 06 14:23 CEST
"ratIIUnroll" time elapsed: 00:00:07
----------------------------------------------------------

22/28 Testing: integerIINonRect
22/28 Test: integerIINonRect
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=INTEGERIINONRECT"
Directory: /home/bkessler/Repositories/hatschet
"integerIINonRect" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
IntIINonRect: min/maxII = -1 -1, (minResII/minRecII -1 / -1)
IntIINonRect: solver timeout = 300 (sec)
IntIINonRect: attempt II=4
IntIINonRect: solver timeout = 300 (sec)
IntIINonRect: found optimal solution with II=4
  a - 2
  b - 1
  c - 4
  d - 4
IntIINonRect: solving time was 0.005315 seconds
a = 2
b = 1
c = 4
d = 4
<end of output>
Test time =   0.04 sec
----------------------------------------------------------
Test Passed.
"integerIINonRect" end time: May 06 14:23 CEST
"integerIINonRect" time elapsed: 00:00:00
----------------------------------------------------------

23/28 Testing: optimalBinding
23/28 Test: optimalBinding
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=ILPBASEDINTIIBINDING"
Directory: /home/bkessler/Repositories/hatschet
"optimalBinding" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
Integer-II Schedule:
  x0 - 0
  x1 - 0
  constant0_25 - 0
  mult0 - 0
  mult1 - 1
  mult2 - 2
  y0 - 3
Rational-II Schedule:
  sample 0
    x0 - 0
    x1 - 0
    constant0_25 - 0
    mult0 - 0
    mult1 - 1
    mult2 - 2
    y0 - 3
  sample 1
    x0 - 2
    x1 - 2
    constant0_25 - 2
    mult0 - 2
    mult1 - 3
    mult2 - 4
    y0 - 5
Integer-II binding successfully computed
Integer-II binding is valid
Integer-II implementation multiplexer costs: 7
Integer-II implementation register costs: 8
Rational-II binding successfully computed
Rational-II binding is valid
Rational-II implementation multiplexer costs: 12
Rational-II implementation register costs: 9
<end of output>
Test time =   0.09 sec
----------------------------------------------------------
Test Passed.
"optimalBinding" end time: May 06 14:23 CEST
"optimalBinding" time elapsed: 00:00:00
----------------------------------------------------------

24/28 Testing: treeBind
24/28 Test: treeBind
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=TREEBIND"
Directory: /home/bkessler/Repositories/hatschet
"treeBind" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
Integer-II Schedule with II = 2:
  x0 - 0
  x1 - 0
  constant0_25 - 0
  mult0 - 0
  mult1 - 1
  mult2 - 2
  y0 - 3
TreeBind::bind: fixed binding 'x0' -> '0'
TreeBind::bind: fixed binding 'x1' -> '1'
TreeBind::bind: fixed binding 'y0' -> '0'
TreeBind::bind: fixed binding 'constant0_25' -> '0'
TreeBind::iterativeTreeSearch: start
TreeBind::iterativeTreeSearch: initialized stack

TreeBind::iterativeTreeSearch: start new iteration (1)
  elapsed time = 0
  next vertex: mult1
  remaining stack: 
    empty
  removed binding info for 'mult1'
  removed binding info for 'mult0'
  removed binding info for 'mult2'
  added binding info for 'mult1' to FU 0
  did not hit leaf node
  remaining stack after iteration 1: 
    mult0 - 1
    mult0 - 0
  resource bindings after iteration 1:
    constant0_25 -> 0
    mult1 -> 0
    x0 -> 0
    x1 -> 1
    y0 -> 0
  current fu connections:
    memR (1) -> mult (0) port '0' over '1' lifetime registers
  multiplexer costs: 1
  register costs: 1
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (2)
  elapsed time = 0
  next vertex: mult0
  remaining stack: 
    mult0 - 0
  removed binding info for 'mult0'
  removed binding info for 'mult2'
  added binding info for 'mult0' to FU 1
  did not hit leaf node
  remaining stack after iteration 2: 
    mult2 - 0
    mult0 - 0
  resource bindings after iteration 2:
    constant0_25 -> 0
    mult0 -> 1
    mult1 -> 0
    x0 -> 0
    x1 -> 1
    y0 -> 0
  current fu connections:
    memR (0) -> mult (1) port '0' over '0' lifetime registers
    memR (1) -> mult (0) port '0' over '1' lifetime registers
    mult (1) -> mult (0) port '1' over '0' lifetime registers
  multiplexer costs: 3
  register costs: 1
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (3)
  elapsed time = 0
  next vertex: mult2
  remaining stack: 
    mult0 - 0
  removed binding info for 'mult2'
  added binding info for 'mult2' to FU 0
  hit leaf node
  updated best solution
  remaining stack after iteration 3: 
    mult0 - 0
  resource bindings after iteration 3:
    constant0_25 -> 0
    mult0 -> 1
    mult1 -> 0
    mult2 -> 0
    x0 -> 0
    x1 -> 1
    y0 -> 0
  current fu connections:
    memR (0) -> mult (1) port '0' over '0' lifetime registers
    mult (0) -> mult (1) port '1' over '5' lifetime registers
    memR (1) -> mult (0) port '0' over '1' lifetime registers
    mult (1) -> mult (0) port '1' over '0' lifetime registers
    cons (0) -> mult (0) port '0' over '2' lifetime registers
    mult (0) -> mult (0) port '1' over '0' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 7
  register costs: 8
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (4)
  elapsed time = 0
  next vertex: mult0
  remaining stack: 
    empty
    start removing binding info for vertex 'mult0' to FU 1
  removed binding info for 'mult0'
    start removing binding info for vertex 'mult2' to FU 0
  removed binding info for 'mult2'
  added binding info for 'mult0' to FU 0
  did not hit leaf node
  could not prune search space
  remaining stack after iteration 4: 
    mult2 - 1
  resource bindings after iteration 4:
    constant0_25 -> 0
    mult0 -> 0
    mult1 -> 0
    x0 -> 0
    x1 -> 1
    y0 -> 0
  current fu connections:
    memR (0) -> mult (0) port '0' over '0' lifetime registers
    memR (1) -> mult (0) port '0' over '1' lifetime registers
    mult (0) -> mult (0) port '1' over '0' lifetime registers
  multiplexer costs: 3
  register costs: 1
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (5)
  elapsed time = 0
  next vertex: mult2
  remaining stack: 
    empty
  removed binding info for 'mult2'
  added binding info for 'mult2' to FU 1
  hit leaf node
  remaining stack after iteration 5: 
    empty
  resource bindings after iteration 5:
    constant0_25 -> 0
    mult0 -> 0
    mult1 -> 0
    mult2 -> 1
    x0 -> 0
    x1 -> 1
    y0 -> 0
  current fu connections:
    memR (0) -> mult (0) port '0' over '0' lifetime registers
    mult (1) -> mult (0) port '1' over '5' lifetime registers
    memR (1) -> mult (0) port '0' over '1' lifetime registers
    mult (0) -> mult (0) port '1' over '0' lifetime registers
    cons (0) -> mult (1) port '0' over '2' lifetime registers
    mult (0) -> mult (1) port '1' over '0' lifetime registers
    mult (1) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 7
  register costs: 8
  updated elapsed time (0); starting new iteration now...
TreeBind::iterativeTreeSearch: found optimum solution
TreeBind::bind: found solution after 5 iterations
  status: OPTIMAL
  explored 2 of 4 leaf nodes
  times: 
    iteration_add_binding_info: 8.8e-05 sec
    iteration_calc_costs: 0.000225 sec
    iteration_remove_binding_info: 8.1e-05 sec
    iteration_stack_popping: 0.000102 sec
    iteration_stack_pushing: 3.8e-05 sec
    startup: 0 sec
    total_time: 0.000996 sec
  final resource bindings:
    constant0_25 -> 0
    mult0 -> 1
    mult1 -> 0
    mult2 -> 0
    x0 -> 0
    x1 -> 1
    y0 -> 0
  final fu connections:
    memR (0) -> mult (1) port '0' over '0' lifetime registers
    mult (0) -> mult (1) port '1' over '5' lifetime registers
    memR (1) -> mult (0) port '0' over '1' lifetime registers
    mult (1) -> mult (0) port '1' over '0' lifetime registers
    cons (0) -> mult (0) port '0' over '2' lifetime registers
    mult (0) -> mult (0) port '1' over '0' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 7
  register costs: 8
  objective: 1 * 7 + 1 * 8
FU bindings:
  'constant0_25' -> 'cons' (0)
  'mult0' -> 'mult' (1)
  'mult1' -> 'mult' (0)
  'mult2' -> 'mult' (0)
  'x0' -> 'memR' (0)
  'x1' -> 'memR' (1)
  'y0' -> 'memW' (0)
connections in register chain binding container:
  'memR' (0) -> 'mult' (1) port 0 over 0 registers
  'mult' (0) -> 'mult' (1) port 1 over 5 registers
  'memR' (1) -> 'mult' (0) port 0 over 1 registers
  'mult' (1) -> 'mult' (0) port 1 over 0 registers
  'cons' (0) -> 'mult' (0) port 0 over 2 registers
  'mult' (0) -> 'mult' (0) port 1 over 0 registers
  'mult' (0) -> 'memW' (0) port 0 over 0 registers
connections in general binding container:
  'mult' (0) port 0 -> 'memW' (0) port 0
    active in t=1
  'mult' (0) port 0 -> 'mult' (0) port 1
    active in t=0
  'register' (1) port 0 -> 'mult' (0) port 0
    active in t=0
  'mult' (1) port 0 -> 'mult' (0) port 1
    active in t=1
  'register' (2) port 0 -> 'mult' (0) port 0
    active in t=1
  'register' (7) port 0 -> 'mult' (1) port 1
    active in t=0
  'memR' (0) port 0 -> 'mult' (1) port 0
    active in t=0
  'register' (6) port 0 -> 'register' (7) port 0
    active in t=0
    active in t=1
  'register' (5) port 0 -> 'register' (6) port 0
    active in t=0
    active in t=1
  'register' (4) port 0 -> 'register' (5) port 0
    active in t=0
    active in t=1
  'register' (3) port 0 -> 'register' (4) port 0
    active in t=0
    active in t=1
  'mult' (0) port 0 -> 'register' (3) port 0
    active in t=0
    active in t=1
  'memR' (1) port 0 -> 'register' (2) port 0
    active in t=0
    active in t=1
  'register' (0) port 0 -> 'register' (1) port 0
    active in t=0
    active in t=1
  'cons' (0) port 0 -> 'register' (0) port 0
    active in t=0
    active in t=1
register enable times:
  reg #0: 
    0
    1
  reg #1: 
    0
    1
  reg #2: 
    0
    1
  reg #3: 
    0
    1
  reg #4: 
    0
    1
  reg #5: 
    0
    1
  reg #6: 
    0
    1
  reg #7: 
    0
    1
tree-based binding finished
tree-based binding is valid
tree-based implementation multiplexer costs: 7
tree-based implementation number of 2x1 multiplexers: 2
tree-based implementation register costs: 8
FU bindings:
  'constant0_25' -> 'cons' (0)
  'mult0' -> 'mult' (0)
  'mult1' -> 'mult' (1)
  'mult2' -> 'mult' (1)
  'x0' -> 'memR' (0)
  'x1' -> 'memR' (1)
  'y0' -> 'memW' (0)
connections in register chain binding container:
  'memR' (0) -> 'mult' (0) port 0 over 0 registers
  'memR' (1) -> 'mult' (1) port 0 over 1 registers
  'mult' (0) -> 'mult' (1) port 1 over 0 registers
  'mult' (1) -> 'memW' (0) port 0 over 0 registers
  'mult' (1) -> 'mult' (0) port 1 over 5 registers
  'mult' (1) -> 'mult' (1) port 1 over 0 registers
  'cons' (0) -> 'mult' (1) port 0 over 2 registers
connections in general binding container:
  'register' (1) port 0 -> 'mult' (1) port 0
    active in t=0
  'mult' (1) port 0 -> 'mult' (1) port 1
    active in t=0
  'register' (7) port 0 -> 'mult' (0) port 1
    active in t=0
  'mult' (1) port 0 -> 'memW' (0) port 0
    active in t=1
  'mult' (0) port 0 -> 'mult' (1) port 1
    active in t=1
  'register' (2) port 0 -> 'mult' (1) port 0
    active in t=1
  'memR' (0) port 0 -> 'mult' (0) port 0
    active in t=0
  'register' (6) port 0 -> 'register' (7) port 0
    active in t=0
    active in t=1
  'register' (5) port 0 -> 'register' (6) port 0
    active in t=0
    active in t=1
  'register' (4) port 0 -> 'register' (5) port 0
    active in t=0
    active in t=1
  'register' (3) port 0 -> 'register' (4) port 0
    active in t=0
    active in t=1
  'mult' (1) port 0 -> 'register' (3) port 0
    active in t=0
    active in t=1
  'memR' (1) port 0 -> 'register' (2) port 0
    active in t=0
    active in t=1
  'register' (0) port 0 -> 'register' (1) port 0
    active in t=0
    active in t=1
  'cons' (0) port 0 -> 'register' (0) port 0
    active in t=0
    active in t=1
register enable times:
  reg #0: 
    0
    1
  reg #1: 
    0
    1
  reg #2: 
    0
    1
  reg #3: 
    0
    1
  reg #4: 
    0
    1
  reg #5: 
    0
    1
  reg #6: 
    0
    1
  reg #7: 
    0
    1
ILP-based binding finished
ILP-based binding is valid
ILP-based implementation multiplexer costs: 7
ILP-based implementation number of 2x1 multiplexers: 2
ILP-based implementation register costs: 8
<end of output>
Test time =   0.05 sec
----------------------------------------------------------
Test Passed.
"treeBind" end time: May 06 14:23 CEST
"treeBind" time elapsed: 00:00:00
----------------------------------------------------------

25/28 Testing: treeBindCommutative
25/28 Test: treeBindCommutative
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=TREEBINDCOMMUTATIVE"
Directory: /home/bkessler/Repositories/hatschet
"treeBindCommutative" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
Integer-II Schedule with II = 2:
  x0 - 0
  x1 - 1
  c - 0
  mult0 - 1
  mult1 - 2
  y0 - 2
  y1 - 3
TreeBind::bind: fixed binding 'c' -> '0'
TreeBind::iterativeTreeSearch: start
TreeBind::iterativeTreeSearch: initialized stack

TreeBind::iterativeTreeSearch: start new iteration (1)
  elapsed time = 0
  next vertex: y1
  remaining stack: 
    empty
  removed binding info for 'y1'
  removed binding info for 'y0'
  removed binding info for 'mult1'
  removed binding info for 'mult0'
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'y1' to FU 0
  did not hit leaf node
  remaining stack after iteration 1: 
    y0 - 0
  resource bindings after iteration 1:
    c -> 0
    y1 -> 0
  current fu connections:
    empty
  multiplexer costs: 0
  register costs: 0
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (2)
  elapsed time = 0
  next vertex: y0
  remaining stack: 
    empty
  removed binding info for 'y0'
  removed binding info for 'mult1'
  removed binding info for 'mult0'
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'y0' to FU 0
  did not hit leaf node
  remaining stack after iteration 2: 
    mult1 - 0
    mult1 - 0
  resource bindings after iteration 2:
    c -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    empty
  multiplexer costs: 0
  register costs: 0
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (3)
  elapsed time = 0
  next vertex: mult1
  remaining stack: 
    mult1 - 0
  removed binding info for 'mult1'
  removed binding info for 'mult0'
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'mult1' to FU 0
  did not hit leaf node
  remaining stack after iteration 3: 
    mult0 - 0
    mult0 - 0
    mult1 - 0
  resource bindings after iteration 3:
    c -> 0
    mult1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 2
  register costs: 2
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (4)
  elapsed time = 0
  next vertex: mult0
  remaining stack: 
    mult0 - 0
    mult1 - 0
  removed binding info for 'mult0'
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'mult0' to FU 0
  did not hit leaf node
  remaining stack after iteration 4: 
    x1 - 0
    mult0 - 0
    mult1 - 0
  resource bindings after iteration 4:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '0' over '1' lifetime registers
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 3
  register costs: 2
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (5)
  elapsed time = 0
  next vertex: x1
  remaining stack: 
    mult0 - 0
    mult1 - 0
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'x1' to FU 0
  did not hit leaf node
  remaining stack after iteration 5: 
    x0 - 0
    mult0 - 0
    mult1 - 0
  resource bindings after iteration 5:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    x1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '0' over '1' lifetime registers
    memR (0) -> mult (0) port '0' over '0' lifetime registers
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 4
  register costs: 2
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (6)
  elapsed time = 0
  next vertex: x0
  remaining stack: 
    mult0 - 0
    mult1 - 0
  removed binding info for 'x0'
  added binding info for 'x0' to FU 0
  hit leaf node
  updated best solution
  remaining stack after iteration 6: 
    mult0 - 0
    mult1 - 0
  resource bindings after iteration 6:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    x0 -> 0
    x1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    memR (0) -> mult (0) port '1' over '0' lifetime registers
    cons (0) -> mult (0) port '0' over '1' lifetime registers
    memR (0) -> mult (0) port '0' over '0' lifetime registers
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 5
  register costs: 2
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (7)
  elapsed time = 0
  next vertex: mult0
  remaining stack: 
    mult1 - 0
    start removing binding info for vertex 'mult0' to FU 0
  removed binding info for 'mult0'
    start removing binding info for vertex 'x1' to FU 0
  removed binding info for 'x1'
    start removing binding info for vertex 'x0' to FU 0
  removed binding info for 'x0'
  added binding info for 'mult0' to FU 0
  did not hit leaf node
  could not prune search space
  remaining stack after iteration 7: 
    x1 - 0
    mult1 - 0
  resource bindings after iteration 7:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '1' over '1' lifetime registers
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 3
  register costs: 2
  updated elapsed time (0); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (8)
  elapsed time = 0
  next vertex: x1
  remaining stack: 
    mult1 - 0
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'x1' to FU 0
  did not hit leaf node
  could not prune search space
  remaining stack after iteration 8: 
    x0 - 0
    mult1 - 0
  resource bindings after iteration 8:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    x1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '1' over '1' lifetime registers
    memR (0) -> mult (0) port '0' over '0' lifetime registers
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 4
  register costs: 2
  updated elapsed time (0.001); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (9)
  elapsed time = 0.001
  next vertex: x0
  remaining stack: 
    mult1 - 0
  removed binding info for 'x0'
  added binding info for 'x0' to FU 0
  hit leaf node
  updated best solution
  remaining stack after iteration 9: 
    mult1 - 0
  resource bindings after iteration 9:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    x0 -> 0
    x1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    memR (0) -> mult (0) port '0' over '0' lifetime registers
    cons (0) -> mult (0) port '1' over '1' lifetime registers
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 4
  register costs: 2
  updated elapsed time (0.001); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (10)
  elapsed time = 0.001
  next vertex: mult1
  remaining stack: 
    empty
    start removing binding info for vertex 'mult1' to FU 0
  removed binding info for 'mult1'
    start removing binding info for vertex 'mult0' to FU 0
  removed binding info for 'mult0'
    start removing binding info for vertex 'x1' to FU 0
  removed binding info for 'x1'
    start removing binding info for vertex 'x0' to FU 0
  removed binding info for 'x0'
  added binding info for 'mult1' to FU 0
  did not hit leaf node
  could not prune search space
  remaining stack after iteration 10: 
    mult0 - 0
    mult0 - 0
  resource bindings after iteration 10:
    c -> 0
    mult1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '0' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 2
  register costs: 2
  updated elapsed time (0.001); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (11)
  elapsed time = 0.001
  next vertex: mult0
  remaining stack: 
    mult0 - 0
  removed binding info for 'mult0'
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'mult0' to FU 0
  did not hit leaf node
  could not prune search space
  remaining stack after iteration 11: 
    x1 - 0
    mult0 - 0
  resource bindings after iteration 11:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '0' over '1' lifetime registers
    cons (0) -> mult (0) port '0' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 3
  register costs: 2
  updated elapsed time (0.001); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (12)
  elapsed time = 0.001
  next vertex: x1
  remaining stack: 
    mult0 - 0
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'x1' to FU 0
  did not hit leaf node
  pruned search space because
    current register costs: 2
    current multiplexer costs: 4
    best register costs: 2
    best multiplexer costs: 4
    max register costs: inf
    max multiplexer costs: inf

TreeBind::iterativeTreeSearch: start new iteration (13)
  elapsed time = 0.001
  next vertex: mult0
  remaining stack: 
    empty
    start removing binding info for vertex 'mult0' to FU 0
  removed binding info for 'mult0'
    start removing binding info for vertex 'x1' to FU 0
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'mult0' to FU 0
  did not hit leaf node
  could not prune search space
  remaining stack after iteration 13: 
    x1 - 0
  resource bindings after iteration 13:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    y0 -> 0
    y1 -> 0
  current fu connections:
    cons (0) -> mult (0) port '1' over '1' lifetime registers
    cons (0) -> mult (0) port '0' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 3
  register costs: 2
  updated elapsed time (0.001); starting new iteration now...

TreeBind::iterativeTreeSearch: start new iteration (14)
  elapsed time = 0.001
  next vertex: x1
  remaining stack: 
    empty
  removed binding info for 'x1'
  removed binding info for 'x0'
  added binding info for 'x1' to FU 0
  did not hit leaf node
  pruned search space because
    current register costs: 2
    current multiplexer costs: 4
    best register costs: 2
    best multiplexer costs: 4
    max register costs: inf
    max multiplexer costs: inf
TreeBind::iterativeTreeSearch: found optimum solution
TreeBind::bind: found solution after 14 iterations
  status: OPTIMAL
  explored 2 of 4 leaf nodes
  times: 
    iteration_add_binding_info: 0.000235 sec
    iteration_calc_costs: 0.000383 sec
    iteration_remove_binding_info: 0.00024 sec
    iteration_stack_popping: 0.000243 sec
    iteration_stack_pushing: 9.4e-05 sec
    startup: 0 sec
    total_time: 0.001985 sec
  final resource bindings:
    c -> 0
    mult0 -> 0
    mult1 -> 0
    x0 -> 0
    x1 -> 0
    y0 -> 0
    y1 -> 0
  final fu connections:
    memR (0) -> mult (0) port '0' over '0' lifetime registers
    cons (0) -> mult (0) port '1' over '1' lifetime registers
    cons (0) -> mult (0) port '1' over '2' lifetime registers
    mult (0) -> memW (0) port '0' over '0' lifetime registers
  multiplexer costs: 4
  register costs: 2
  objective: 1 * 4 + 1 * 2
FU bindings:
  'c' -> 'cons' (0)
  'mult0' -> 'mult' (0)
  'mult1' -> 'mult' (0)
  'x0' -> 'memR' (0)
  'x1' -> 'memR' (0)
  'y0' -> 'memW' (0)
  'y1' -> 'memW' (0)
connections in register chain binding container:
  'memR' (0) -> 'mult' (0) port 0 over 0 registers
  'cons' (0) -> 'mult' (0) port 1 over 1 registers
  'cons' (0) -> 'mult' (0) port 1 over 2 registers
  'mult' (0) -> 'memW' (0) port 0 over 0 registers
connections in general binding container:
  'mult' (0) port 0 -> 'memW' (0) port 0
    active in t=0
    active in t=1
  'register' (1) port 0 -> 'mult' (0) port 1
    active in t=0
  'register' (0) port 0 -> 'mult' (0) port 1
    active in t=1
  'memR' (0) port 0 -> 'mult' (0) port 0
    active in t=0
    active in t=1
  'register' (0) port 0 -> 'register' (1) port 0
    active in t=0
    active in t=1
  'cons' (0) port 0 -> 'register' (0) port 0
    active in t=0
    active in t=1
register enable times:
  reg #0: 
    0
    1
  reg #1: 
    0
    1
tree-based binding finished
tree-based binding is valid
tree-based implementation multiplexer costs: 4
tree-based implementation number of 2x1 multiplexers: 1
tree-based implementation register costs: 2
FU bindings:
  'c' -> 'cons' (0)
  'mult0' -> 'mult' (0)
  'mult1' -> 'mult' (0)
  'x0' -> 'memR' (0)
  'x1' -> 'memR' (0)
  'y0' -> 'memW' (0)
  'y1' -> 'memW' (0)
connections in register chain binding container:
  'memR' (0) -> 'mult' (0) port 1 over 0 registers
  'mult' (0) -> 'memW' (0) port 0 over 0 registers
  'cons' (0) -> 'mult' (0) port 0 over 1 registers
  'cons' (0) -> 'mult' (0) port 0 over 2 registers
connections in general binding container:
  'register' (1) port 0 -> 'mult' (0) port 0
    active in t=0
  'register' (0) port 0 -> 'mult' (0) port 0
    active in t=1
  'mult' (0) port 0 -> 'memW' (0) port 0
    active in t=0
    active in t=1
  'memR' (0) port 0 -> 'mult' (0) port 1
    active in t=0
    active in t=1
  'register' (0) port 0 -> 'register' (1) port 0
    active in t=0
    active in t=1
  'cons' (0) port 0 -> 'register' (0) port 0
    active in t=0
    active in t=1
register enable times:
  reg #0: 
    0
    1
  reg #1: 
    0
    1
ILP-based binding finished
ILP-based binding is valid
ILP-based implementation multiplexer costs: 4
ILP-based implementation number of 2x1 multiplexers: 1
ILP-based implementation register costs: 2
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Passed.
"treeBindCommutative" end time: May 06 14:23 CEST
"treeBindCommutative" time elapsed: 00:00:00
----------------------------------------------------------

26/28 Testing: congBind
26/28 Test: congBind
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=ILPBASEDINTIIBINDINGCONG"
Directory: /home/bkessler/Repositories/hatschet
"congBind" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
libScaLP-CPLEX.so: cannot open shared object file: No such file or directory
ED97: min/maxII = 2 2, (minResII/minRecII 1.5 / 1)
ED97: solver timeout = 300 (sec)
ED97: attempt II=2
ED97: solver timeout = 300 (sec)
ED97: found optimal solution with II=2
  vertex_1 - 0
  vertex_2 - 0
  vertex_3 - 0
  vertex_4 - 0
  vertex_5 - 0
  vertex_6 - 0
  vertex_7 - 1
ED97: solving time was 0.000941 seconds
resource bindings:
  binding 'vertex_1' to FU '2'
  binding 'vertex_2' to FU '0'
  binding 'vertex_3' to FU '3'
  binding 'vertex_4' to FU '1'
  binding 'vertex_5' to FU '1'
  binding 'vertex_6' to FU '0'
  binding 'vertex_7' to FU '1'
connections:
  'add' (0) -> '0' (add) port 1
  'add' (1) -> '0' (add) port 1
  'mem' (1) -> '0' (add) port 0
  'mem' (3) -> '0' (add) port 0
  'mem' (0) -> '0' (add) port 1
  'mem' (2) -> '0' (add) port 1
<end of output>
Test time =   0.04 sec
----------------------------------------------------------
Test Passed.
"congBind" end time: May 06 14:23 CEST
"congBind" time elapsed: 00:00:00
----------------------------------------------------------

27/28 Testing: CaDiCaL
27/28 Test: CaDiCaL
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=CADICAL"
Directory: /home/bkessler/Repositories/hatschet
"CaDiCaL" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
CaDiCaL-Test started...
c opening file to read 'SATTest/SATTest.cnf'
c found 'p cnf 5 9' header
c parsed 9 clauses in 0.00 seconds process time
c closing file 'SATTest/SATTest.cnf'
c after reading 544 bytes 0.0 MB
Problem is SATISFIABLE...
-1 2 3 -4 -5 
Zappel-Jupp and Narben-Johny are TRUE criminals... ARREST them!!!
Test passed..
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"CaDiCaL" end time: May 06 14:23 CEST
"CaDiCaL" time elapsed: 00:00:00
----------------------------------------------------------

28/28 Testing: Z3
28/28 Test: Z3
Command: "/home/bkessler/Repositories/hatschet/hatschet" "--test=Z3"
Directory: /home/bkessler/Repositories/hatschet
"Z3" start time: May 06 14:23 CEST
Output:
----------------------------------------------------------
de-Morgan example
(declare-fun y () Bool)
(declare-fun x () Bool)
(assert (not (= (not (and x y)) (or (not x) (not y)))))

; 
(set-info :status unknown)
(declare-fun y () Bool)
(declare-fun x () Bool)
(assert
 (let (($x9 (or (not x) (not y))))
 (let (($x12 (= (not (and x y)) $x9)))
 (not $x12))))
(check-sat)
unsat

De-Morgan is valid
<end of output>
Test time =   0.04 sec
----------------------------------------------------------
Test Passed.
"Z3" end time: May 06 14:23 CEST
"Z3" time elapsed: 00:00:00
----------------------------------------------------------

End testing: May 06 14:23 CEST
